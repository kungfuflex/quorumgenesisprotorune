(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (param i32 i32) (result i32)))
 (type $2 (func (result i32)))
 (type $3 (func (param i32 i32 i32) (result i32)))
 (type $4 (func (param i32 i32 i32 i32) (result i32)))
 (type $5 (func))
 (type $6 (func (param i32 i32)))
 (type $7 (func (param i32 i32 i32)))
 (type $8 (func (param i32)))
 (type $9 (func (param i32) (result i64)))
 (type $10 (func (param i32 i32 i32 i32)))
 (type $11 (func (param i64) (result i32)))
 (type $12 (func (param i32 i64) (result i32)))
 (type $13 (func (param i64 i64 i64 i64) (result i64)))
 (type $14 (func (param i32 i64)))
 (type $15 (func (param i32 i32 i64)))
 (type $16 (func (param i32 i32) (result i64)))
 (type $17 (func (param i32 i64 i32)))
 (type $18 (func (param i32) (result f64)))
 (type $19 (func (param i64 i32) (result i32)))
 (type $20 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $21 (func (param i32 i32 i32 i32 i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "__get_len" (func $~lib/metashrew-as/assembly/indexer/index/__get_len (param i32) (result i32)))
 (import "env" "__get" (func $~lib/metashrew-as/assembly/indexer/index/__get (param i32 i32)))
 (import "env" "__log" (func $~lib/metashrew-as/assembly/utils/logging/__log (param i32)))
 (import "env" "__host_len" (func $~lib/metashrew-as/assembly/indexer/index/__host_len (result i32)))
 (import "env" "__load_input" (func $~lib/metashrew-as/assembly/indexer/index/__load_input (param i32)))
 (import "env" "__flush" (func $~lib/metashrew-as/assembly/indexer/index/__flush (param i32)))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/metashrew-as/assembly/indexer/index/_updates (mut i32) (i32.const 0))
 (global $~lib/metashrew-as/assembly/indexer/index/_updateKeys (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/protocol (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/PROTORUNE (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/OUTPOINT_TO_RUNES (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/SYMBOL (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/SPACERS (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/DIVISIBILITY (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/ETCHINGS (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/RUNE_ID_TO_ETCHING (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/protorune/ETCHING_TO_RUNE_ID (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/PROTOCOLS_TO_INDEX (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/HEIGHT_TO_BLOCKHASH (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/BLOCKHASH_TO_HEIGHT (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/OUTPOINT_TO_RUNES (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/HEIGHT_TO_TRANSACTION_IDS (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/SYMBOL (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/CAP (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/SPACERS (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/OFFSETEND (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/OFFSETSTART (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/HEIGHTSTART (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/HEIGHTEND (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/AMOUNT (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/MINTS_REMAINING (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/PREMINE (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/DIVISIBILITY (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/RUNE_ID_TO_HEIGHT (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/ETCHINGS (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID (mut i32) (i32.const 0))
 (global $~lib/as-bignum/assembly/globals/__res128_hi (mut i64) (i64.const 0))
 (global $assembly/indexer/constants/index/MINIMUM_NAME (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/TWENTY_SIX (mut i32) (i32.const 0))
 (global $assembly/indexer/constants/index/RESERVED_NAME (mut i32) (i32.const 0))
 (global $~lib/metashrew-spendables/assembly/tables/OUTPOINTS_FOR_ADDRESS (mut i32) (i32.const 0))
 (global $~lib/metashrew-spendables/assembly/tables/OUTPOINT_SPENDABLE_BY (mut i32) (i32.const 0))
 (global $~lib/metashrew-spendables/assembly/tables/OUTPOINT_TO_OUTPUT (mut i32) (i32.const 0))
 (global $~lib/as-bignum/assembly/globals/__divmod_quot_hi (mut i64) (i64.const 0))
 (global $~lib/as-bignum/assembly/globals/__divmod_rem_lo (mut i64) (i64.const 0))
 (global $~lib/as-bignum/assembly/globals/__divmod_rem_hi (mut i64) (i64.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 18560))
 (memory $0 1)
 (data $0 (i32.const 1036) "\1c\02")
 (data $0.1 (i32.const 1048) "\04\00\00\00\00\02\00\00000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff")
 (data $1 (i32.const 1580) "<")
 (data $1.1 (i32.const 1592) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data $2 (i32.const 1644) "<")
 (data $2.1 (i32.const 1656) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00s\00t\00u\00b\00.\00t\00s")
 (data $3 (i32.const 1708) "\1c\02")
 (data $3.1 (i32.const 1720) "\04\00\00\00\00\02\00\00000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff")
 (data $4 (i32.const 2252) "\1c\01")
 (data $4.1 (i32.const 2264) "\01\00\00\00\00\01\00\00\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\r8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
 (data $5 (i32.const 2540) ",")
 (data $5.1 (i32.const 2552) "\06\00\00\00\10\00\00\00\e0\08\00\00\e0\08\00\00\00\01\00\00@")
 (data $6 (i32.const 2588) ",")
 (data $6.1 (i32.const 2600) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data $7 (i32.const 2636) "<")
 (data $7.1 (i32.const 2648) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data $8 (i32.const 2700) ",")
 (data $8.1 (i32.const 2712) "\02\00\00\00\14\00\00\00u\00s\00e\00 \00s\00t\00r\00i\00c\00t")
 (data $9 (i32.const 2748) "\1c")
 (data $9.1 (i32.const 2760) "\02\00\00\00\02\00\00\001")
 (data $10 (i32.const 2780) "<")
 (data $10.1 (i32.const 2792) "\02\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e")
 (data $11 (i32.const 2844) ",")
 (data $11.1 (i32.const 2856) "\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data $12 (i32.const 2892) "\1c\01")
 (data $12.1 (i32.const 2904) "\04\00\00\00\00\01")
 (data $12.2 (i32.const 2960) "\0f\00\n\11\15\14\1a\1e\07\05")
 (data $12.3 (i32.const 3009) "\1d\00\18\r\19\t\08\17\00\12\16\1f\1b\13\00\01\00\03\10\0b\1c\0c\0e\06\04\02")
 (data $13 (i32.const 3180) "<")
 (data $13.1 (i32.const 3192) "\04\00\00\00 \00\00\00qpzry9x8gf2tvdw0s3jn54khce6mua7l")
 (data $14 (i32.const 3244) "L")
 (data $14.1 (i32.const 3256) "\04\00\00\00:\00\00\00123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
 (data $15 (i32.const 3324) "<")
 (data $15.1 (i32.const 3336) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data $16 (i32.const 3388) "<")
 (data $16.1 (i32.const 3400) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $17 (i32.const 3452) ",")
 (data $17.1 (i32.const 3464) "\02\00\00\00\16\00\00\00/\00r\00u\00n\00e\00/\00p\00r\00o\00t\00o")
 (data $18 (i32.const 3500) ",")
 (data $18.1 (i32.const 3512) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $19 (i32.const 3548) "\1c")
 (data $19.1 (i32.const 3560) "\0c\00\00\00\08\00\00\00\01")
 (data $20 (i32.const 3580) "\1c")
 (data $20.1 (i32.const 3592) "\r\00\00\00\08\00\00\00\02")
 (data $21 (i32.const 3612) "<")
 (data $21.1 (i32.const 3624) "\02\00\00\00$\00\00\00/\00r\00u\00n\00e\00s\00/\00b\00y\00o\00u\00t\00p\00o\00i\00n\00t\00/")
 (data $22 (i32.const 3676) "<")
 (data $22.1 (i32.const 3688) "\02\00\00\00\1e\00\00\00/\00t\00x\00i\00d\00s\00/\00b\00y\00h\00e\00i\00g\00h\00t")
 (data $23 (i32.const 3740) ",")
 (data $23.1 (i32.const 3752) "\02\00\00\00\1c\00\00\00/\00r\00u\00n\00e\00s\00/\00s\00y\00m\00b\00o\00l\00/")
 (data $24 (i32.const 3788) ",")
 (data $24.1 (i32.const 3800) "\02\00\00\00\1c\00\00\00/\00r\00u\00n\00e\00s\00/\00s\00p\00a\00c\00e\00s\00/")
 (data $25 (i32.const 3836) "<")
 (data $25.1 (i32.const 3848) "\02\00\00\00(\00\00\00/\00r\00u\00n\00e\00s\00/\00d\00i\00v\00i\00s\00i\00b\00i\00l\00i\00t\00y\00/")
 (data $26 (i32.const 3900) ",")
 (data $26.1 (i32.const 3912) "\02\00\00\00\18\00\00\00/\00r\00u\00n\00e\00s\00/\00n\00a\00m\00e\00s")
 (data $27 (i32.const 3948) "<")
 (data $27.1 (i32.const 3960) "\02\00\00\00$\00\00\00/\00e\00t\00c\00h\00i\00n\00g\00/\00b\00y\00r\00u\00n\00e\00i\00d\00/")
 (data $28 (i32.const 4012) "<")
 (data $28.1 (i32.const 4024) "\02\00\00\00$\00\00\00/\00r\00u\00n\00e\00i\00d\00/\00b\00y\00e\00t\00c\00h\00i\00n\00g\00/")
 (data $29 (i32.const 4076) "<")
 (data $29.1 (i32.const 4088) "\02\00\00\00(\00\00\00/\00b\00l\00o\00c\00k\00h\00a\00s\00h\00/\00b\00y\00h\00e\00i\00g\00h\00t\00/")
 (data $30 (i32.const 4140) "<")
 (data $30.1 (i32.const 4152) "\02\00\00\00(\00\00\00/\00h\00e\00i\00g\00h\00t\00/\00b\00y\00b\00l\00o\00c\00k\00h\00a\00s\00h\00/")
 (data $31 (i32.const 4204) "<")
 (data $31.1 (i32.const 4216) "\02\00\00\00&\00\00\00/\00h\00e\00i\00g\00h\00t\00/\00b\00y\00o\00u\00t\00p\00o\00i\00n\00t\00/")
 (data $32 (i32.const 4268) ",")
 (data $32.1 (i32.const 4280) "\02\00\00\00\16\00\00\00/\00r\00u\00n\00e\00s\00/\00c\00a\00p\00/")
 (data $33 (i32.const 4316) "<")
 (data $33.1 (i32.const 4328) "\02\00\00\00$\00\00\00/\00r\00u\00n\00e\00s\00/\00o\00f\00f\00s\00e\00t\00/\00e\00n\00d\00/")
 (data $34 (i32.const 4380) "<")
 (data $34.1 (i32.const 4392) "\02\00\00\00(\00\00\00/\00r\00u\00n\00e\00s\00/\00o\00f\00f\00s\00e\00t\00/\00s\00t\00a\00r\00t\00/")
 (data $35 (i32.const 4444) "<")
 (data $35.1 (i32.const 4456) "\02\00\00\00(\00\00\00/\00r\00u\00n\00e\00s\00/\00h\00e\00i\00g\00h\00t\00/\00s\00t\00a\00r\00t\00/")
 (data $36 (i32.const 4508) "<")
 (data $36.1 (i32.const 4520) "\02\00\00\00$\00\00\00/\00r\00u\00n\00e\00s\00/\00h\00e\00i\00g\00h\00t\00/\00e\00n\00d\00/")
 (data $37 (i32.const 4572) ",")
 (data $37.1 (i32.const 4584) "\02\00\00\00\1c\00\00\00/\00r\00u\00n\00e\00s\00/\00a\00m\00o\00u\00n\00t\00/")
 (data $38 (i32.const 4620) "L")
 (data $38.1 (i32.const 4632) "\02\00\00\00.\00\00\00/\00r\00u\00n\00e\00s\00/\00m\00i\00n\00t\00s\00-\00r\00e\00m\00a\00i\00n\00i\00n\00g\00/")
 (data $39 (i32.const 4700) "<")
 (data $39.1 (i32.const 4712) "\02\00\00\00\1e\00\00\00/\00r\00u\00n\00e\00s\00/\00p\00r\00e\00m\00i\00n\00e\00/")
 (data $40 (i32.const 4764) "<")
 (data $40.1 (i32.const 4776) "\02\00\00\00\"\00\00\00/\00h\00e\00i\00g\00h\00t\00/\00b\00y\00r\00u\00n\00e\00i\00d\00/")
 (data $41 (i32.const 4828) "<")
 (data $41.1 (i32.const 4840) "\02\00\00\00\"\00\00\009\009\002\004\006\001\001\004\009\002\008\001\004\009\004\006\002")
 (data $42 (i32.const 4892) ",")
 (data $42.1 (i32.const 4904) "\02\00\00\00\1a\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00r\00a\00d\00i\00x")
 (data $43 (i32.const 4940) "\\")
 (data $43.1 (i32.const 4952) "\02\00\00\00@\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00u\00t\00i\00l\00s\00.\00t\00s")
 (data $44 (i32.const 5037) "\01\02\03\04\05\06\07\08\t$$$$$$$\n\0b\0c\r\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#$$$$$$\n\0b\0c\r\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#")
 (data $45 (i32.const 5116) "\\")
 (data $45.1 (i32.const 5128) "\02\00\00\00J\00\00\006\004\000\002\003\006\004\003\006\003\004\001\005\004\004\003\006\000\003\002\002\008\005\004\001\002\005\009\009\003\006\002\001\001\009\002\006")
 (data $46 (i32.const 5212) "<")
 (data $46.1 (i32.const 5224) "\02\00\00\00*\00\00\00/\00o\00u\00t\00p\00o\00i\00n\00t\00s\00/\00b\00y\00a\00d\00d\00r\00e\00s\00s\00/")
 (data $47 (i32.const 5276) "<")
 (data $47.1 (i32.const 5288) "\02\00\00\00,\00\00\00/\00o\00u\00t\00p\00o\00i\00n\00t\00/\00s\00p\00e\00n\00d\00a\00b\00l\00e\00b\00y\00/")
 (data $48 (i32.const 5340) "<")
 (data $48.1 (i32.const 5352) "\02\00\00\00&\00\00\00/\00o\00u\00t\00p\00u\00t\00/\00b\00y\00o\00u\00t\00p\00o\00i\00n\00t\00/")
 (data $49 (i32.const 5404) "\1c")
 (data $49.1 (i32.const 5416) "\02\00\00\00\n\00\00\00/\00t\00e\00s\00t")
 (data $50 (i32.const 5436) "\1c")
 (data $50.1 (i32.const 5448) "\02\00\00\00\08\00\00\00t\00e\00s\00t")
 (data $51 (i32.const 5468) "\1c")
 (data $51.1 (i32.const 5480) "\02\00\00\00\n\00\00\00/\00m\00a\00s\00k")
 (data $52 (i32.const 5500) "<")
 (data $52.1 (i32.const 5512) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data $53 (i32.const 5564) ",")
 (data $53.1 (i32.const 5576) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data $54 (i32.const 5612) "|")
 (data $54.1 (i32.const 5624) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data $55 (i32.const 5740) "<")
 (data $55.1 (i32.const 5752) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data $56 (i32.const 5804) "\1c")
 (data $56.1 (i32.const 5816) "\02\00\00\00\02\00\00\000")
 (data $57 (i32.const
 (data $58 (i32.const 6236) "\1c\04")
 (data $58.1 (i32.const 6248) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data $59 (i32.const 7292) "\\")
 (data $59.1 (i32.const 7304) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data $60 (i32.const 7388) "\1c")
 (data $60.1 (i32.const 7400) "\02")
 (data $61 (i32.const 7420) "|")
 (data $61.1 (i32.const 7432) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data $62 (i32.const 7548) "<")
 (data $62.1 (i32.const 7560) "\02\00\00\00,\00\00\00Q\00U\00O\00R\00U\00M\00G\00E\00N\00E\00S\00I\00S\00P\00R\00O\00T\00O\00R\00U\00N\00E")
 (data $63 (i32.const 7612) "\1c")
 (data $63.1 (i32.const 7624) "&\00\00\00\08\00\00\00\03")
 (data $64 (i32.const 7644) "|")
 (data $64.1 (i32.const 7656) "\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00m\00e\00t\00a\00s\00h\00r\00e\00w\00-\00a\00s\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00l\00o\00c\00k\00d\00a\00t\00a\00/\00i\00n\00s\00c\00r\00i\00p\00t\00i\00o\00n\00.\00t\00s")
 (data $65 (i32.const 7772) "\1c")
 (data $65.1 (i32.const 7784) "3\00\00\00\08\00\00\00\04")
 (data $66 (i32.const 7804) ",")
 (data $66.1 (i32.const 7816) "\02\00\00\00\1a\00\00\00n\00o\00 \00c\00o\00m\00m\00i\00t\00m\00e\00n\00t")
 (data $67 (i32.const 7852) "<")
 (data $67.1 (i32.const 7864) "\02\00\00\00 \00\00\00c\00o\00m\00m\00i\00t\00m\00e\00n\00t\00 \00f\00o\00u\00n\00d")
 (data $68 (i32.const 7916) "<")
 (data $68.1 (i32.const 7928) "\02\00\00\00 \00\00\00D\00i\00v\00i\00s\00i\00o\00n\00 \00b\00y\00 \00z\00e\00r\00o")
 (data $69 (i32.const 7980) "\\")
 (data $69.1 (i32.const 7992) "\02\00\00\00D\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00g\00l\00o\00b\00a\00l\00s\00.\00t\00s")
 (data $70 (i32.const 8076) "<")
 (data $70.1 (i32.const 8088) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $71 (i32.const 8140) "l")
 (data $71.1 (i32.const 8152) "\02\00\00\00N\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00g\00e\00r\00/\00u\001\002\008\00.\00t\00s")
 (data $72 (i32.const 8252) "l")
 (data $72.1 (i32.const 8264) "\02\00\00\00N\00\00\00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \001\000\00 \00o\00r\00 \001\006")
 (data $73 (i32.const 8364) "<")
 (data $73.1 (i32.const 8376) "\02\00\00\00 \00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f")
 (data $74 (i32.const 8428) "<")
 (data $74.1 (i32.const 8440) "\02\00\00\00\"\00\00\009\009\002\004\006\001\001\004\009\002\008\001\004\009\004\006\001")
 (data $75 (i32.const 8492) "|\t")
 (data $75.1 (i32.const 8504) "\02\00\00\00h\t\00\000\002\000\000\000\000\000\000\000\000\000\001\000\002\008\001\007\006\003\00d\006\000\007\00e\007\005\009\009\00d\00d\00e\007\003\002\00f\00a\002\00c\003\00e\007\00b\005\003\00f\00f\004\00c\003\00d\000\009\007\00c\00e\008\009\002\008\007\00f\00c\002\007\006\00d\008\00d\00f\00e\009\00e\008\008\006\004\009\002\000\002\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\00d\00f\009\00c\005\007\00a\008\003\00f\009\000\000\00c\000\009\00f\00a\00a\00e\009\003\006\008\006\00b\00d\00f\006\006\002\00d\009\00c\00c\00b\005\00e\00a\00b\002\002\00c\009\00b\003\001\008\004\00a\000\007\001\006\006\004\00e\00b\001\008\00e\008\006\005\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\007\008\000\003\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\001\00a\000\002\000\005\000\009\00b\00f\00f\004\009\006\00a\000\00e\00e\00f\004\00b\009\004\004\004\00f\008\000\004\00e\002\004\00c\009\003\009\004\00a\000\004\003\00e\008\00e\007\001\009\006\005\00b\00a\00a\002\000\000\00a\00b\00b\00c\004\00d\000\009\005\007\008\000\003\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\008\00f\004\004\002\005\007\000\00a\000\00d\00b\009\000\00e\005\00b\003\004\005\005\005\007\003\002\001\002\00c\008\00e\00d\00f\009\004\002\005\00c\00b\000\005\00b\00d\006\001\009\004\00e\007\000\007\006\006\00a\00a\001\007\00c\004\009\00b\003\00c\000\00c\001\000\002\007\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\00e\003\00a\002\00c\004\004\001\005\005\00e\008\000\00b\00b\00b\007\009\001\00f\000\001\002\001\008\009\003\003\009\002\00b\000\002\00f\008\000\004\00a\00a\000\007\003\006\000\00a\002\002\00b\001\008\008\006\001\00b\009\00b\008\00d\00d\001\003\005\00e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\00f\006\00a\005\00d\001\00c\000\002\000\001\000\004\00c\004\00a\001\00a\008\00e\001\008\00b\00b\00d\008\00a\00f\005\008\00c\008\003\000\001\000\003\008\008\000\008\000\005\00c\008\005\003\000\006\008\000\00a\004\00c\00a\009\00d\004\00e\001\006\000\002\002\000\004\00e\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\000\000\00b\009\006\006\005\00e\003\00d\005\006\004\00a\009\009\00f\000\00f\002\000\00d\007\008\002\009\00f\005\008\00f\002\00a\004\003\00e\000\00a\006\000\00c\00c\004\000\009\002\001\00d\008\00b\003\002\00d\001\009\008\005\00c\000\00b\007\00b\004\00e\007\000\001\004\000\004\003\006\00f\002\005\009\00c\00a\004\003\00d\00c\00b\005\005\008\008\008\005\008\005\006\00e\009\00f\00e\003\00b\00e\00d\00e\00e\005\00b\00d\00e\00c\007\005\00b\007\001\004\00a\007\009\00c\005\004\004\005\00e\00d\003\00b\00b\005\006\00d\00c\004\001\004\00b\00a\00f\002\000\009\00a\00d\004\000\00e\00e\004\003\00a\008\000\001\001\005\00c\004\00c\007\006\003\009\001\001\005\009\007\00b\003\004\00e\009\00c\001\00a\004\009\00b\00f\00c\009\00d\005\002\00e\00b\003\004\004\00b\00d\008\00b\001\007\006\004\00c\005\000\003\004\000\002\005\001\00d\004\006\00d\009\006\009\001\004\00b\007\003\002\001\005\004\00c\00a\009\00c\001\002\007\008\005\002\009\00e\003\00c\00a\001\004\007\001\004\007\007\000\00e\006\00a\000\007\00a\002\00c\006\00d\005\00f\005\00b\009\00d\005\001\00f\009\00b\006\00e\006\003\001\000\001\00a\002\00c\008\007\005\00d\004\002\00a\008\004\004\006\00f\00a\002\00f\006\006\00a\00a\00c\002\007\009\00e\002\005\00f\00a\00d\007\009\007\004\004\007\00d\006\007\000\00e\00b\007\00c\00c\001\001\001\00c\009\00e\000\006\00b\000\00d\008\001\002\000\00e\00d\002\004\007\003\001\003\005\009\007\00e\005\00e\00a\00d\00c\009\005\00a\000\009\00e\006\00c\003\004\006\004\003\00f\00d\004\00f\006\00e\00d\00d\004\00d\00a\00d\000\004\006\00c\00c\001\005\005\00d\005\006\000\009\00c\000\005\00a\008\001\006\001\001\00a\00c\000\000\006\003\000\003\006\00f\007\002\006\004\000\001\000\003\002\001\008\001\007\006\003\00d\006\000\007\00e\007\005\009\009\00d\00d\00e\007\003\002\00f\00a\002\00c\003\00e\007\00b\005\003\00f\00f\004\00c\003\00d\000\009\007\00c\00e\008\009\002\008\007\00f\00c\002\007\006\00d\008\00d\00f\00e\009\00e\008\008\006\004\009\002\000\001\000\001\000\00b\002\000\006\004\00e\00c\008\002\00c\004\001\007\002\007\00c\006\00d\00b\00a\000\00d\009\00d\006\001\005\005\009\004\003\006\00a\006\005\007\00a\00e\006\002\00c\00d\00b\009\004\004\006\002\000\005\006\00c\002\009\007\003\003\001\00e\008\006\008\000\000\004\00d\004\000\001\000\002\000\002\007\008\000\003\000\001\000\00d\000\009\00c\004\001\000\002\00a\00b\00c\00e\008\002\009\00e\00a\008\00c\004\001\006\008\002\001\00c\000\00e\00d\002\004\007\003\001\003\005\009\007\00e\005\00e\00a\00d\00c\009\005\00a\000\009\00e\006\00c\003\004\006\004\003\00f\00d\004\00f\006\00e\00d\00d\004\00d\00a\00d\000\004\006\00c\00c\001\005\005\00d\005\006\000\009\00c\000\005\00a\008\001\006\001\001\003\00f\00d\001\000\00c\000\000")
 (data $76 (i32.const 10924) "\8c\04")
 (data $76.1 (i32.const 10936) "\02\00\00\00t\04\00\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\00b\00a\003\00e\00d\00f\00d\007\00a\007\00b\001\002\00b\002\007\00a\00c\007\002\00c\003\00e\006\007\007\006\008\00f\006\001\007\00f\00c\008\001\00b\00c\003\008\008\008\00a\005\001\003\002\003\00a\009\00f\00b\008\00a\00a\004\00b\001\00e\005\00e\004\00a\002\009\00a\00b\005\00f\004\009\00f\00f\00f\00f\000\000\001\00d\001\00d\00a\00c\002\00b\007\00c\000\001\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\00f\00f\00f\00f\00f\00f\00f\00f\004\00d\000\004\00f\00f\00f\00f\000\000\001\00d\000\001\000\004\004\005\005\004\006\008\006\005\002\000\005\004\006\009\006\00d\006\005\007\003\002\000\003\000\003\003\002\00f\004\00a\006\001\006\00e\002\00f\003\002\003\000\003\000\003\009\002\000\004\003\006\008\006\001\006\00e\006\003\006\005\006\00c\006\00c\006\00f\007\002\002\000\006\00f\006\00e\002\000\006\002\007\002\006\009\006\00e\006\00b\002\000\006\00f\006\006\002\000\007\003\006\005\006\003\006\00f\006\00e\006\004\002\000\006\002\006\001\006\009\006\00c\006\00f\007\005\007\004\002\000\006\006\006\00f\007\002\002\000\006\002\006\001\006\00e\006\00b\007\003\00f\00f\00f\00f\00f\00f\00f\00f\000\001\000\000\00f\002\000\005\002\00a\000\001\000\000\000\000\000\000\004\003\004\001\000\004\006\007\008\00a\00f\00d\00b\000\00f\00e\005\005\004\008\002\007\001\009\006\007\00f\001\00a\006\007\001\003\000\00b\007\001\000\005\00c\00d\006\00a\008\002\008\00e\000\003\009\000\009\00a\006\007\009\006\002\00e\000\00e\00a\001\00f\006\001\00d\00e\00b\006\004\009\00f\006\00b\00c\003\00f\004\00c\00e\00f\003\008\00c\004\00f\003\005\005\000\004\00e\005\001\00e\00c\001\001\002\00d\00e\005\00c\003\008\004\00d\00f\007\00b\00a\000\00b\008\00d\005\007\008\00a\004\00c\007\000\002\00b\006\00b\00f\001\001\00d\005\00f\00a\00c\000\000\000\000\000\000\000\000")
 (data $77 (i32.const 12092) ",")
 (data $77.1 (i32.const 12104) "\02\00\00\00\1a\00\00\00U\00N\00C\00O\00M\00M\00O\00N\00G\00O\00O\00D\00S")
 (data $78 (i32.const 12140) "\1c")
 (data $78.1 (i32.const 12152) "\02\00\00\00\02\00\00\00\c9)")
 (data $79 (i32.const 12172) ",")
 (data $79.1 (i32.const 12184) "\02\00\00\00\0e\00\00\00/\00l\00e\00n\00g\00t\00h")
 (data $80 (i32.const 12220) "\1c")
 (data $80.1 (i32.const 12232) "\02\00\00\00\02\00\00\00/")
 (data $81 (i32.const 12252) "\\")
 (data $81.1 (i32.const 12264) "\02\00\00\00J\00\00\00M\00E\00T\00A\00S\00H\00R\00E\00W\00_\00R\00U\00N\00E\00S\00_\00L\00O\00G\00:\00:\00i\00n\00d\00e\00x\00i\00n\00g\00 \00b\00l\00o\00c\00k\00:\00 ")
 (data $82 (i32.const 12348) "|")
 (data $82.1 (i32.const 12360) "\02\00\00\00^\00\00\00S\00H\00A\002\005\006\00:\00 \00c\00a\00n\00\'\00t\00 \00u\00p\00d\00a\00t\00e\00 \00b\00e\00c\00a\00u\00s\00e\00 \00h\00a\00s\00h\00 \00w\00a\00s\00 \00f\00i\00n\00i\00s\00h\00e\00d\00.")
 (data $83 (i32.const 12476) "\\")
 (data $83.1 (i32.const 12488) "\02\00\00\00L\00\00\00~\00l\00i\00b\00/\00f\00a\00s\00t\00-\00s\00h\00a\002\005\006\00-\00a\00s\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00s\00h\00a\002\005\006\00.\00t\00s")
 (data $84 (i32.const 12572) "<")
 (data $84.1 (i32.const 12584) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00d\00a\00t\00a\00v\00i\00e\00w\00.\00t\00s")
 (data $85 (i32.const 12636) "<")
 (data $85.1 (i32.const 12648) "\02\00\00\00\"\00\00\00D\00e\00c\00o\00d\00e\00r\00 \00p\00o\00s\00i\00t\00i\00o\00n\00 ")
 (data $86 (i32.const 12700) "<")
 (data $86.1 (i32.const 12712) "\02\00\00\00\"\00\00\00 \00i\00s\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00!")
 (data $87 (i32.const 12764) "\1c\00\00\00\03\00\00\00\00\00\00\00B\00\00\00\0c\00\00\00p1\00\00\00\00\00\00\b01")
 (data $88 (i32.const 12796) "L")
 (data $88.1 (i32.const 12808) "\02\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00r\00o\00t\00o\00/\00p\00r\00o\00t\00o\00r\00u\00n\00e\00.\00t\00s")
 (data $89 (i32.const 12876) "\1c")
 (data $89.1 (i32.const 12888) "&\00\00\00\08\00\00\00\05")
 (data $90 (i32.const 12908) "\1c")
 (data $90.1 (i32.const 12920) "\02\00\00\00\0c\00\00\00/\00r\00u\00n\00e\00s")
 (data $91 (i32.const 12940) ",")
 (data $91.1 (i32.const 12952) "\02\00\00\00\12\00\00\00/\00b\00a\00l\00a\00n\00c\00e\00s")
 (data $92 (i32.const 12988) "\1c")
 (data $92.1 (i32.const 13000) "G\00\00\00\08\00\00\00\06")
 (data $93 (i32.const 13020) "\1c")
 (data $93.1 (i32.const 13032) "H\00\00\00\08\00\00\00\07")
 (data $94 (i32.const 13052) "\1c")
 (data $94.1 (i32.const 13064) "J\00\00\00\08\00\00\00\08")
 (data $95 (i32.const 13084) "\1c")
 (data $95.1 (i32.const 13096) "K\00\00\00\08\00\00\00\t")
 (data $96 (i32.const 13116) "\1c")
 (data $96.1 (i32.const 13128) "N\00\00\00\08\00\00\00\n")
 (data $97 (i32.const 13148) "\1c")
 (data $97.1 (i32.const 13160) "&\00\00\00\08\00\00\00\0b")
 (data $98 (i32.const 13180) "\1c")
 (data $98.1 (i32.const 13192) "Q\00\00\00\08\00\00\00\0c")
 (data $99 (i32.const 13212) "<\05")
 (data $99.1 (i32.const 13224) "\02\00\00\00(\05\00\000\002\000\000\000\000\000\000\000\000\000\001\000\001\007\00f\00b\009\00c\00c\009\004\001\00a\00a\000\00c\00a\003\00a\00a\00f\003\003\009\007\008\003\005\006\004\00d\002\00d\002\009\00e\00c\003\002\005\004\00a\009\001\002\008\00f\005\00d\004\009\00a\00d\003\00e\00e\00b\000\000\002\00a\00e\00b\004\000\00e\00c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\004\002\003\004\002\00a\006\00b\000\000\000\000\000\000\000\000\002\002\005\001\002\000\003\00b\008\00b\003\00a\00b\001\004\005\003\00e\00b\004\007\00e\002\00d\004\009\000\003\00b\009\006\003\007\007\006\006\008\000\00e\003\000\008\006\003\00d\00f\003\006\002\005\00d\003\00e\007\004\002\009\002\003\003\008\00a\00e\007\009\002\008\00d\00a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\004\006\00a\005\00d\002\001\000\002\000\007\000\004\00b\005\00e\001\00d\008\00e\001\00c\008\00e\00e\00b\007\008\008\00a\003\000\007\000\005\00a\000\002\00d\000\003\009\00f\003\00e\000\001\000\002\000\006\008\000\00d\00c\009\00a\00f\00d\002\008\000\008\00c\007\00e\008\004\003\000\00a\006\004\000\003\004\000\009\002\004\00b\002\006\002\004\004\001\006\004\000\002\00a\005\002\00e\00d\007\00c\00f\004\00e\00b\00a\006\00b\002\00c\005\003\005\00d\002\00d\00e\00f\008\00e\006\004\009\00a\007\004\00e\00d\009\007\00a\00a\00c\00a\005\00e\00c\005\004\008\008\001\00e\00f\003\00b\003\004\00d\00a\006\008\00b\00b\001\003\00d\007\006\00d\006\00b\004\002\000\00e\006\000\002\009\007\00a\009\002\004\007\00c\00b\000\008\001\00d\001\00e\005\009\00c\00b\002\00c\002\006\000\00b\001\005\000\009\00c\00f\00f\002\005\00d\004\00b\003\001\005\008\002\000\004\00c\000\004\00e\008\009\004\00d\005\003\005\007\008\004\000\00e\003\002\004\00b\002\004\00c\009\005\009\00c\00a\006\00a\005\000\008\002\000\003\005\00f\006\00f\00f\00a\00e\001\002\00f\003\003\001\002\000\002\00b\00c\008\004\00b\00f\004\006\001\002\00e\00a\00c\000\000\006\003\000\003\006\00f\007\002\006\004\000\001\000\00b\002\000\004\007\00f\002\002\00e\00d\001\005\00d\003\000\008\002\00f\005\00e\009\00a\000\000\005\008\006\004\005\002\008\00e\004\00f\009\009\001\00a\00d\00e\008\004\001\00a\009\00c\005\008\004\006\00e\002\00c\001\001\008\004\002\005\008\007\008\00b\006\00b\00e\001\000\001\000\00d\000\009\00b\005\003\000\003\006\008\00c\007\004\00d\00f\001\000\00a\003\000\003\006\008\002\001\00c\000\004\00c\000\004\00e\008\009\004\00d\005\003\005\007\008\004\000\00e\003\002\004\00b\002\004\00c\009\005\009\00c\00a\006\00a\005\000\008\002\000\003\005\00f\006\00f\00f\00a\00e\001\002\00f\003\003\001\002\000\002\00b\00c\008\004\00b\00f\004\006\001\002\00e\000\000\000\000\000\000\000\000")
 (data $100 (i32.const 14556) "\dc\05")
 (data $100.1 (i32.const 14568) "\02\00\00\00\c8\05\00\000\002\000\000\000\000\000\000\000\000\000\001\000\001\008\00e\005\000\006\004\001\008\009\006\00e\008\00d\00a\006\00a\000\006\00b\000\009\006\00f\007\008\006\00b\00f\009\00c\006\002\002\009\00f\00f\007\006\005\005\001\008\008\002\006\00d\006\00c\00f\007\00a\00f\004\00d\003\005\00b\00a\006\004\001\005\002\008\000\000\000\000\000\000\000\000\000\000\00f\00d\00f\00f\00f\00f\00f\00f\000\003\002\006\000\002\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\00b\005\00d\008\000\005\005\00f\004\00a\007\009\006\003\002\005\00e\005\00d\00f\003\004\008\00d\00a\002\006\008\001\00b\00c\005\00e\004\003\003\007\009\00e\00e\00f\00f\008\005\00c\00d\001\002\005\007\00d\00d\000\005\008\006\005\000\003\007\00b\005\00f\009\002\006\000\002\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\00b\005\00d\008\000\005\005\00f\004\00a\007\009\006\003\002\005\00e\005\00d\00f\003\004\008\00d\00a\002\006\008\001\00b\00c\005\00e\004\003\003\007\009\00e\00e\00f\00f\008\005\00c\00d\001\002\005\007\00d\00d\000\005\008\006\005\000\003\007\00b\005\00f\009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\00d\006\00a\005\00d\001\00a\000\002\000\005\000\004\00f\005\00b\00b\00a\001\00a\009\00d\003\00f\00f\00b\00b\00c\007\000\005\000\001\000\002\000\005\00a\001\004\00d\000\006\008\000\009\000\008\004\008\00e\008\00f\003\00d\001\006\000\001\000\003\004\000\00f\008\009\00a\00a\002\00e\004\003\00e\002\000\00e\003\005\008\00c\00c\00c\007\00e\007\002\00e\005\008\000\008\005\00c\001\000\009\00a\001\003\00a\00a\00a\00b\00f\003\005\009\002\009\002\005\009\00b\009\008\008\00a\007\00f\009\00e\009\008\007\00c\000\00f\00f\00d\00a\00a\006\00b\00c\006\008\00c\001\002\008\007\00d\001\006\00c\004\00a\007\000\00d\005\00d\007\00a\000\004\00f\001\001\004\00e\006\006\001\00a\006\00c\00c\00d\006\007\001\00c\006\006\002\005\003\002\00f\00d\00f\00d\006\006\000\00f\008\005\00b\000\005\00c\002\000\005\00b\00b\006\003\00e\007\001\004\001\00d\004\00a\00e\00d\009\00b\00e\004\006\007\00c\004\00b\004\001\005\00d\00c\007\009\003\003\009\00e\009\00e\001\007\000\00f\006\006\00f\007\00d\00b\008\002\00f\008\00e\006\00b\00c\00d\00a\007\005\003\001\009\004\005\00a\00c\000\000\006\003\000\003\006\00f\007\002\006\004\000\001\000\00b\002\000\009\008\008\00e\007\00e\006\00a\00b\008\009\00f\005\008\00c\006\00c\002\008\007\005\009\00e\009\00b\00f\00e\007\007\002\00f\00e\009\009\00c\003\002\00a\00a\005\00b\00d\00d\00d\009\004\00e\007\00b\00c\00f\005\002\004\001\00f\009\00c\008\00f\008\00b\001\004\000\001\000\002\000\001\000\000\000\001\000\00d\000\008\00f\005\005\00d\002\008\003\005\00f\00d\00e\00f\008\00e\000\005\000\000\006\008\002\001\00c\000\005\00b\00b\006\003\00e\007\001\004\001\00d\004\00a\00e\00d\009\00b\00e\004\006\007\00c\004\00b\004\001\005\00d\00c\007\009\003\003\009\00e\009\00e\001\007\000\00f\006\006\00f\007\00d\00b\008\002\00f\008\00e\006\00b\00c\00d\00a\007\005\003\001\009\004\005\000\000\000\000\000\000\000\000")
 (data $101 (i32.const 16060) ",\04")
 (data $101.1 (i32.const 16072) "\02\00\00\00\18\04\00\000\001\000\000\000\000\000\000\000\000\000\001\000\001\009\003\003\007\00e\00d\00a\003\00b\007\004\00a\000\00c\00b\002\00c\001\003\00d\00f\006\009\00a\00e\001\008\003\009\005\008\004\00e\00c\00f\004\00e\000\002\00b\00b\00a\00c\00e\00d\001\007\008\005\008\007\00d\00e\00b\001\00b\001\009\00f\001\00a\004\003\002\000\001\000\000\000\000\000\000\000\000\00f\00f\00f\00f\00f\00f\00f\00f\000\004\002\004\00f\000\001\00e\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\005\00c\004\004\004\00f\000\003\008\005\004\00d\00f\00d\00b\007\00e\006\008\006\00b\004\00d\005\00d\002\00f\002\008\009\005\001\002\007\001\005\00a\000\001\00e\00b\00a\000\006\003\009\008\001\006\00c\005\00d\00b\00a\008\003\007\006\000\00b\00c\00c\002\007\00d\001\00b\00a\000\004\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\001\00d\005\00a\007\00d\002\001\003\00f\001\00a\006\008\000\006\009\001\00e\006\00e\006\002\00d\00e\001\00c\004\003\004\002\00e\008\00a\006\009\004\00c\005\002\00e\001\00a\008\000\004\003\008\008\00d\001\00d\001\005\004\00e\003\003\00b\004\006\00b\00a\00c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\006\00a\005\00d\000\002\001\006\000\003\003\00d\00a\005\003\008\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\004\002\008\00a\008\000\00a\00c\004\000\00e\002\004\001\006\009\008\008\00b\00d\009\005\00d\005\009\007\00f\004\003\000\00e\008\006\009\00d\000\00d\00b\002\00d\006\004\004\005\00e\00a\002\00d\007\000\00e\00e\000\00e\00c\00f\006\00c\000\009\006\00b\00f\008\000\001\004\000\007\00f\009\006\000\001\003\00b\00f\00f\00d\006\002\001\00a\00f\001\00c\001\00d\00c\007\000\00a\001\000\000\00b\002\001\00d\006\005\001\00a\00d\002\000\00f\005\007\005\00d\004\00e\00f\008\00e\007\00a\00d\00c\001\008\00b\007\007\006\000\004\009\00e\005\005\00c\001\002\00d\000\009\004\000\00f\00a\003\004\005\007\006\00a\003\004\00e\00c\00f\00c\000\00b\006\002\004\000\003\008\00e\001\001\00e\004\004\004\004\002\00f\000\00f\000\007\005\001\00b\003\007\006\009\009\004\00d\000\008\007\00e\003\001\001\001\001\00a\000\000\000\000\000\000\000\000")
 (data $102 (i32.const 17132) "\ec\02")
 (data $102.1 (i32.const 17144) "\02\00\00\00\d0\02\00\000\002\000\000\000\000\000\000\000\000\000\001\000\001\005\00f\002\001\001\008\005\00c\007\00a\00c\009\00d\006\004\00a\00a\00c\003\00e\008\000\006\008\00c\008\001\004\003\009\00e\00c\007\000\007\00f\007\001\00b\00a\002\000\00f\00a\003\006\003\007\008\005\008\00a\001\001\009\005\007\001\002\002\007\00b\001\001\000\002\000\000\000\000\000\000\000\000\00f\00d\00f\00f\00f\00f\00f\00f\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\009\006\00a\005\00d\000\006\001\004\00c\000\00a\002\003\003\001\004\000\001\002\002\000\002\000\000\000\000\000\000\000\000\000\000\000\000\002\002\005\001\002\000\006\004\004\00e\002\00e\008\003\007\002\002\006\00f\000\002\005\001\004\002\00b\00a\009\00b\00a\002\001\00b\009\00d\008\007\005\00b\007\002\00d\007\006\002\007\00d\009\009\007\008\00a\000\008\00d\000\000\00e\00c\006\003\00b\00f\009\003\00d\000\00a\000\00e\000\001\004\000\002\007\001\00d\000\00d\007\00b\002\008\002\00a\005\008\005\00b\008\006\001\001\00c\005\006\004\00c\008\006\004\007\00e\007\00e\00d\004\00e\008\007\006\008\002\001\003\009\005\00b\004\00b\009\004\004\005\003\001\00a\003\00a\000\00a\000\004\002\00e\009\003\00d\000\006\00f\00c\00c\00c\000\00a\00e\009\000\00c\003\006\00f\006\00e\009\006\00c\00f\00d\00f\00d\00f\006\00c\009\00f\008\003\00e\00a\004\00f\00a\001\000\00b\00d\00c\00e\007\009\00c\006\00c\001\005\005\008\000\00c\009\001\000\007\008\00e\006\001\009\00d\000\000\000\000\000\000\000\000")
 (data $103 (i32.const 17884) "\1c")
 (data $103.1 (i32.const 17896) "K\00\00\00\08\00\00\00\r")
 (data $104 (i32.const 17916) "\1c")
 (data $104.1 (i32.const 17928) "K\00\00\00\08\00\00\00\0e")
 (data $105 (i32.const 17948) "\1c")
 (data $105.1 (i32.const 17960) "Z\00\00\00\08\00\00\00\0f")
 (data $106 (i32.const 17980) "\1c")
 (data $106.1 (i32.const 17992) "[\00\00\00\08\00\00\00\10")
 (data $107 (i32.const 18012) "\1c\00\00\00\03\00\00\00\00\00\00\00B\00\00\00\0c\00\00\00p1\00\00\00\00\00\00\b01")
 (data $108 (i32.const 18044) "\\")
 (data $108.1 (i32.const 18056) "\02\00\00\00B\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00r\00o\00t\00o\00/\00m\00e\00t\00a\00s\00h\00r\00e\00w\00-\00r\00u\00n\00e\00s\00.\00t\00s")
 (data $109 (i32.const 18140) "\1c")
 (data $109.1 (i32.const 18152) "K\00\00\00\08\00\00\00\11")
 (data $110 (i32.const 18172) "\1c")
 (data $110.1 (i32.const 18184) "c\00\00\00\08\00\00\00\12")
 (data $111 (i32.const 18204) "\8c")
 (data $111.1 (i32.const 18216) "\02\00\00\00|\00\00\00b\00c\001\00p\00l\003\005\00w\00n\007\00k\005\007\008\00z\00g\005\005\00e\00x\00z\007\009\009\00m\006\00v\006\00p\00n\00u\005\006\003\00w\00g\003\004\00t\007\00y\00g\007\00j\00s\00n\00m\00x\00p\00m\00v\00w\005\00f\00d\00s\00c\00d\00s\00m\00v\00u")
 (data $112 (i32.const 18348) "\ac")
 (data $112.1 (i32.const 18360) "\02\00\00\00\90\00\00\00a\009\002\00b\00a\004\00a\00a\00b\006\00a\00c\003\00f\00e\002\006\006\006\007\006\006\005\00c\00a\006\00b\00c\00d\007\005\00e\00f\00f\002\00c\00d\000\005\009\006\003\00a\00b\006\006\005\00d\002\005\009\00a\003\001\001\001\003\00a\00e\008\003\001\00a\004\000\001\000\000\000\000\000\000")
 (data $113 (i32.const 18524) "\1c")
 (data $113.1 (i32.const 18536) "H\00\00\00\08\00\00\00\13")
 (data $114 (i32.const 18560) "h\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00d\00\00\00 \00\00\00\02\01\00\00\10A\82\00 \00\00\00 \00\00\00\02A\00\00\02\t")
 (data $114.1 (i32.const 18620) "\88\00\00\00 \00\00\00 \00\00\00 \00\00\00 \00\00\00B\00\00\00A\00\00\00 \00\00\00\02\02")
 (data $114.2 (i32.const 18680) "\02A\00\00\02A\00\00\00\00\00\00\02A\00\00\02A\00\00 ")
 (data $114.3 (i32.const 18724) "\02A\00\00\10A\04\00\04A\00\00\02A\00\00 \00\00\00\02A\00\00\10A\02")
 (data $114.4 (i32.const 18760) "\02A\00\00\02A")
 (data $114.5 (i32.const 18776) " \00\00\00\00\00\00\00\01\t")
 (data $114.6 (i32.const 18800) " \00\00\00 \00\00\00\02A\00\00\02A")
 (data $114.7 (i32.const 18828) "\04A")
 (data $114.8 (i32.const 18840) "\10\t\82\00\02A")
 (data $114.9 (i32.const 18856) "\10A\02")
 (data $114.10 (i32.const 18872) "\02A\00\00\00\00\00\00\02A\00\00\02A")
 (data $114.11 (i32.const 18912) " \00\00\00\02A\00\00\02A")
 (data $114.12 (i32.const 18956) " ")
 (data $114.13 (i32.const 18972) "\02A")
 (table $0 20 20 funcref)
 (elem $0 (i32.const 1) $~lib/metashrew-as/assembly/utils/box/Box.concat~anonymous|0 $~lib/metashrew-as/assembly/utils/box/Box.concat~anonymous|1 $assembly/indexer/Indexer/Index.inspectTransaction~anonymous|0 $~lib/metashrew-as/assembly/utils/utils/concat~anonymous|0 $assembly/indexer/Indexer/Index.inspectTransaction~anonymous|0 $assembly/indexer/RunestoneMessage/RunestoneMessage#process~anonymous|0 $assembly/indexer/BalanceSheet/BalanceSheet.concat~anonymous|0 $assembly/utils/fieldToArrayBuffer~anonymous|0 $assembly/indexer/RuneId/RuneId.fromBytes~anonymous|0 $assembly/indexer/Edict/Edict.fromDeltaSeries~anonymous|0 $assembly/indexer/Indexer/Index.inspectTransaction~anonymous|0 $~lib/metashrew-as/assembly/indexer/index/_flush~anonymous|0 $assembly/indexer/RuneId/RuneId.fromBytes~anonymous|0 $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|0~anonymous|0 $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|0 $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|1 $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|0~anonymous|0 $assembly/view/runes/runes~anonymous|0 $assembly/indexer/BalanceSheet/BalanceSheet.concat~anonymous|0)
 (export "test_BSTU128" (func $assembly/index/test_BSTU128))
 (export "testCommitment" (func $assembly/tests/testCommitment))
 (export "testFieldToName" (func $assembly/tests/testFieldToName))
 (export "test_indexEtching" (func $assembly/tests/test_indexEtching))
 (export "test_genesisTransaction" (func $assembly/tests/test_genesisTransaction))
 (export "test_secondTransaction" (func $assembly/tests/test_secondTransaction))
 (export "test_oneFortyEight" (func $assembly/tests/test_oneFortyEight))
 (export "test_fifteen" (func $assembly/tests/test_fifteen))
 (export "txindexForOutpoint" (func $assembly/view/outpoint/txindexForOutpoint))
 (export "balanceSheetToProtobuf" (func $assembly/view/outpoint/balanceSheetToProtobuf))
 (export "outpointBase" (func $assembly/view/outpoint/outpointBase))
 (export "outpoint" (func $assembly/view/outpoint/outpoint))
 (export "runes" (func $assembly/view/runes/runes))
 (export "wallet_test" (func $assembly/view/wallet/wallet_test))
 (export "runesbyaddress" (func $assembly/view/wallet/runesbyaddress))
 (export "__new" (func $~lib/rt/stub/__new))
 (export "__pin" (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer.wrap))
 (export "__unpin" (func $~lib/rt/stub/__unpin))
 (export "__collect" (func $~lib/rt/stub/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/stub/__alloc (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1600
   i32.const 1664
   i32.const 33
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.tee $2
  local.get $0
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $0
  i32.add
  local.tee $3
  memory.size
  local.tee $4
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  local.tee $5
  i32.gt_u
  if
   local.get $4
   local.get $3
   local.get $5
   i32.sub
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $5
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  local.get $0
  i32.store
  local.get $2
 )
 (func $~lib/rt/stub/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1600
   i32.const 1664
   i32.const 86
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/stub/__alloc
  local.tee $3
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $3
  i32.const 16
  i32.add
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 2608
   i32.const 2656
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill
  local.get $1
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#constructor" (result i32)
  (local $0 i32)
  i32.const 24
  i32.const 7
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
 )
 (func $~lib/string/String.UTF8.encode@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $2of2
   block $0of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $1
  end
  local.get $0
  local.set $3
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.get $0
  i32.add
  local.set $4
  local.get $1
  i32.const 0
  i32.ne
  local.set $2
  loop $while-continue|0
   local.get $3
   local.get $4
   i32.lt_u
   if
    block $while-break|0
     local.get $3
     i32.load16_u
     local.tee $5
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $1
      local.get $5
      i32.eqz
      i32.and
      br_if $while-break|0
      local.get $2
      i32.const 1
      i32.add
     else
      local.get $5
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
      else
       local.get $5
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       local.get $3
       i32.const 2
       i32.add
       local.get $4
       i32.lt_u
       i32.and
       if
        local.get $3
        i32.load16_u offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         local.get $3
         i32.const 4
         i32.add
         local.set $3
         br $while-continue|0
        end
       end
       local.get $2
       i32.const 3
       i32.add
      end
     end
     local.set $2
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $while-continue|0
    end
   end
  end
  local.get $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $3
  local.get $0
  local.tee $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  i32.add
  local.set $5
  local.get $3
  local.set $0
  block $__inlined_func$~lib/string/String.UTF8.encodeUnsafe
   loop $while-continue|00
    local.get $2
    local.get $5
    i32.lt_u
    if
     local.get $2
     i32.load16_u
     local.tee $4
     i32.const 128
     i32.lt_u
     if
      local.get $0
      local.get $4
      i32.store8
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.get $4
      i32.eqz
      i32.and
      br_if $__inlined_func$~lib/string/String.UTF8.encodeUnsafe
     else
      local.get $4
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $0
       local.get $4
       i32.const 6
       i32.shr_u
       i32.const 192
       i32.or
       local.get $4
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16
       local.get $0
       i32.const 2
       i32.add
      else
       local.get $4
       i32.const 63488
       i32.and
       i32.const 55296
       i32.eq
       if
        local.get $4
        i32.const 56320
        i32.lt_u
        local.get $2
        i32.const 2
        i32.add
        local.get $5
        i32.lt_u
        i32.and
        if
         local.get $2
         i32.load16_u offset=2
         local.tee $6
         i32.const 64512
         i32.and
         i32.const 56320
         i32.eq
         if
          local.get $0
          local.get $4
          i32.const 1023
          i32.and
          i32.const 10
          i32.shl
          i32.const 65536
          i32.add
          local.get $6
          i32.const 1023
          i32.and
          i32.or
          local.tee $4
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.const 24
          i32.shl
          local.get $4
          i32.const 6
          i32.shr_u
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.const 16
          i32.shl
          i32.or
          local.get $4
          i32.const 12
          i32.shr_u
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.const 8
          i32.shl
          i32.or
          local.get $4
          i32.const 18
          i32.shr_u
          i32.const 240
          i32.or
          i32.or
          i32.store
          local.get $0
          i32.const 4
          i32.add
          local.set $0
          local.get $2
          i32.const 4
          i32.add
          local.set $2
          br $while-continue|00
         end
        end
       end
       local.get $0
       local.get $4
       i32.const 12
       i32.shr_u
       i32.const 224
       i32.or
       local.get $4
       i32.const 6
       i32.shr_u
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16
       local.get $0
       local.get $4
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.store8 offset=2
       local.get $0
       i32.const 3
       i32.add
      end
      local.set $0
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|00
    end
   end
   local.get $1
   if
    local.get $0
    i32.const 0
    i32.store8
   end
  end
  local.get $3
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer.wrap (param $0 i32) (result i32)
  local.get $0
 )
 (func $~lib/metashrew-as/assembly/utils/box/Box#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 8
  i32.const 9
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  local.get $1
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $3
  i32.const 16
  local.get $2
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $3
  i32.store
  local.get $2
  local.get $3
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  local.get $2
 )
 (func $~lib/rt/stub/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1600
   i32.const 1664
   i32.const 99
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.sub
  local.tee $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   i32.const 1664
   i32.const 45
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $0
  i32.const 4
  i32.sub
  local.tee $3
  i32.load
  local.tee $4
  local.get $0
  i32.add
  i32.eq
  local.set $5
  local.get $1
  i32.const 16
  i32.add
  local.tee $6
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $2
  local.get $4
  local.get $6
  i32.lt_u
  if
   local.get $5
   if
    local.get $6
    i32.const 1073741820
    i32.gt_u
    if
     i32.const 1600
     i32.const 1664
     i32.const 52
     i32.const 33
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.add
    local.tee $4
    memory.size
    local.tee $5
    i32.const 16
    i32.shl
    i32.const 15
    i32.add
    i32.const -16
    i32.and
    local.tee $6
    i32.gt_u
    if
     local.get $5
     local.get $4
     local.get $6
     i32.sub
     i32.const 65535
     i32.add
     i32.const -65536
     i32.and
     i32.const 16
     i32.shr_u
     local.tee $6
     local.get $5
     local.get $6
     i32.gt_s
     select
     memory.grow
     i32.const 0
     i32.lt_s
     if
      local.get $6
      memory.grow
      i32.const 0
      i32.lt_s
      if
       unreachable
      end
     end
    end
    local.get $4
    global.set $~lib/rt/stub/offset
    local.get $3
    local.get $2
    i32.store
   else
    local.get $2
    local.get $4
    i32.const 1
    i32.shl
    local.tee $3
    local.get $2
    local.get $3
    i32.gt_u
    select
    call $~lib/rt/stub/__alloc
    local.tee $2
    local.get $0
    local.get $4
    memory.copy
    local.get $2
    local.set $0
   end
  else
   local.get $5
   if
    local.get $0
    local.get $2
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $3
    local.get $2
    i32.store
   end
  end
  local.get $0
  i32.const 4
  i32.sub
  local.get $1
  i32.store offset=16
  local.get $0
  i32.const 16
  i32.add
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 2608
    i32.const 3520
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   local.get $2
   i32.shl
   local.set $1
   local.get $3
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   local.get $0
   i32.load
   local.tee $5
   local.get $1
   call $~lib/rt/stub/__renew
   local.tee $2
   local.get $4
   i32.add
   i32.const 0
   local.get $1
   local.get $4
   i32.sub
   memory.fill
   local.get $2
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
   end
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3344
    i32.const 3520
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
 )
 (func $~lib/metashrew-as/assembly/utils/box/Box.concat~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.load offset=4
  i32.add
 )
 (func $~lib/metashrew-as/assembly/utils/box/Box.concat~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  local.get $0
  local.get $1
  i32.load offset=4
  i32.add
 )
 (func $~lib/metashrew-as/assembly/utils/box/Box.concat (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=12
  local.set $4
  loop $for-loop|0
   local.get $1
   local.get $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $5
    i32.const 4
    global.set $~argumentsLength
    local.get $2
    local.get $5
    local.get $1
    local.get $0
    i32.const 3568
    i32.load
    call_indirect (type $4)
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $2
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.set $1
  local.get $0
  i32.load offset=12
  local.set $4
  loop $for-loop|01
   local.get $3
   local.get $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $5
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    local.get $5
    local.get $3
    local.get $0
    i32.const 3600
    i32.load
    call_indirect (type $4)
    local.set $1
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|01
   end
  end
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 2
  i32.const 2
  i32.const 10
  call $~lib/rt/__newArray
  local.tee $2
  i32.load offset=4
  drop
  local.get $2
  i32.const 0
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $2
  i32.const 1
  local.get $1
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $2
  call $~lib/metashrew-as/assembly/utils/box/Box.concat
 )
 (func $~lib/set/Set<u16>#add (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  i32.const -1783518525
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $__inlined_func$~lib/set/Set<u16>#find$1976
   loop $while-continue|0
    local.get $1
    if
     local.get $1
     i32.load offset=4
     local.tee $2
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i32.load16_u
      i32.const 28010
      i32.eq
     end
     br_if $__inlined_func$~lib/set/Set<u16>#find$1976
     local.get $2
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   local.get $0
   i32.load offset=12
   local.tee $1
   local.get $0
   i32.load offset=16
   i32.eq
   if
    local.get $0
    i32.load offset=20
    local.get $1
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    local.tee $6
    i32.const 1
    i32.add
    local.tee $1
    i32.const 2
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $5
    local.get $1
    i32.const 3
    i32.shl
    i32.const 3
    i32.div_s
    local.tee $4
    i32.const 3
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $2
    local.get $0
    i32.load offset=8
    local.tee $7
    local.get $0
    i32.load offset=16
    i32.const 3
    i32.shl
    i32.add
    local.set $3
    local.get $2
    local.set $1
    loop $while-continue|00
     local.get $3
     local.get $7
     i32.ne
     if
      local.get $7
      i32.load offset=4
      i32.const 1
      i32.and
      i32.eqz
      if
       local.get $1
       local.get $7
       i32.load16_u
       local.tee $8
       i32.store16
       local.get $1
       local.get $5
       local.get $8
       i32.const -1028477379
       i32.mul
       i32.const 374761395
       i32.add
       i32.const 17
       i32.rotl
       i32.const 668265263
       i32.mul
       local.tee $8
       i32.const 15
       i32.shr_u
       local.get $8
       i32.xor
       i32.const -2048144777
       i32.mul
       local.tee $8
       i32.const 13
       i32.shr_u
       local.get $8
       i32.xor
       i32.const -1028477379
       i32.mul
       local.tee $8
       i32.const 16
       i32.shr_u
       local.get $8
       i32.xor
       local.get $6
       i32.and
       i32.const 2
       i32.shl
       i32.add
       local.tee $8
       i32.load
       i32.store offset=4
       local.get $8
       local.get $1
       i32.store
       local.get $1
       i32.const 8
       i32.add
       local.set $1
      end
      local.get $7
      i32.const 8
      i32.add
      local.set $7
      br $while-continue|00
     end
    end
    local.get $0
    local.get $5
    i32.store
    local.get $0
    local.get $6
    i32.store offset=4
    local.get $0
    local.get $2
    i32.store offset=8
    local.get $0
    local.get $4
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=20
    i32.store offset=16
   end
   local.get $0
   i32.load offset=8
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $1
   local.get $2
   i32.const 3
   i32.shl
   i32.add
   local.tee $1
   i32.const 28010
   i32.store16
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $1
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   i32.const -1783518525
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store
  end
 )
 (func $~lib/as-bignum/assembly/utils/atou128 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i32)
  i32.const 10
  local.set $4
  block $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $5
   i32.eqz
   br_if $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   if (result i32)
    local.get $0
    i32.load16_u
   else
    i32.const -1
   end
   local.tee $1
   i32.const 48
   i32.eq
   local.get $5
   i32.const 1
   i32.eq
   i32.and
   br_if $folding-inner0
   local.get $1
   i32.const 45
   i32.eq
   local.tee $6
   local.get $1
   i32.const 43
   i32.eq
   i32.or
   local.tee $2
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ge_u
   if (result i32)
    i32.const -1
   else
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
   end
   i32.const 48
   i32.eq
   if
    local.get $2
    i32.const 1
    i32.add
    local.tee $2
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    if (result i32)
     i32.const -1
    else
     local.get $0
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u
    end
    local.tee $1
    i32.const 32
    i32.or
    i32.const 120
    i32.eq
    if
     i32.const 16
     local.set $4
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    else
     local.get $1
     i32.const 32
     i32.or
     i32.const 111
     i32.eq
     if
      i32.const 8
      local.set $4
      local.get $2
      i32.const 1
      i32.add
      local.set $2
     else
      local.get $1
      i32.const 32
      i32.or
      i32.const 98
      i32.eq
      if
       i32.const 2
       local.set $4
       local.get $2
       i32.const 1
       i32.add
       local.set $2
      else
       local.get $1
       i32.const 48
       i32.eq
       if
        loop $while-continue|0
         local.get $2
         local.get $5
         i32.lt_s
         if (result i32)
          local.get $2
          local.get $0
          i32.const 20
          i32.sub
          i32.load offset=16
          i32.const 1
          i32.shr_u
          i32.ge_u
          if (result i32)
           i32.const -1
          else
           local.get $0
           local.get $2
           i32.const 1
           i32.shl
           i32.add
           i32.load16_u
          end
          i32.const 48
          i32.eq
         else
          i32.const 0
         end
         if
          local.get $2
          i32.const 1
          i32.add
          local.set $2
          br $while-continue|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i64.const 0
   i64.store offset=8
   local.get $2
   local.get $5
   i32.ge_s
   if
    local.get $1
    return
   end
   block $break|1
    block $case3|1
     block $case2|1
      block $case1|1
       local.get $4
       i32.const 2
       i32.ne
       if
        local.get $4
        i32.const 10
        i32.eq
        br_if $case1|1
        local.get $4
        i32.const 16
        i32.eq
        br_if $case2|1
        br $case3|1
       end
       loop $do-loop|2
        local.get $2
        local.get $0
        i32.const 20
        i32.sub
        i32.load offset=16
        i32.const 1
        i32.shr_u
        i32.ge_u
        if (result i32)
         i32.const -1
        else
         local.get $0
         local.get $2
         i32.const 1
         i32.shl
         i32.add
         i32.load16_u
        end
        i32.const 48
        i32.sub
        local.tee $4
        i32.const 2
        i32.lt_u
        if
         local.get $1
         i64.load offset=8
         i64.const 1
         i64.shl
         local.get $1
         i64.load
         local.tee $3
         i64.const 63
         i64.shr_u
         i64.or
         local.set $8
         i32.const 16
         i32.const 15
         call $~lib/rt/stub/__new
         local.tee $1
         local.get $3
         i64.const 1
         i64.shl
         i64.store
         local.get $1
         local.get $8
         i64.store offset=8
         i32.const 16
         i32.const 15
         call $~lib/rt/stub/__new
         local.tee $7
         local.get $4
         i64.extend_i32_u
         i64.store
         local.get $7
         i64.const 0
         i64.store offset=8
         local.get $1
         i64.load
         local.get $7
         i64.load
         i64.or
         local.set $3
         local.get $1
         i64.load offset=8
         local.get $7
         i64.load offset=8
         i64.or
         local.set $8
         i32.const 16
         i32.const 15
         call $~lib/rt/stub/__new
         local.tee $1
         local.get $3
         i64.store
         local.get $1
         local.get $8
         i64.store offset=8
         local.get $5
         local.get $2
         i32.const 1
         i32.add
         local.tee $2
         i32.gt_s
         br_if $do-loop|2
        end
       end
       br $break|1
      end
      loop $do-loop|3
       local.get $2
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       i32.ge_u
       if (result i32)
        i32.const -1
       else
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u
       end
       i32.const 48
       i32.sub
       local.tee $4
       i32.const 10
       i32.lt_u
       if
        local.get $1
        i64.load offset=8
        i64.const 3
        i64.shl
        local.get $1
        i64.load
        local.tee $3
        i64.const 61
        i64.shr_u
        i64.or
        local.set $8
        i32.const 16
        i32.const 15
        call $~lib/rt/stub/__new
        local.tee $7
        local.get $3
        i64.const 3
        i64.shl
        i64.store
        local.get $7
        local.get $8
        i64.store offset=8
        local.get $1
        i64.load offset=8
        i64.const 1
        i64.shl
        local.get $1
        i64.load
        local.tee $3
        i64.const 63
        i64.shr_u
        i64.or
        local.set $8
        i32.const 16
        i32.const 15
        call $~lib/rt/stub/__new
        local.tee $1
        local.get $3
        i64.const 1
        i64.shl
        i64.store
        local.get $1
        local.get $8
        i64.store offset=8
        local.get $7
        i64.load
        local.tee $3
        local.get $1
        i64.load
        i64.add
        local.set $8
        local.get $3
        local.get $8
        i64.gt_u
        i64.extend_i32_u
        local.get $7
        i64.load offset=8
        local.get $1
        i64.load offset=8
        i64.add
        i64.add
        local.set $3
        i32.const 16
        i32.const 15
        call $~lib/rt/stub/__new
        local.tee $1
        local.get $8
        i64.store
        local.get $1
        local.get $3
        i64.store offset=8
        i32.const 16
        i32.const 15
        call $~lib/rt/stub/__new
        local.tee $7
        local.get $4
        i64.extend_i32_u
        i64.store
        local.get $7
        i64.const 0
        i64.store offset=8
        local.get $1
        i64.load
        local.tee $3
        local.get $7
        i64.load
        i64.add
        local.set $8
        local.get $3
        local.get $8
        i64.gt_u
        i64.extend_i32_u
        local.get $1
        i64.load offset=8
        local.get $7
        i64.load offset=8
        i64.add
        i64.add
        local.set $3
        i32.const 16
        i32.const 15
        call $~lib/rt/stub/__new
        local.tee $1
        local.get $8
        i64.store
        local.get $1
        local.get $3
        i64.store offset=8
        local.get $5
        local.get $2
        i32.const 1
        i32.add
        local.tee $2
        i32.gt_s
        br_if $do-loop|3
       end
      end
      br $break|1
     end
     loop $do-loop|4
      block $do-break|4
       local.get $2
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       i32.ge_u
       if (result i32)
        i32.const -1
       else
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u
       end
       i32.const 48
       i32.sub
       local.tee $4
       i32.const 74
       i32.gt_u
       br_if $do-break|4
       local.get $4
       i32.const 5036
       i32.add
       i32.load8_u
       local.tee $4
       i32.const 16
       i32.ge_u
       br_if $do-break|4
       local.get $1
       i64.load offset=8
       i64.const 4
       i64.shl
       local.get $1
       i64.load
       local.tee $3
       i64.const 60
       i64.shr_u
       i64.or
       local.set $8
       i32.const 16
       i32.const 15
       call $~lib/rt/stub/__new
       local.tee $1
       local.get $3
       i64.const 4
       i64.shl
       i64.store
       local.get $1
       local.get $8
       i64.store offset=8
       i32.const 16
       i32.const 15
       call $~lib/rt/stub/__new
       local.tee $7
       local.get $4
       i64.extend_i32_u
       i64.store
       local.get $7
       i64.const 0
       i64.store offset=8
       local.get $1
       i64.load
       local.get $7
       i64.load
       i64.or
       local.set $3
       local.get $1
       i64.load offset=8
       local.get $7
       i64.load offset=8
       i64.or
       local.set $8
       i32.const 16
       i32.const 15
       call $~lib/rt/stub/__new
       local.tee $1
       local.get $3
       i64.store
       local.get $1
       local.get $8
       i64.store offset=8
       local.get $5
       local.get $2
       i32.const 1
       i32.add
       local.tee $2
       i32.gt_s
       br_if $do-loop|4
      end
     end
     br $break|1
    end
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $7
    local.get $4
    i64.extend_i32_s
    i64.store
    local.get $7
    i64.const 0
    i64.store offset=8
    loop $do-loop|5
     block $do-break|5
      local.get $2
      local.get $0
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      i32.ge_u
      if (result i32)
       i32.const -1
      else
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u
      end
      i32.const 48
      i32.sub
      local.tee $10
      i32.const 74
      i32.gt_u
      br_if $do-break|5
      local.get $10
      i32.const 5036
      i32.add
      i32.load8_u
      local.tee $10
      local.get $4
      i32.ge_u
      br_if $do-break|5
      local.get $7
      i64.load
      local.tee $3
      i64.const 32
      i64.shr_u
      local.set $8
      local.get $1
      i64.load
      local.tee $11
      i64.const 4294967295
      i64.and
      local.tee $9
      local.get $3
      i64.const 4294967295
      i64.and
      local.tee $12
      i64.mul
      local.set $13
      local.get $8
      local.get $9
      i64.mul
      local.get $12
      local.get $11
      i64.const 32
      i64.shr_u
      local.tee $12
      i64.mul
      local.get $13
      i64.const 32
      i64.shr_u
      i64.add
      local.tee $14
      i64.const 4294967295
      i64.and
      i64.add
      local.set $9
      local.get $8
      local.get $12
      i64.mul
      local.get $14
      i64.const 32
      i64.shr_u
      i64.add
      local.get $3
      local.get $1
      i64.load offset=8
      i64.mul
      i64.add
      local.get $7
      i64.load offset=8
      local.get $11
      i64.mul
      i64.add
      local.get $9
      i64.const 32
      i64.shr_u
      i64.add
      global.set $~lib/as-bignum/assembly/globals/__res128_hi
      global.get $~lib/as-bignum/assembly/globals/__res128_hi
      local.set $3
      i32.const 16
      i32.const 15
      call $~lib/rt/stub/__new
      local.tee $15
      local.get $13
      i64.const 4294967295
      i64.and
      local.get $9
      i64.const 32
      i64.shl
      i64.or
      i64.store
      local.get $15
      local.get $3
      i64.store offset=8
      i32.const 16
      i32.const 15
      call $~lib/rt/stub/__new
      local.tee $1
      local.get $10
      i64.extend_i32_u
      i64.store
      local.get $1
      i64.const 0
      i64.store offset=8
      local.get $15
      i64.load
      local.tee $3
      local.get $1
      i64.load
      i64.add
      local.set $8
      local.get $3
      local.get $8
      i64.gt_u
      i64.extend_i32_u
      local.get $15
      i64.load offset=8
      local.get $1
      i64.load offset=8
      i64.add
      i64.add
      local.set $3
      i32.const 16
      i32.const 15
      call $~lib/rt/stub/__new
      local.tee $1
      local.get $8
      i64.store
      local.get $1
      local.get $3
      i64.store offset=8
      local.get $5
      local.get $2
      i32.const 1
      i32.add
      local.tee $2
      i32.gt_s
      br_if $do-loop|5
     end
    end
   end
   local.get $6
   if
    local.get $1
    i64.load
    i64.const -1
    i64.xor
    local.tee $3
    i64.const 1
    i64.add
    local.set $8
    local.get $3
    local.get $8
    i64.gt_u
    i64.extend_i32_u
    local.get $1
    i64.load offset=8
    i64.const -1
    i64.xor
    i64.add
    local.set $3
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $1
    local.get $8
    i64.store
    local.get $1
    local.get $3
    i64.store offset=8
   end
   local.get $1
   return
  end
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  i64.const 0
  i64.store
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
 )
 (func $start:assembly/indexer/constants/index
  (local $0 i32)
  i32.const 2
  call $~lib/arraybuffer/ArrayBuffer#constructor
  global.set $assembly/indexer/constants/protorune/protocol
  global.get $assembly/indexer/constants/protorune/protocol
  i32.const 28010
  i32.store16
  i32.const 1
  global.set $~argumentsLength
  i32.const 3472
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.get $assembly/indexer/constants/protorune/protocol
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3632
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/OUTPOINT_TO_RUNES
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3696
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  drop
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3760
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/SYMBOL
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3808
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/SPACERS
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3856
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/DIVISIBILITY
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3920
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/ETCHINGS
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 3968
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/RUNE_ID_TO_ETCHING
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/indexer/constants/protorune/PROTORUNE
  i32.const 4032
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  global.set $assembly/indexer/constants/protorune/ETCHING_TO_RUNE_ID
  i32.const 24
  i32.const 14
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
  global.set $assembly/indexer/constants/index/PROTOCOLS_TO_INDEX
  global.get $assembly/indexer/constants/index/PROTOCOLS_TO_INDEX
  call $~lib/set/Set<u16>#add
  i32.const 1
  global.set $~argumentsLength
  i32.const 4096
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/HEIGHT_TO_BLOCKHASH
  i32.const 1
  global.set $~argumentsLength
  i32.const 4160
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/BLOCKHASH_TO_HEIGHT
  i32.const 1
  global.set $~argumentsLength
  i32.const 3632
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/OUTPOINT_TO_RUNES
  i32.const 1
  global.set $~argumentsLength
  i32.const 4224
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT
  i32.const 1
  global.set $~argumentsLength
  i32.const 3696
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/HEIGHT_TO_TRANSACTION_IDS
  i32.const 1
  global.set $~argumentsLength
  i32.const 3760
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/SYMBOL
  i32.const 1
  global.set $~argumentsLength
  i32.const 4288
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/CAP
  i32.const 1
  global.set $~argumentsLength
  i32.const 3808
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/SPACERS
  i32.const 1
  global.set $~argumentsLength
  i32.const 4336
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/OFFSETEND
  i32.const 1
  global.set $~argumentsLength
  i32.const 4400
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/OFFSETSTART
  i32.const 1
  global.set $~argumentsLength
  i32.const 4464
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/HEIGHTSTART
  i32.const 1
  global.set $~argumentsLength
  i32.const 4528
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/HEIGHTEND
  i32.const 1
  global.set $~argumentsLength
  i32.const 4592
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/AMOUNT
  i32.const 1
  global.set $~argumentsLength
  i32.const 4640
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/MINTS_REMAINING
  i32.const 1
  global.set $~argumentsLength
  i32.const 4720
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/PREMINE
  i32.const 1
  global.set $~argumentsLength
  i32.const 3856
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/DIVISIBILITY
  i32.const 1
  global.set $~argumentsLength
  i32.const 4784
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/RUNE_ID_TO_HEIGHT
  i32.const 1
  global.set $~argumentsLength
  i32.const 3920
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/ETCHINGS
  i32.const 1
  global.set $~argumentsLength
  i32.const 3968
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
  i32.const 1
  global.set $~argumentsLength
  i32.const 4032
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID
  i32.const 4848
  call $~lib/as-bignum/assembly/utils/atou128
  global.set $assembly/indexer/constants/index/MINIMUM_NAME
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  i64.const 26
  i64.store
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
  global.set $assembly/indexer/constants/index/TWENTY_SIX
  i32.const 5136
  call $~lib/as-bignum/assembly/utils/atou128
  global.set $assembly/indexer/constants/index/RESERVED_NAME
 )
 (func $assembly/quorum/widebst/BSTU128#getMaskPointer (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 5488
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
 )
 (func $~lib/string/String.UTF8.decode (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.tee $1
  local.get $0
  i32.add
  local.tee $3
  local.get $0
  i32.lt_u
  if
   i32.const 0
   i32.const 2864
   i32.const 770
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/stub/__new
  local.tee $4
  local.set $2
  loop $while-continue|0
   local.get $0
   local.get $3
   i32.lt_u
   if
    block $while-break|0
     local.get $0
     i32.load8_u
     local.set $5
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     i32.const 128
     i32.and
     if
      local.get $0
      local.get $3
      i32.eq
      br_if $while-break|0
      local.get $0
      i32.load8_u
      i32.const 63
      i32.and
      local.set $6
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $2
       local.get $5
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       local.get $6
       i32.or
       i32.store16
      else
       local.get $0
       local.get $3
       i32.eq
       br_if $while-break|0
       local.get $0
       i32.load8_u
       i32.const 63
       i32.and
       local.set $1
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       local.get $5
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $5
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $6
        i32.const 6
        i32.shl
        i32.or
        local.get $1
        i32.or
        local.set $1
       else
        local.get $0
        local.get $3
        i32.eq
        br_if $while-break|0
        local.get $0
        i32.load8_u
        i32.const 63
        i32.and
        local.get $5
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $6
        i32.const 12
        i32.shl
        i32.or
        local.get $1
        i32.const 6
        i32.shl
        i32.or
        i32.or
        local.set $1
        local.get $0
        i32.const 1
        i32.add
        local.set $0
       end
       local.get $1
       i32.const 65536
       i32.lt_u
       if
        local.get $2
        local.get $1
        i32.store16
       else
        local.get $2
        local.get $1
        i32.const 65536
        i32.sub
        local.tee $1
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.get $1
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        i32.const 16
        i32.shl
        i32.or
        i32.store
        local.get $2
        i32.const 2
        i32.add
        local.set $2
       end
      end
     else
      local.get $2
      local.get $5
      i32.store16
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
  end
  local.get $4
  local.get $2
  local.get $4
  i32.sub
  call $~lib/rt/stub/__renew
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  if (result i32)
   local.get $0
   local.tee $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const -2
   i32.and
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   i32.const 13
   i32.shr_u
   local.get $0
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   i32.const 16
   i32.shr_u
   local.get $0
   i32.xor
  else
   i32.const 0
  end
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $5
  loop $while-continue|0
   local.get $5
   if
    local.get $5
    i32.load offset=8
    local.tee $6
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     block $__inlined_func$~lib/string/String.__eq$2486 (result i32)
      i32.const 1
      local.get $5
      i32.load
      local.tee $2
      local.get $1
      i32.eq
      br_if $__inlined_func$~lib/string/String.__eq$2486
      drop
      i32.const 0
      local.get $1
      i32.eqz
      local.get $2
      i32.eqz
      i32.or
      br_if $__inlined_func$~lib/string/String.__eq$2486
      drop
      i32.const 0
      local.get $2
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      local.tee $0
      local.get $1
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      i32.ne
      br_if $__inlined_func$~lib/string/String.__eq$2486
      drop
      local.get $1
      local.set $3
      local.get $0
      i32.const 4
      i32.ge_u
      if (result i32)
       local.get $2
       i32.const 7
       i32.and
       local.get $1
       i32.const 7
       i32.and
       i32.or
      else
       i32.const 1
      end
      i32.eqz
      if
       loop $do-loop|0
        local.get $2
        i64.load
        local.get $3
        i64.load
        i64.eq
        if
         local.get $2
         i32.const 8
         i32.add
         local.set $2
         local.get $3
         i32.const 8
         i32.add
         local.set $3
         local.get $0
         i32.const 4
         i32.sub
         local.tee $0
         i32.const 4
         i32.ge_u
         br_if $do-loop|0
        end
       end
      end
      block $__inlined_func$~lib/util/string/compareImpl$143
       loop $while-continue|1
        local.get $0
        local.tee $4
        i32.const 1
        i32.sub
        local.set $0
        local.get $4
        if
         local.get $2
         i32.load16_u
         local.tee $8
         local.get $3
         i32.load16_u
         local.tee $7
         i32.sub
         local.set $4
         local.get $7
         local.get $8
         i32.ne
         br_if $__inlined_func$~lib/util/string/compareImpl$143
         local.get $2
         i32.const 2
         i32.add
         local.set $2
         local.get $3
         i32.const 2
         i32.add
         local.set $3
         br $while-continue|1
        end
       end
       i32.const 0
       local.set $4
      end
      local.get $4
      i32.eqz
     end
    end
    if
     local.get $5
     return
    end
    local.get $6
    i32.const -2
    i32.and
    local.set $5
    br $while-continue|0
   end
  end
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  local.tee $7
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
  local.tee $3
  if
   local.get $3
   local.get $2
   i32.store offset=4
  else
   local.get $0
   i32.load offset=12
   local.tee $3
   local.get $0
   i32.load offset=16
   i32.eq
   if
    local.get $0
    i32.load offset=20
    local.get $3
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    local.tee $9
    i32.const 1
    i32.add
    local.tee $3
    i32.const 2
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $8
    local.get $3
    i32.const 3
    i32.shl
    i32.const 3
    i32.div_s
    local.tee $6
    i32.const 12
    i32.mul
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $4
    local.get $0
    i32.load offset=8
    local.tee $10
    local.get $0
    i32.load offset=16
    i32.const 12
    i32.mul
    i32.add
    local.set $5
    local.get $4
    local.set $3
    loop $while-continue|0
     local.get $5
     local.get $10
     i32.ne
     if
      local.get $10
      i32.load offset=8
      i32.const 1
      i32.and
      i32.eqz
      if
       local.get $3
       local.get $10
       i32.load
       local.tee $11
       i32.store
       local.get $3
       local.get $10
       i32.load offset=4
       i32.store offset=4
       local.get $3
       local.get $8
       local.get $11
       call $~lib/util/hash/HASH<~lib/string/String>
       local.get $9
       i32.and
       i32.const 2
       i32.shl
       i32.add
       local.tee $11
       i32.load
       i32.store offset=8
       local.get $11
       local.get $3
       i32.store
       local.get $3
       i32.const 12
       i32.add
       local.set $3
      end
      local.get $10
      i32.const 12
      i32.add
      local.set $10
      br $while-continue|0
     end
    end
    local.get $0
    local.get $8
    i32.store
    local.get $0
    local.get $9
    i32.store offset=4
    local.get $0
    local.get $4
    i32.store offset=8
    local.get $0
    local.get $6
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=20
    i32.store offset=16
   end
   local.get $0
   i32.load offset=8
   local.set $3
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $4
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $3
   local.get $4
   i32.const 12
   i32.mul
   i32.add
   local.tee $3
   local.get $1
   i32.store
   local.get $3
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $3
   local.get $0
   i32.load
   local.get $7
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   i32.store offset=8
   local.get $0
   local.get $3
   i32.store
  end
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#get" (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 5520
   i32.const 5584
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/string/String.UTF8.decode
  local.set $1
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
  if
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $1
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#get"
   local.set $0
  else
   local.get $0
   local.get $0
   call $~lib/metashrew-as/assembly/indexer/index/__get_len
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $0
   call $~lib/metashrew-as/assembly/indexer/index/__get
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $1
   local.get $0
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  end
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.tee $0
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  memory.copy
  local.get $1
 )
 (func $assembly/quorum/widebst/BSTU128#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $6
  local.get $1
  i64.load offset=8
  local.tee $4
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $4
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $4
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $4
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store
  local.get $6
  local.get $1
  i64.load
  local.tee $4
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $4
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $4
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $4
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store offset=8
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  if
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $3
   local.get $1
   i64.load offset=8
   local.tee $4
   i64.const 8
   i64.shr_u
   i64.const 71777214294589695
   i64.and
   local.get $4
   i64.const 71777214294589695
   i64.and
   i64.const 8
   i64.shl
   i64.or
   local.tee $4
   i64.const 16
   i64.shr_u
   i64.const 281470681808895
   i64.and
   local.get $4
   i64.const 281470681808895
   i64.and
   i64.const 16
   i64.shl
   i64.or
   i64.const 32
   i64.rotr
   i64.store
   local.get $3
   local.get $1
   i64.load
   local.tee $4
   i64.const 8
   i64.shr_u
   i64.const 71777214294589695
   i64.and
   local.get $4
   i64.const 71777214294589695
   i64.and
   i64.const 8
   i64.shl
   i64.or
   local.tee $4
   i64.const 16
   i64.shr_u
   i64.const 281470681808895
   i64.and
   local.get $4
   i64.const 281470681808895
   i64.and
   i64.const 16
   i64.shl
   i64.or
   i64.const 32
   i64.rotr
   i64.store offset=8
   loop $for-loop|0
    local.get $5
    i32.const 16
    i32.lt_s
    if
     local.get $5
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $1
     local.get $5
     if
      local.get $1
      local.get $3
      local.get $5
      memory.copy
     end
     local.get $0
     local.get $1
     call $assembly/quorum/widebst/BSTU128#getMaskPointer
     local.tee $7
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
     local.tee $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.eqz
     if
      i32.const 32
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.set $1
     end
     local.get $3
     local.get $5
     i32.add
     i32.load8_u
     local.tee $8
     i32.const 3
     i32.shr_u
     local.get $1
     i32.add
     local.set $9
     i32.const 1
     i32.const 7
     local.get $8
     i32.const 7
     i32.and
     i32.sub
     i32.const 7
     i32.and
     i32.shl
     local.tee $8
     local.get $9
     i32.load8_u
     local.tee $10
     i32.and
     i32.eqz
     if
      local.get $9
      local.get $8
      local.get $10
      i32.or
      i32.store8
      local.get $7
      call $~lib/string/String.UTF8.decode
      local.set $8
      global.get $~lib/metashrew-as/assembly/indexer/index/_updates
      local.get $8
      local.get $1
      call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
      global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
      local.get $8
      local.get $7
      call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
  else
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $7
   local.get $1
   i64.load offset=8
   local.tee $4
   i64.const 8
   i64.shr_u
   i64.const 71777214294589695
   i64.and
   local.get $4
   i64.const 71777214294589695
   i64.and
   i64.const 8
   i64.shl
   i64.or
   local.tee $4
   i64.const 16
   i64.shr_u
   i64.const 281470681808895
   i64.and
   local.get $4
   i64.const 281470681808895
   i64.and
   i64.const 16
   i64.shl
   i64.or
   i64.const 32
   i64.rotr
   i64.store
   local.get $7
   local.get $1
   i64.load
   local.tee $4
   i64.const 8
   i64.shr_u
   i64.const 71777214294589695
   i64.and
   local.get $4
   i64.const 71777214294589695
   i64.and
   i64.const 8
   i64.shl
   i64.or
   local.tee $4
   i64.const 16
   i64.shr_u
   i64.const 281470681808895
   i64.and
   local.get $4
   i64.const 281470681808895
   i64.and
   i64.const 16
   i64.shl
   i64.or
   i64.const 32
   i64.rotr
   i64.store offset=8
   i32.const 15
   local.set $1
   loop $for-loop|00
    local.get $1
    i32.const 0
    i32.ge_s
    if
     block $for-break0
      local.get $1
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.set $3
      local.get $1
      if
       local.get $3
       local.get $7
       local.get $1
       memory.copy
      end
      local.get $0
      local.get $3
      call $assembly/quorum/widebst/BSTU128#getMaskPointer
      local.tee $8
      call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
      local.tee $3
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.eqz
      if
       i32.const 32
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.set $3
      end
      local.get $1
      local.get $7
      i32.add
      i32.load8_u
      local.tee $5
      i32.const 3
      i32.shr_u
      local.get $3
      i32.add
      local.tee $9
      i32.load8_u
      local.tee $10
      i32.const 1
      i32.const 7
      local.get $5
      i32.const 7
      i32.and
      i32.sub
      i32.const 7
      i32.and
      local.tee $5
      i32.shl
      i32.and
      if
       local.get $9
       local.get $10
       i32.const -2
       local.get $5
       i32.rotl
       i32.and
       i32.store8
      end
      block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/isZeroU256$198 (result i32)
       i32.const 0
       local.set $5
       loop $for-loop|001
        local.get $5
        i32.const 4
        i32.lt_s
        if
         i32.const 0
         local.get $3
         local.get $5
         i32.const 3
         i32.shl
         i32.add
         i64.load
         i64.const 0
         i64.ne
         br_if $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/isZeroU256$198
         drop
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-loop|001
        end
       end
       i32.const 1
      end
      if
       i32.const 0
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.set $3
       local.get $8
       call $~lib/string/String.UTF8.decode
       local.set $5
       global.get $~lib/metashrew-as/assembly/indexer/index/_updates
       local.get $5
       local.get $3
       call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
       global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
       local.get $5
       local.get $8
       call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
      else
       local.get $8
       call $~lib/string/String.UTF8.decode
       local.set $1
       global.get $~lib/metashrew-as/assembly/indexer/index/_updates
       local.get $1
       local.get $3
       call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
       global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
       local.get $1
       local.get $8
       call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
       br $for-break0
      end
      local.get $1
      i32.const 1
      i32.sub
      local.set $1
      br $for-loop|00
     end
    end
   end
  end
  local.get $0
  i32.load
  local.get $6
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $0
  call $~lib/string/String.UTF8.decode
  local.set $1
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $1
  local.get $2
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $1
  local.get $0
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
 )
 (func $~lib/array/Array<u64>#__set (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3344
    i32.const 3520
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  i64.store
 )
 (func $~lib/array/Array<u64>#__get (param $0 i32) (param $1 i32) (result i64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3344
   i32.const 3520
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  i64.load
 )
 (func $~lib/metashrew-as/assembly/indexer/bst/maskGreaterThan (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  i32.const 16
  i32.const 22
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  i32.const 64
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.const 64
  memory.fill
  local.get $3
  local.get $4
  i32.store
  local.get $3
  local.get $4
  i32.store offset=4
  local.get $3
  i32.const 64
  i32.store offset=8
  local.get $3
  i32.const 4
  i32.store offset=12
  local.get $3
  i32.const 0
  local.get $0
  i64.load
  local.tee $2
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $2
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $2
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $2
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  call $~lib/array/Array<u64>#__set
  local.get $3
  i32.const 1
  local.get $0
  i64.load offset=8
  local.tee $2
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $2
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $2
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $2
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  call $~lib/array/Array<u64>#__set
  local.get $3
  i32.const 2
  local.get $0
  i64.load offset=16
  local.tee $2
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $2
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $2
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $2
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  call $~lib/array/Array<u64>#__set
  local.get $3
  i32.const 3
  local.get $0
  i64.load offset=24
  local.tee $2
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $2
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $2
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $2
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  call $~lib/array/Array<u64>#__set
  local.get $3
  local.get $1
  i32.const 255
  i32.and
  i32.const 6
  i32.shr_u
  local.tee $4
  local.get $3
  local.get $4
  call $~lib/array/Array<u64>#__get
  i64.const 1
  local.get $1
  i32.const 63
  i32.and
  local.tee $1
  i32.const 1
  i32.add
  i64.extend_i32_u
  i64.shl
  i64.const 1
  i64.sub
  i64.const 63
  local.get $1
  i64.extend_i32_u
  i64.sub
  i64.shl
  i64.const -1
  i64.xor
  i64.and
  call $~lib/array/Array<u64>#__set
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_u
   if
    local.get $3
    local.get $1
    i64.const 0
    call $~lib/array/Array<u64>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   i32.const 4
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 3
    i32.shl
    i32.add
    local.get $3
    local.get $1
    call $~lib/array/Array<u64>#__get
    local.tee $2
    i64.const 8
    i64.shr_u
    i64.const 71777214294589695
    i64.and
    local.get $2
    i64.const 71777214294589695
    i64.and
    i64.const 8
    i64.shl
    i64.or
    local.tee $2
    i64.const 16
    i64.shr_u
    i64.const 281470681808895
    i64.and
    local.get $2
    i64.const 281470681808895
    i64.and
    i64.const 16
    i64.shl
    i64.or
    i64.const 32
    i64.rotr
    i64.store
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
 )
 (func $~lib/metashrew-as/assembly/indexer/bst/binarySearchU16 (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 65535
  i32.and
  i32.const 8
  i32.shr_u
  local.tee $1
  if (result i32)
   block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU8$22 (result i32)
    local.get $1
    i32.const 4
    i32.shr_u
    local.tee $0
    if
     block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$32 (result i32)
      local.get $0
      i32.const 2
      i32.shr_u
      local.tee $1
      if
       local.get $1
       i32.const 1
       i32.shr_u
       i32.eqz
       br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$32
      end
      i32.const 2
      i32.const 3
      local.get $0
      i32.const 3
      i32.and
      i32.const 1
      i32.shr_u
      select
     end
     br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU8$22
    end
    block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$33 (result i32)
     local.get $1
     i32.const 15
     i32.and
     local.tee $0
     i32.const 2
     i32.shr_u
     local.tee $1
     if
      local.get $1
      i32.const 1
      i32.shr_u
      i32.eqz
      br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$33
     end
     i32.const 2
     i32.const 3
     local.get $0
     i32.const 3
     i32.and
     i32.const 1
     i32.shr_u
     select
    end
    i32.const 4
    i32.add
   end
  else
   block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU8$23 (result i32)
    local.get $0
    i32.const 255
    i32.and
    local.tee $0
    i32.const 15
    i32.and
    local.set $1
    local.get $0
    i32.const 4
    i32.shr_u
    local.tee $0
    if
     block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$320 (result i32)
      local.get $0
      i32.const 2
      i32.shr_u
      local.tee $1
      if
       local.get $1
       i32.const 1
       i32.shr_u
       i32.eqz
       br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$320
      end
      i32.const 2
      i32.const 3
      local.get $0
      i32.const 3
      i32.and
      i32.const 1
      i32.shr_u
      select
     end
     br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU8$23
    end
    block $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$331 (result i32)
     local.get $1
     i32.const 2
     i32.shr_u
     local.tee $0
     if
      local.get $0
      i32.const 1
      i32.shr_u
      i32.eqz
      br $__inlined_func$~lib/metashrew-as/assembly/indexer/bst/binarySearchU4$331
     end
     i32.const 2
     i32.const 3
     local.get $1
     i32.const 3
     i32.and
     i32.const 1
     i32.shr_u
     select
    end
    i32.const 4
    i32.add
   end
   i32.const 8
   i32.add
  end
 )
 (func $~lib/metashrew-as/assembly/indexer/bst/binarySearchU32 (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 16
  i32.shr_u
  local.tee $1
  if (result i32)
   local.get $1
   call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU16
  else
   local.get $0
   i32.const 65535
   i32.and
   call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU16
   i32.const 16
   i32.add
  end
 )
 (func $~lib/metashrew-as/assembly/indexer/bst/binarySearchU64 (param $0 i64) (result i32)
  (local $1 i32)
  local.get $0
  i64.const 32
  i64.shr_u
  i64.const 4294967295
  i64.and
  i32.wrap_i64
  local.tee $1
  if
   local.get $1
   call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU32
   return
  end
  local.get $0
  i64.const 4294967295
  i64.and
  i32.wrap_i64
  call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU32
  i32.const 32
  i32.add
 )
 (func $~lib/metashrew-as/assembly/indexer/bst/binarySearchU256 (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  local.get $0
  i64.load
  local.tee $1
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $1
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $1
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $1
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  local.tee $1
  local.get $0
  i64.load offset=8
  local.tee $2
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $2
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $2
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $2
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  local.tee $3
  i64.or
  local.tee $2
  local.get $0
  i64.load offset=16
  local.tee $4
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $4
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $4
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $4
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  local.tee $4
  local.get $0
  i64.load offset=24
  local.tee $5
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $5
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $5
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $5
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  local.tee $5
  i64.or
  i64.or
  i64.eqz
  if
   i32.const -1
   return
  end
  local.get $2
  i64.const 0
  i64.ne
  if (result i32)
   local.get $1
   i64.const 0
   i64.ne
   if (result i32)
    local.get $1
    call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU64
   else
    local.get $3
    call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU64
    i32.const -64
    i32.sub
   end
  else
   local.get $4
   i64.const 0
   i64.ne
   if (result i32)
    local.get $4
    call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU64
   else
    local.get $5
    call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU64
    i32.const -64
    i32.sub
   end
   i32.const 128
   i32.add
  end
 )
 (func $assembly/quorum/widebst/BSTU128#seekGreater (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.get $1
  i64.load offset=8
  local.tee $3
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $3
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store
  local.get $2
  local.get $1
  i64.load
  local.tee $3
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $3
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store offset=8
  loop $do-loop|0
   local.get $2
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.tee $4
   local.get $4
   i32.load offset=4
   i32.const 1
   i32.sub
   i32.store offset=4
   local.get $4
   i32.load offset=4
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $1
   local.get $4
   i32.load
   local.get $4
   i32.load offset=4
   memory.copy
   local.get $0
   local.get $1
   call $assembly/quorum/widebst/BSTU128#getMaskPointer
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
   local.tee $4
   i32.const 20
   i32.sub
   i32.load offset=16
   if
    local.get $4
    local.get $2
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.add
    i32.load8_u
    call $~lib/metashrew-as/assembly/indexer/bst/maskGreaterThan
    local.get $4
    call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU256
    local.tee $2
    i32.const -1
    i32.ne
    if
     i32.const 2
     i32.const 2
     i32.const 10
     call $~lib/rt/__newArray
     local.tee $4
     i32.load offset=4
     drop
     local.get $4
     i32.const 0
     local.get $1
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     call $~lib/metashrew-as/assembly/utils/box/Box#constructor
     call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
     i32.const 1
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $1
     local.get $2
     i32.store8
     local.get $4
     i32.const 1
     local.get $1
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     call $~lib/metashrew-as/assembly/utils/box/Box#constructor
     call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
     local.get $0
     local.set $2
     local.get $4
     call $~lib/metashrew-as/assembly/utils/box/Box.concat
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 20
      i32.sub
      i32.load offset=16
      local.tee $1
      i32.const 16
      i32.ne
      if
       local.get $1
       i32.const 1
       i32.add
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.tee $1
       local.get $0
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=16
       memory.copy
       local.get $1
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.add
       local.get $2
       local.get $0
       call $assembly/quorum/widebst/BSTU128#getMaskPointer
       call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
       local.tee $0
       i32.const 20
       i32.sub
       i32.load offset=16
       if (result i32)
        local.get $0
       else
        i32.const 32
        call $~lib/arraybuffer/ArrayBuffer#constructor
       end
       call $~lib/metashrew-as/assembly/indexer/bst/binarySearchU256
       i32.store8
       local.get $1
       local.set $0
       br $while-continue|0
      end
     end
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $1
     i64.const 0
     i64.store
     local.get $1
     i64.const 0
     i64.store offset=8
     local.get $1
     local.get $0
     i64.load
     local.tee $3
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $3
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $3
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $3
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store offset=8
     local.get $1
     local.get $0
     i64.load offset=8
     local.tee $3
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $3
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $3
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $3
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store
     local.get $1
     return
    end
   end
   local.get $1
   local.tee $2
   i32.const 20
   i32.sub
   i32.load offset=16
   br_if $do-loop|0
  end
  i32.const 0
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 5836
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 5836
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 5836
   i32.add
   i32.load
   i32.store
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 5836
   i32.add
   i32.load
   i32.store
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16
  end
 )
 (func $~lib/util/number/utoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i64.eqz
  if
   i32.const 5824
   return
  end
  i32.const 63
  local.get $0
  i64.clz
  i32.wrap_i64
  i32.sub
  i32.const 2
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $1
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/stub/__new
  local.set $2
  loop $while-continue|01
   local.get $1
   i32.const 2
   i32.ge_u
   if
    local.get $2
    local.get $1
    i32.const 2
    i32.sub
    local.tee $1
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.const 6256
    i32.add
    i32.load
    i32.store
    local.get $0
    i64.const 8
    i64.shr_u
    local.set $0
    br $while-continue|01
   end
  end
  local.get $1
  i32.const 1
  i32.and
  if
   local.get $2
   local.get $0
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.const 6256
   i32.add
   i32.load16_u
   i32.store16
  end
  local.get $2
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 7408
  local.set $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.tee $3
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.tee $4
  i32.add
  local.tee $5
  if
   local.get $5
   i32.const 2
   call $~lib/rt/stub/__new
   local.tee $2
   local.get $0
   local.get $3
   memory.copy
   local.get $2
   local.get $3
   i32.add
   local.get $1
   local.get $4
   memory.copy
  end
  local.get $2
 )
 (func $assembly/utils/padLeft (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 7408
  local.set $1
  loop $for-loop|0
   local.get $2
   i32.const 16
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.sub
   i32.lt_s
   if
    local.get $1
    i32.const 5824
    call $~lib/string/String.__concat
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.get $0
  call $~lib/string/String.__concat
 )
 (func $assembly/index/test_BSTU128
  (local $0 i32)
  (local $1 i32)
  i32.const 1
  global.set $~argumentsLength
  i32.const 5424
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.set $1
  i32.const 4
  i32.const 21
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.store
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 256
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 256
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.const 5456
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $assembly/quorum/widebst/BSTU128#set
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 320
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.const 5456
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $assembly/quorum/widebst/BSTU128#set
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 260
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.const 5456
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $assembly/quorum/widebst/BSTU128#set
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 259
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $0
  local.get $1
  call $assembly/quorum/widebst/BSTU128#seekGreater
  local.tee $1
  i64.load offset=8
  call $~lib/util/number/utoa64
  call $assembly/utils/padLeft
  local.get $1
  i64.load
  call $~lib/util/number/utoa64
  call $assembly/utils/padLeft
  call $~lib/string/String.__concat
  local.set $1
  i32.const 2
  global.set $~argumentsLength
  local.get $1
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 260
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $assembly/quorum/widebst/BSTU128#set
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 259
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $0
  local.get $1
  call $assembly/quorum/widebst/BSTU128#seekGreater
  local.tee $0
  i64.load offset=8
  call $~lib/util/number/utoa64
  call $assembly/utils/padLeft
  local.get $0
  i64.load
  call $~lib/util/number/utoa64
  call $assembly/utils/padLeft
  call $~lib/string/String.__concat
  local.set $0
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
 )
 (func $~lib/metashrew-as/assembly/utils/utils/parseBytes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.tee $2
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load
  local.get $1
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  local.get $1
  i32.sub
  i32.store offset=4
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/utils/utils/parseVarInt (param $0 i32) (result i64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load
  local.tee $2
  i32.load8_u
  local.set $3
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.sub
  i32.store offset=4
  block $case3|0
   block $case2|0
    block $case1|0
     block $case0|0
      local.get $3
      i32.const 253
      i32.sub
      br_table $case2|0 $case1|0 $case0|0 $case3|0
     end
     local.get $0
     i32.load
     local.tee $2
     i64.load
     local.set $1
     local.get $0
     local.get $2
     i32.const 8
     i32.add
     i32.store
     local.get $0
     local.get $0
     i32.load offset=4
     i32.const 8
     i32.sub
     i32.store offset=4
     local.get $1
     return
    end
    local.get $0
    i32.load
    local.tee $2
    i32.load
    local.set $3
    local.get $0
    local.get $2
    i32.const 4
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 4
    i32.sub
    i32.store offset=4
    local.get $3
    i64.extend_i32_u
    return
   end
   local.get $0
   i32.load
   local.tee $2
   i32.load16_u
   local.set $3
   local.get $0
   local.get $2
   i32.const 2
   i32.add
   i32.store
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 2
   i32.sub
   i32.store offset=4
   local.get $3
   i64.extend_i32_u
   return
  end
  local.get $3
  i64.extend_i32_u
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Transaction>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 16
  i32.const 33
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 2608
   i32.const 3520
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  local.get $2
  memory.fill
  local.get $1
  local.get $3
  i32.store
  local.get $1
  local.get $3
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=12
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/blockdata/transaction/Output#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  i32.const 21
  i32.const 31
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.store8 offset=20
  local.get $0
  i32.load
  local.tee $3
  i64.load
  local.set $4
  local.get $0
  local.get $3
  i32.const 8
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 8
  i32.sub
  i32.store offset=4
  local.get $2
  local.get $4
  i64.store offset=8
  local.get $2
  local.get $0
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
  i32.wrap_i64
  call $~lib/metashrew-as/assembly/utils/utils/parseBytes
  i32.store offset=16
  local.get $2
  local.get $3
  local.get $0
  i32.load
  local.get $3
  i32.sub
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store
  local.get $2
  local.get $1
  i32.store8 offset=20
  local.get $2
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $2
  i32.store offset=12
  local.get $2
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3344
   i32.const 3520
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.eqz
  if
   i32.const 7440
   i32.const 3520
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 36
  i32.const 25
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store8 offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $2
  i32.const 0
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.store offset=20
  local.get $2
  i32.const 0
  i32.store offset=24
  local.get $2
  i32.const 0
  i32.store offset=28
  local.get $2
  i32.const 0
  i32.store offset=32
  local.get $2
  i32.const 0
  i32.store
  i32.const 16
  i32.const 30
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.const 32
  memory.fill
  local.get $3
  local.get $4
  i32.store
  local.get $3
  local.get $4
  i32.store offset=4
  local.get $3
  i32.const 32
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  local.get $2
  local.get $3
  i32.store offset=12
  i32.const 16
  i32.const 32
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.const 32
  memory.fill
  local.get $3
  local.get $4
  i32.store
  local.get $3
  local.get $4
  i32.store offset=4
  local.get $3
  i32.const 32
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  local.get $2
  local.get $3
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.store offset=24
  local.get $2
  i32.const 0
  i32.store offset=28
  local.get $2
  i32.const 0
  i32.store8 offset=8
  local.get $2
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=32
  local.get $0
  i32.load
  local.tee $3
  local.set $4
  local.get $3
  i32.load
  local.set $5
  local.get $0
  local.get $3
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $2
  local.get $5
  i32.store offset=4
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.set $3
  local.get $0
  i32.load
  i32.load8_u
  local.set $5
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.sub
  i32.store offset=4
  local.get $0
  i32.load
  i32.load8_u
  local.set $6
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.sub
  i32.store offset=4
  local.get $5
  i32.eqz
  local.get $6
  i32.const 1
  i32.eq
  i32.and
  if
   local.get $2
   i32.const 1
   i32.store8 offset=8
  else
   local.get $0
   local.get $3
   i32.load
   i32.store
   local.get $0
   local.get $3
   i32.load offset=4
   i32.store offset=4
  end
  local.get $0
  i32.load
  local.set $3
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
  i32.wrap_i64
  local.set $5
  loop $for-loop|0
   local.get $1
   local.get $5
   i32.lt_s
   if
    local.get $2
    i32.load offset=12
    local.get $1
    i32.const 24
    i32.const 26
    call $~lib/rt/stub/__new
    local.tee $6
    i32.const 0
    i32.store
    local.get $6
    i32.const 0
    i32.store offset=4
    local.get $6
    i32.const 0
    i32.store offset=8
    local.get $6
    i32.const 0
    i32.store offset=12
    local.get $6
    i32.const 0
    i32.store offset=16
    local.get $6
    i32.const 0
    i32.store offset=20
    local.get $0
    i32.load
    local.set $7
    local.get $6
    local.get $0
    i32.const 32
    call $~lib/metashrew-as/assembly/utils/utils/parseBytes
    i32.store offset=4
    local.get $0
    i32.load
    i32.load
    local.set $8
    local.get $0
    local.get $0
    i32.load
    i32.const 4
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 4
    i32.sub
    i32.store offset=4
    local.get $6
    local.get $8
    i32.store offset=8
    local.get $6
    local.get $0
    local.get $0
    call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
    i32.wrap_i64
    call $~lib/metashrew-as/assembly/utils/utils/parseBytes
    i32.store offset=12
    local.get $0
    i32.load
    i32.load
    local.set $8
    local.get $0
    local.get $0
    i32.load
    i32.const 4
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 4
    i32.sub
    i32.store offset=4
    local.get $6
    local.get $8
    i32.store offset=16
    local.get $6
    i32.const 0
    i32.store offset=20
    local.get $6
    local.get $7
    local.get $0
    i32.load
    local.get $7
    i32.sub
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    i32.store
    local.get $6
    call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
  i32.wrap_i64
  local.set $6
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $6
   i32.lt_s
   if
    local.get $2
    i32.load8_u offset=8
    if (result i32)
     local.get $2
     i32.load offset=16
     local.get $0
     i32.const 1
     call $~lib/metashrew-as/assembly/blockdata/transaction/Output#constructor
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
    else
     local.get $2
     i32.load offset=16
     local.get $0
     i32.const 0
     call $~lib/metashrew-as/assembly/blockdata/transaction/Output#constructor
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
    end
    drop
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  local.get $2
  local.get $3
  local.get $0
  i32.load
  local.get $3
  i32.sub
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store offset=28
  local.get $2
  i32.load8_u offset=8
  if
   local.get $0
   i32.load
   local.set $6
   i32.const 0
   local.set $1
   loop $for-loop|2
    local.get $1
    local.get $5
    i32.lt_s
    if
     local.get $2
     i32.load offset=12
     local.get $1
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     i32.const 8
     i32.const 27
     call $~lib/rt/stub/__new
     local.tee $9
     i32.const 0
     i32.store
     local.get $9
     i32.const 0
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.store
     local.get $0
     i32.load
     local.set $10
     local.get $0
     call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
     i32.wrap_i64
     local.set $11
     i32.const 16
     i32.const 29
     call $~lib/rt/stub/__new
     local.tee $3
     i32.const 0
     i32.store
     local.get $3
     i32.const 0
     i32.store offset=4
     local.get $3
     i32.const 0
     i32.store offset=8
     local.get $3
     i32.const 0
     i32.store offset=12
     local.get $11
     i32.const 268435455
     i32.gt_u
     if
      i32.const 2608
      i32.const 3520
      i32.const 70
      i32.const 60
      call $~lib/builtins/abort
      unreachable
     end
     i32.const 8
     local.get $11
     local.get $11
     i32.const 8
     i32.le_u
     select
     i32.const 2
     i32.shl
     local.tee $7
     i32.const 1
     call $~lib/rt/stub/__new
     local.tee $8
     i32.const 0
     local.get $7
     memory.fill
     local.get $3
     local.get $8
     i32.store
     local.get $3
     local.get $8
     i32.store offset=4
     local.get $3
     local.get $7
     i32.store offset=8
     local.get $3
     local.get $11
     i32.store offset=12
     local.get $9
     local.get $3
     i32.store offset=4
     i32.const 0
     local.set $3
     loop $for-loop|00
      local.get $3
      local.get $11
      i32.lt_s
      if
       local.get $9
       i32.load offset=4
       local.get $3
       i32.const 7
       i32.const 28
       call $~lib/rt/stub/__new
       local.tee $7
       i32.const 0
       i32.store
       local.get $7
       i32.const 0
       i32.store8 offset=4
       local.get $7
       i32.const 0
       i32.store8 offset=5
       local.get $7
       i32.const 0
       i32.store8 offset=6
       local.get $7
       local.get $0
       local.get $0
       call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
       i32.wrap_i64
       call $~lib/metashrew-as/assembly/utils/utils/parseBytes
       i32.store
       local.get $7
       i32.load
       local.tee $8
       i32.load
       local.get $8
       i32.load offset=4
       call $~lib/metashrew-as/assembly/utils/box/Box#constructor
       local.tee $8
       i32.load
       local.tee $12
       i32.load8_u
       local.set $13
       local.get $8
       local.get $12
       i32.const 1
       i32.add
       i32.store
       local.get $8
       local.get $8
       i32.load offset=4
       i32.const 1
       i32.sub
       i32.store offset=4
       local.get $7
       local.get $13
       i32.store8 offset=4
       block $break|0
        block $case2|0
         block $case1|0
          local.get $7
          i32.load8_u offset=4
          local.tee $8
          i32.const 80
          i32.ne
          if
           local.get $8
           i32.const 48
           i32.eq
           br_if $case1|0
           br $case2|0
          end
          local.get $7
          i32.const 1
          i32.store8 offset=6
          local.get $7
          i32.const 0
          i32.store8 offset=5
          br $break|0
         end
         local.get $7
         i32.const 0
         i32.store8 offset=5
         local.get $7
         i32.const 0
         i32.store8 offset=6
         br $break|0
        end
        local.get $7
        i32.const 0
        i32.store8 offset=6
        local.get $7
        i32.const 1
        i32.store8 offset=5
       end
       local.get $7
       i32.load
       i32.load offset=4
       i32.const 1
       i32.le_u
       if
        local.get $7
        i32.const 0
        i32.store8 offset=5
       end
       local.get $7
       call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|00
      end
     end
     local.get $9
     local.get $10
     local.get $0
     i32.load
     local.get $10
     i32.sub
     call $~lib/metashrew-as/assembly/utils/box/Box#constructor
     i32.store
     local.get $9
     i32.store offset=20
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|2
    end
   end
   local.get $2
   local.get $6
   local.get $0
   i32.load
   local.get $6
   i32.sub
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   i32.store offset=24
  end
  local.get $0
  i32.load
  local.tee $1
  i32.load
  local.set $3
  local.get $0
  local.get $1
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store offset=20
  local.get $2
  local.get $4
  local.get $0
  i32.load
  local.get $4
  i32.sub
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/blockdata/block/Block#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 20
  i32.const 23
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.load
  local.set $3
  i32.const 28
  i32.const 24
  call $~lib/rt/stub/__new
  local.tee $5
  i32.const 0
  i32.store
  local.get $5
  i32.const 0
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $5
  i32.const 0
  i32.store offset=12
  local.get $5
  i32.const 0
  i32.store offset=16
  local.get $5
  i32.const 0
  i32.store offset=20
  local.get $5
  i32.const 0
  i32.store offset=24
  local.get $0
  i32.load
  local.tee $6
  i32.load
  local.set $7
  local.get $0
  local.get $6
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $5
  local.get $7
  i32.store
  local.get $5
  local.get $0
  i32.const 32
  call $~lib/metashrew-as/assembly/utils/utils/parseBytes
  i32.store offset=4
  local.get $5
  local.get $0
  i32.const 32
  call $~lib/metashrew-as/assembly/utils/utils/parseBytes
  i32.store offset=8
  local.get $0
  i32.load
  i32.load
  local.set $7
  local.get $0
  local.get $0
  i32.load
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $5
  local.get $7
  i32.store offset=12
  local.get $0
  i32.load
  i32.load
  local.set $7
  local.get $0
  local.get $0
  i32.load
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $5
  local.get $7
  i32.store offset=16
  local.get $0
  i32.load
  i32.load
  local.set $7
  local.get $0
  local.get $0
  i32.load
  i32.const 4
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $5
  local.get $7
  i32.store offset=20
  local.get $5
  local.get $6
  local.get $0
  i32.load
  local.get $6
  i32.sub
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store offset=24
  local.get $1
  local.get $5
  i32.store offset=4
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parseVarInt
  local.tee $4
  i32.wrap_i64
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Transaction>#constructor
  local.set $5
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.wrap_i64
   i32.lt_s
   if
    local.get $5
    local.get $2
    local.get $0
    call $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#constructor
    call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.get $5
  i32.store offset=8
  local.get $1
  local.get $3
  local.get $0
  i32.load
  local.get $3
  i32.sub
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store
  local.get $1
 )
 (func $~lib/as-bignum/assembly/integer/u128/u128#postDec (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $0
  i64.load
  local.set $1
  local.get $0
  i64.load offset=8
  local.set $2
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $1
  i64.store
  local.get $0
  local.get $2
  i64.store offset=8
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $0
  local.get $0
  i64.load offset=8
  local.get $0
  i64.load
  local.tee $1
  i64.const 1
  i64.sub
  local.tee $2
  local.get $1
  i64.gt_u
  i64.extend_i32_u
  i64.sub
  i64.store offset=8
  local.get $0
  local.get $2
  i64.store
  local.get $0
 )
 (func $~lib/array/Array<u8>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 16
  i32.const 19
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 2608
   i32.const 3520
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  local.tee $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  local.get $2
  memory.fill
  local.get $1
  local.get $3
  i32.store
  local.get $1
  local.get $3
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=12
  local.get $1
 )
 (func $assembly/utils/toArrayBuffer (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 16
  call $~lib/array/Array<u8>#constructor
  local.tee $1
  i32.load offset=4
  local.tee $2
  local.get $0
  i64.load
  i64.store
  local.get $2
  local.get $0
  i64.load offset=8
  i64.store offset=8
  local.get $1
  i32.load
 )
 (func $assembly/utils/nameToArrayBuffer (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  loop $for-loop|0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $4
   local.get $3
   i32.gt_s
   if
    local.get $3
    local.get $4
    i32.ge_u
    if (result i32)
     i32.const -1
    else
     local.get $0
     local.get $3
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u
    end
    local.set $7
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $4
    local.get $7
    i32.const -64
    i32.add
    i64.extend_i32_s
    local.tee $2
    i64.store
    local.get $4
    local.get $2
    i64.const 63
    i64.shr_s
    i64.store offset=8
    global.get $assembly/indexer/constants/index/TWENTY_SIX
    local.tee $7
    i64.load
    local.tee $2
    i64.const 32
    i64.shr_u
    local.set $5
    local.get $1
    i64.load
    local.tee $8
    i64.const 4294967295
    i64.and
    local.tee $6
    local.get $2
    i64.const 4294967295
    i64.and
    local.tee $9
    i64.mul
    local.set $10
    local.get $5
    local.get $6
    i64.mul
    local.get $9
    local.get $8
    i64.const 32
    i64.shr_u
    local.tee $9
    i64.mul
    local.get $10
    i64.const 32
    i64.shr_u
    i64.add
    local.tee $11
    i64.const 4294967295
    i64.and
    i64.add
    local.set $6
    local.get $5
    local.get $9
    i64.mul
    local.get $11
    i64.const 32
    i64.shr_u
    i64.add
    local.get $2
    local.get $1
    i64.load offset=8
    i64.mul
    i64.add
    local.get $7
    i64.load offset=8
    local.get $8
    i64.mul
    i64.add
    local.get $6
    i64.const 32
    i64.shr_u
    i64.add
    global.set $~lib/as-bignum/assembly/globals/__res128_hi
    global.get $~lib/as-bignum/assembly/globals/__res128_hi
    local.set $2
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $1
    local.get $10
    i64.const 4294967295
    i64.and
    local.get $6
    i64.const 32
    i64.shl
    i64.or
    i64.store
    local.get $1
    local.get $2
    i64.store offset=8
    local.get $1
    i64.load
    local.tee $2
    local.get $4
    i64.load
    i64.add
    local.tee $5
    local.get $2
    i64.lt_u
    i64.extend_i32_u
    local.get $1
    i64.load offset=8
    local.get $4
    i64.load offset=8
    i64.add
    i64.add
    local.set $2
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $1
    local.get $5
    i64.store
    local.get $1
    local.get $2
    i64.store offset=8
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $1
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $1
  call $~lib/as-bignum/assembly/integer/u128/u128#postDec
  call $assembly/utils/toArrayBuffer
 )
 (func $~lib/array/Array<i32>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 11
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $assembly/indexer/RunesTransaction/RunesTransaction#processRunestones (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 16
  i32.const 37
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const -1
  i32.store
  local.get $1
  call $~lib/array/Array<i32>#constructor
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<i32>#constructor
  i32.store offset=8
  local.get $1
  i32.const -1
  i32.store offset=12
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load offset=16
   local.tee $3
   i32.load offset=12
   i32.lt_s
   if
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.load offset=16
    i32.load
    i32.load16_u
    local.set $4
    local.get $0
    i32.load offset=16
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.load offset=16
    i32.load
    i32.load8_u offset=2
    local.set $3
    block $break|1
     block $case3|1
      block $case2|1
       block $case1|1
        local.get $4
        i32.const 23914
        i32.ne
        if
         local.get $4
         i32.const 27242
         i32.eq
         br_if $case1|1
         local.get $4
         i32.const 27498
         i32.eq
         br_if $case2|1
         br $case3|1
        end
        local.get $1
        i32.load
        i32.const -1
        i32.eq
        if
         local.get $1
         local.get $2
         i32.store
        end
        br $break|1
       end
       local.get $1
       i32.load offset=4
       local.get $2
       call $~lib/array/Array<i32>#push
       br $break|1
      end
      local.get $3
      i32.eqz
      if
       local.get $1
       i32.load offset=8
       local.get $2
       call $~lib/array/Array<i32>#push
      end
      br $break|1
     end
     local.get $1
     i32.load offset=12
     i32.const -1
     i32.eq
     if (result i32)
      global.get $assembly/indexer/constants/index/PROTOCOLS_TO_INDEX
      local.tee $3
      i32.load
      local.get $3
      i32.load offset=4
      local.get $4
      i32.const -1028477379
      i32.mul
      i32.const 374761395
      i32.add
      i32.const 17
      i32.rotl
      i32.const 668265263
      i32.mul
      local.tee $3
      local.get $3
      i32.const 15
      i32.shr_u
      i32.xor
      i32.const -2048144777
      i32.mul
      local.tee $3
      local.get $3
      i32.const 13
      i32.shr_u
      i32.xor
      i32.const -1028477379
      i32.mul
      local.tee $3
      local.get $3
      i32.const 16
      i32.shr_u
      i32.xor
      i32.and
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $3
      block $__inlined_func$~lib/set/Set<u16>#find$2090
       loop $while-continue|0
        local.get $3
        if
         local.get $3
         i32.load offset=4
         local.tee $5
         i32.const 1
         i32.and
         if (result i32)
          i32.const 0
         else
          local.get $3
          i32.load16_u
          local.get $4
          i32.eq
         end
         br_if $__inlined_func$~lib/set/Set<u16>#find$2090
         local.get $5
         i32.const -2
         i32.and
         local.set $3
         br $while-continue|0
        end
       end
       i32.const 0
       local.set $3
      end
      local.get $3
     else
      i32.const 0
     end
     if
      local.get $1
      local.get $2
      i32.store offset=12
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  local.get $1
  i32.store offset=36
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 10
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $~lib/metashrew-as/assembly/utils/yabsp/scriptParse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#constructor
  local.set $1
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.set $2
  loop $while-continue|0
   local.get $2
   i32.load offset=4
   if
    local.get $2
    i32.load
    local.tee $3
    i32.load8_u
    local.set $0
    local.get $2
    local.get $3
    i32.const 1
    i32.add
    i32.store
    local.get $2
    local.get $2
    i32.load offset=4
    i32.const 1
    i32.sub
    i32.store offset=4
    i32.const -1
    local.get $0
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    local.set $3
    local.get $0
    i32.const 78
    i32.le_u
    i32.const 0
    local.get $0
    select
    if
     block $break|1
      block $case2|1
       block $case1|1
        block $case0|1
         local.get $0
         i32.const 76
         i32.sub
         br_table $case0|1 $case1|1 $case2|1 $break|1
        end
        local.get $2
        i32.load
        local.tee $3
        i32.load8_u
        local.set $0
        local.get $2
        local.get $3
        i32.const 1
        i32.add
        i32.store
        local.get $2
        local.get $2
        i32.load offset=4
        i32.const 1
        i32.sub
        i32.store offset=4
        br $break|1
       end
       local.get $2
       i32.load
       local.tee $3
       i32.load16_u
       local.set $0
       local.get $2
       local.get $3
       i32.const 2
       i32.add
       i32.store
       local.get $2
       local.get $2
       i32.load offset=4
       i32.const 2
       i32.sub
       i32.store offset=4
       br $break|1
      end
      local.get $2
      i32.load
      local.tee $3
      i32.load
      local.set $0
      local.get $2
      local.get $3
      i32.const 4
      i32.add
      i32.store
      local.get $2
      local.get $2
      i32.load offset=4
      i32.const 4
      i32.sub
      i32.store offset=4
     end
     local.get $1
     local.get $2
     local.get $0
     call $~lib/metashrew-as/assembly/utils/utils/parseBytes
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
    else
     local.get $1
     local.get $3
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
    end
    br $while-continue|0
   end
  end
  local.get $1
 )
 (func $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 2
  local.set $1
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const 2147483647
   local.set $2
  end
  local.get $1
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $1
  local.get $3
  i32.lt_s
  select
  local.set $1
  local.get $2
  local.get $3
  local.get $2
  local.get $3
  i32.lt_s
  select
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 2
  i32.const 10
  call $~lib/rt/__newArray
  local.tee $3
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $1
  i32.const 0
  local.set $0
  local.get $2
  i32.const 2
  i32.shl
  local.set $2
  loop $while-continue|0
   local.get $0
   local.get $2
   i32.lt_u
   if
    local.get $0
    local.get $4
    i32.add
    local.get $0
    local.get $1
    i32.add
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
  local.get $3
 )
 (func $assembly/indexer/Indexer/Index.inspectTransaction~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load
  i32.const -1
  i32.eq
 )
 (func $assembly/leb128/readULEB128ToU128 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.set $2
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i64.const 0
  i64.store offset=8
  local.get $2
  i32.load offset=4
  i32.eqz
  if
   i32.const 0
   return
  end
  loop $while-continue|0
   local.get $2
   i32.load
   i32.load8_u
   local.set $5
   local.get $2
   i32.load offset=4
   i32.eqz
   if
    i32.const -1
    return
   end
   local.get $2
   local.get $2
   i32.load
   i32.const 1
   i32.add
   i32.store
   local.get $2
   local.get $2
   i32.load offset=4
   i32.const 1
   i32.sub
   i32.store offset=4
   local.get $6
   i32.const 127
   i32.and
   i64.extend_i32_s
   local.tee $4
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.set $7
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $9
   local.get $5
   i32.const 127
   i32.and
   i64.extend_i32_s
   local.tee $8
   i64.store
   local.get $9
   local.get $8
   i64.const 63
   i64.shr_u
   i64.store offset=8
   local.get $9
   i64.load
   local.tee $10
   local.get $4
   i64.const 63
   i64.and
   local.tee $8
   i64.shl
   local.tee $11
   local.get $7
   i64.const -1
   i64.xor
   i64.and
   local.get $4
   local.get $4
   i64.const 127
   i64.add
   i64.or
   i64.const 64
   i64.and
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.get $10
   i64.const 64
   local.get $8
   i64.sub
   i64.shr_u
   i64.and
   local.get $9
   i64.load offset=8
   local.get $8
   i64.shl
   i64.or
   local.get $7
   i64.and
   i64.or
   local.set $4
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $9
   local.get $7
   local.get $11
   i64.and
   i64.store
   local.get $9
   local.get $4
   i64.store offset=8
   local.get $3
   i64.load
   local.get $9
   i64.load
   i64.or
   local.set $4
   local.get $3
   i64.load offset=8
   local.get $9
   i64.load offset=8
   i64.or
   local.set $7
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $3
   local.get $4
   i64.store
   local.get $3
   local.get $7
   i64.store offset=8
   local.get $5
   i32.const 128
   i32.and
   if
    local.get $6
    i32.const 7
    i32.add
    local.set $6
    br $while-continue|0
   end
  end
  local.get $1
  local.get $3
  i64.load offset=8
  i64.store offset=8
  local.get $1
  local.get $3
  i64.load
  i64.store
  local.get $2
  i32.load
  local.get $0
  i32.load
  i32.sub
 )
 (func $~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 40
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#set" (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  i32.load
  local.get $1
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.const 374761401
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $3
  i32.const 15
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $3
  i32.const 13
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $3
  i32.const 16
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $7
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $3
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2105"
   loop $while-continue|0
    local.get $3
    if
     local.get $3
     i32.load offset=12
     local.tee $4
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $3
      i64.load
      local.get $1
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2105"
     local.get $4
     i32.const -2
     i32.and
     local.set $3
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $3
  end
  local.get $3
  if
   local.get $3
   local.get $2
   i32.store offset=8
  else
   local.get $0
   i32.load offset=12
   local.tee $3
   local.get $0
   i32.load offset=16
   i32.eq
   if
    local.get $0
    i32.load offset=20
    local.get $3
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    local.tee $10
    i32.const 1
    i32.add
    local.tee $3
    i32.const 2
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $9
    local.get $3
    i32.const 3
    i32.shl
    i32.const 3
    i32.div_s
    local.tee $6
    i32.const 4
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $4
    local.get $0
    i32.load offset=8
    local.tee $11
    local.get $0
    i32.load offset=16
    i32.const 4
    i32.shl
    i32.add
    local.set $5
    local.get $4
    local.set $3
    loop $while-continue|00
     local.get $5
     local.get $11
     i32.ne
     if
      local.get $11
      i32.load offset=12
      i32.const 1
      i32.and
      i32.eqz
      if
       local.get $3
       local.get $11
       i64.load
       local.tee $8
       i64.store
       local.get $3
       local.get $11
       i32.load offset=8
       i32.store offset=8
       local.get $3
       local.get $9
       local.get $10
       local.get $8
       i32.wrap_i64
       i32.const -1028477379
       i32.mul
       i32.const 374761401
       i32.add
       i32.const 17
       i32.rotl
       i32.const 668265263
       i32.mul
       local.get $8
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       i32.const -1028477379
       i32.mul
       i32.add
       i32.const 17
       i32.rotl
       i32.const 668265263
       i32.mul
       local.tee $12
       i32.const 15
       i32.shr_u
       local.get $12
       i32.xor
       i32.const -2048144777
       i32.mul
       local.tee $12
       i32.const 13
       i32.shr_u
       local.get $12
       i32.xor
       i32.const -1028477379
       i32.mul
       local.tee $12
       i32.const 16
       i32.shr_u
       local.get $12
       i32.xor
       i32.and
       i32.const 2
       i32.shl
       i32.add
       local.tee $12
       i32.load
       i32.store offset=12
       local.get $12
       local.get $3
       i32.store
       local.get $3
       i32.const 16
       i32.add
       local.set $3
      end
      local.get $11
      i32.const 16
      i32.add
      local.set $11
      br $while-continue|00
     end
    end
    local.get $0
    local.get $9
    i32.store
    local.get $0
    local.get $10
    i32.store offset=4
    local.get $0
    local.get $4
    i32.store offset=8
    local.get $0
    local.get $6
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=20
    i32.store offset=16
   end
   local.get $0
   i32.load offset=8
   local.set $3
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $4
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $3
   local.get $4
   i32.const 4
   i32.shl
   i32.add
   local.tee $3
   local.get $1
   i64.store
   local.get $3
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $3
   local.get $0
   i32.load
   local.get $7
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   i32.store offset=12
   local.get $0
   local.get $3
   i32.store
  end
 )
 (func $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get" (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  local.get $1
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.const 374761401
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  i32.const 15
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  i32.const 13
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  i32.const 16
  i32.shr_u
  local.get $0
  i32.xor
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2106"
   loop $while-continue|0
    local.get $0
    if
     local.get $0
     i32.load offset=12
     local.tee $2
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $0
      i64.load
      local.get $1
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2106"
     local.get $2
     i32.const -2
     i32.and
     local.set $0
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $0
  end
  local.get $0
  i32.eqz
  if
   i32.const 5520
   i32.const 5584
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=8
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage.parse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.set $5
  i32.const 24
  i32.const 41
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $1
  i32.const 3
  i32.store offset=4
  local.get $1
  i32.const 64
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  i32.const 16
  i32.const 43
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.const 32
  memory.fill
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
  i32.const 32
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  loop $while-continue|0
   local.get $5
   i32.load offset=4
   if
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $0
    i64.const 0
    i64.store
    local.get $0
    i64.const 0
    i64.store offset=8
    local.get $5
    local.get $0
    call $assembly/leb128/readULEB128ToU128
    local.tee $4
    i32.const -1
    i32.eq
    if
     i32.const 0
     return
    end
    local.get $5
    local.get $4
    local.get $5
    i32.load
    i32.add
    i32.store
    local.get $5
    local.get $5
    i32.load offset=4
    local.get $4
    i32.sub
    i32.store offset=4
    local.get $0
    i64.load
    local.tee $3
    i64.eqz
    if
     loop $while-continue|1
      local.get $5
      i32.load offset=4
      if
       i32.const 16
       i32.const 42
       call $~lib/rt/stub/__new
       local.tee $6
       i64.const 0
       i64.store align=1
       local.get $6
       i64.const 0
       i64.store offset=8 align=1
       i32.const 0
       local.set $0
       loop $for-loop|2
        local.get $0
        i32.const 4
        i32.lt_s
        if
         i32.const 16
         i32.const 15
         call $~lib/rt/stub/__new
         local.tee $7
         i64.const 0
         i64.store
         local.get $7
         i64.const 0
         i64.store offset=8
         local.get $5
         local.get $7
         call $assembly/leb128/readULEB128ToU128
         local.tee $4
         i32.const -1
         i32.eq
         if
          i32.const 0
          return
         end
         local.get $5
         local.get $4
         local.get $5
         i32.load
         i32.add
         i32.store
         local.get $5
         local.get $5
         i32.load offset=4
         local.get $4
         i32.sub
         i32.store offset=4
         local.get $0
         local.get $6
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 2
         i32.shr_u
         i32.ge_u
         if
          i32.const 3344
          i32.const 3408
          i32.const 93
          i32.const 41
          call $~lib/builtins/abort
          unreachable
         end
         local.get $6
         local.get $0
         i32.const 2
         i32.shl
         i32.add
         local.get $7
         i32.store
         local.get $0
         i32.const 1
         i32.add
         local.set $0
         br $for-loop|2
        end
       end
       local.get $2
       local.get $6
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
       drop
       br $while-continue|1
      end
     end
    else
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $4
     i64.const 0
     i64.store
     local.get $4
     i64.const 0
     i64.store offset=8
     local.get $5
     local.get $4
     call $assembly/leb128/readULEB128ToU128
     local.tee $0
     i32.const -1
     i32.eq
     if
      i32.const 0
      return
     end
     local.get $5
     local.get $0
     local.get $5
     i32.load
     i32.add
     i32.store
     local.get $5
     local.get $5
     i32.load offset=4
     local.get $0
     i32.sub
     i32.store offset=4
     local.get $1
     i32.load
     local.get $1
     i32.load offset=4
     local.get $3
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.const 374761401
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.get $3
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $0
     local.get $0
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $0
     local.get $0
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $0
     local.get $0
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $0
     block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2115"
      loop $while-continue|01
       local.get $0
       if
        local.get $0
        i32.load offset=12
        local.tee $6
        i32.const 1
        i32.and
        if (result i32)
         i32.const 0
        else
         local.get $3
         local.get $0
         i64.load
         i64.eq
        end
        br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2115"
        local.get $6
        i32.const -2
        i32.and
        local.set $0
        br $while-continue|01
       end
      end
      i32.const 0
      local.set $0
     end
     local.get $0
     if
      local.get $1
      local.get $3
      call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
      local.set $0
     else
      local.get $1
      local.get $3
      call $~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>#constructor
      local.tee $0
      call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#set"
     end
     local.get $0
     local.get $4
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
    end
    br $while-continue|0
   end
  end
  i32.const 12
  i32.const 39
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $2
  i32.store offset=4
  i32.const 24
  i32.const 46
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $1
  i32.const 3
  i32.store offset=4
  local.get $1
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
 )
 (func $~lib/metashrew-as/assembly/utils/utils/parsePushOp (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  i32.eqz
  if
   local.get $0
   return
  end
  local.get $0
  i32.load
  local.tee $2
  i32.load8_u
  local.set $1
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  i32.store
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.sub
  i32.store offset=4
  block $folding-inner0
   local.get $1
   i32.const 76
   i32.eq
   if
    local.get $0
    i32.load
    i32.load8_u
    local.set $1
    local.get $0
    local.get $0
    i32.load
    i32.const 1
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.sub
    i32.store offset=4
    br $folding-inner0
   end
   local.get $1
   i32.const 77
   i32.eq
   if
    local.get $0
    i32.load
    local.tee $2
    i32.load16_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 2
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 2
    i32.sub
    i32.store offset=4
    br $folding-inner0
   end
   local.get $1
   i32.const 78
   i32.eq
   if
    local.get $0
    i32.load
    local.tee $2
    i32.load
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.add
    i32.store
    local.get $0
    local.get $0
    i32.load offset=4
    i32.const 4
    i32.sub
    i32.store offset=4
    br $folding-inner0
   end
   local.get $1
   i32.const 79
   i32.eq
   if
    i32.const 0
    i32.const 0
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    return
   end
   local.get $1
   i32.const 81
   i32.eq
   if
    i32.const 0
    i32.const 0
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    return
   end
   local.get $1
   i32.const 96
   i32.le_u
   local.get $1
   i32.const 82
   i32.ge_u
   i32.and
   if
    i32.const 0
    local.get $1
    i32.const 80
    i32.sub
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    return
   end
   local.get $1
   i32.const 75
   i32.le_u
   i32.const 0
   local.get $1
   select
   br_if $folding-inner0
   local.get $1
   i32.eqz
   if
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    local.tee $0
    i32.const 0
    i32.store offset=4
    local.get $0
    return
   end
   local.get $0
   return
  end
  local.get $0
  local.get $1
  call $~lib/metashrew-as/assembly/utils/utils/parseBytes
 )
 (func $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 16
  i32.const 50
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 2608
   i32.const 3520
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  local.get $2
  memory.fill
  local.get $1
  local.get $3
  i32.store
  local.get $1
  local.get $3
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=12
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/utils/utils/decodeTag (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  i32.eqz
  if
   local.get $0
   i32.load offset=4
   return
  end
  local.get $0
  i32.load offset=4
  i32.eqz
  if
   i32.const 0
   return
  end
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.gt_u
  if
   i32.const 0
   return
  end
  local.get $1
  local.get $2
  local.get $0
  i32.load offset=4
  memory.copy
  local.get $1
  i32.load
 )
 (func $~lib/metashrew-as/assembly/blockdata/inscription/Field#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 8
  i32.const 48
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/utils/utils/_fromPushBox (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load
  i32.eqz
  if
   local.get $0
   i32.load offset=4
   if
    i32.const 1
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $1
    local.get $0
    i32.load offset=4
    i32.store8
    local.get $1
    return
   else
    i32.const 4
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $0
    i32.const -1
    i32.store
    local.get $0
    return
   end
   unreachable
  end
  local.get $0
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  memory.copy
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/utils/utils/concat~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
 )
 (func $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 2
  i32.const 10
  call $~lib/rt/__newArray
  local.tee $4
  i32.load offset=4
  local.set $5
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $6
   local.get $3
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $2
    i32.const 2
    i32.shl
    local.tee $6
    local.get $0
    i32.load offset=4
    i32.add
    i32.load
    local.set $7
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $6
    i32.add
    local.get $7
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect (type $3)
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $4
 )
 (func $~lib/metashrew-as/assembly/blockdata/inscription/Inscription#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 9
  i32.const 47
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store8 offset=8
  local.get $2
  i32.const 0
  i32.store
  i32.const 16
  i32.const 49
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.const 32
  memory.fill
  local.get $1
  local.get $3
  i32.store
  local.get $1
  local.get $3
  i32.store offset=4
  local.get $1
  i32.const 32
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store8 offset=8
  local.get $2
  block $__inlined_func$~lib/metashrew-as/assembly/blockdata/inscription/parseEnvelope$55 (result i32)
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.tee $4
   i32.load
   local.set $0
   local.get $4
   i32.load offset=4
   local.set $1
   loop $while-continue|0
    local.get $0
    local.get $4
    i32.load
    local.get $4
    i32.load offset=4
    i32.add
    i32.const 1
    i32.sub
    i32.lt_u
    if
     block $while-break|0
      local.get $0
      i32.load8_u
      if (result i32)
       i32.const 0
      else
       local.get $0
       i32.load8_u offset=1
       i32.const 99
       i32.eq
      end
      if
       local.get $0
       i32.const 2
       i32.add
       local.set $0
       local.get $1
       i32.const 2
       i32.sub
       local.set $1
       br $while-break|0
      end
      local.get $0
      local.get $1
      call $~lib/metashrew-as/assembly/utils/box/Box#constructor
      local.set $5
      local.get $0
      i32.load8_u
      local.tee $3
      i32.const 79
      i32.le_u
      if (result i32)
       i32.const 1
      else
       local.get $3
       i32.const 96
       i32.le_u
       local.get $3
       i32.const 80
       i32.gt_u
       i32.and
      end
      if (result i32)
       local.get $5
       call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
       drop
       local.get $5
       i32.load offset=4
       local.set $1
       local.get $5
       i32.load
      else
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       local.get $0
       i32.const 1
       i32.add
      end
      local.set $0
      br $while-continue|0
     end
    end
   end
   local.get $0
   local.get $1
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.set $1
   loop $while-continue|1
    local.get $1
    i32.load offset=4
    if
     local.get $1
     i32.load
     local.tee $3
     i32.load8_u
     i32.const 104
     i32.eq
     if
      local.get $0
      local.get $3
      local.get $0
      i32.sub
      call $~lib/metashrew-as/assembly/utils/box/Box#constructor
      br $__inlined_func$~lib/metashrew-as/assembly/blockdata/inscription/parseEnvelope$55
     end
     local.get $1
     call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
     drop
     br $while-continue|1
    end
   end
   i32.const 0
  end
  local.tee $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.store
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
  i32.load
  i32.load
  i32.const 16777215
  i32.and
  i32.const 6582895
  i32.ne
  if
   i32.const 0
   i32.const 7664
   i32.const 74
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor
  local.set $3
  local.get $0
  call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
  local.set $1
  loop $for-loop|0
   local.get $0
   i32.load offset=4
   if
    block $for-break0
     local.get $1
     call $~lib/metashrew-as/assembly/utils/utils/decodeTag
     if (result i32)
      local.get $1
      call $~lib/metashrew-as/assembly/utils/utils/decodeTag
      i32.const 11
      i32.le_u
     else
      i32.const 0
     end
     if
      local.get $1
      call $~lib/metashrew-as/assembly/utils/utils/decodeTag
      local.set $1
      local.get $0
      call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
      drop
      local.get $2
      i32.load offset=4
      local.get $1
      local.get $0
      call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
      call $~lib/metashrew-as/assembly/utils/utils/_fromPushBox
      call $~lib/metashrew-as/assembly/blockdata/inscription/Field#constructor
      call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
      drop
     else
      local.get $1
      call $~lib/metashrew-as/assembly/utils/utils/decodeTag
      i32.eqz
      br_if $for-break0
     end
     local.get $0
     call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
     local.set $1
     br $for-loop|0
    end
   end
  end
  local.get $0
  if
   loop $while-continue|10
    local.get $0
    i32.load offset=4
    if
     local.get $3
     local.get $0
     call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
     call $~lib/metashrew-as/assembly/utils/utils/_fromPushBox
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
     br $while-continue|10
    end
   end
  end
  local.get $3
  i32.const 7792
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
  call $~lib/metashrew-as/assembly/utils/box/Box.concat
  local.set $0
  local.get $2
  i32.load offset=4
  i32.const 0
  local.get $0
  call $~lib/metashrew-as/assembly/blockdata/inscription/Field#constructor
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
  drop
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/utils/utils/reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   local.tee $3
   i32.lt_s
   if
    local.get $1
    local.get $2
    i32.add
    local.get $0
    local.get $3
    i32.add
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.load8_u
    i32.store8
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.get $1
  i32.store
  i32.const 2
  i32.const 2
  i32.const 50
  call $~lib/rt/__newArray
  local.tee $1
  i32.load offset=4
  drop
  local.get $1
  i32.const 0
  local.get $0
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $1
  i32.const 1
  local.get $2
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $1
  i32.const 7792
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
  call $~lib/metashrew-as/assembly/utils/box/Box.concat
  local.tee $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.set $0
  i32.const 12
  i32.const 52
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.load offset=4
  i32.const 36
  i32.eq
  if
   local.get $1
   local.get $0
   i32.store
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.tee $2
   local.get $2
   i32.load offset=4
   i32.const 4
   i32.sub
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $0
   i32.load
   i32.const 32
   i32.add
   local.get $0
   i32.load offset=4
   i32.const 32
   i32.sub
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.tee $0
   i32.load
   i32.load
   local.set $2
   local.get $0
   local.get $0
   i32.load
   i32.const 4
   i32.add
   i32.store
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 4
   i32.sub
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
  end
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  local.tee $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.eqz
  if
   i32.const 0
   return
  end
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  memory.copy
  local.get $1
  i32.load
 )
 (func $assembly/indexer/Indexer/Index.findCommitment (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  loop $for-loop|0
   local.get $7
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.load offset=12
   i32.lt_s
   if
    i32.const 0
    local.set $3
    block $__inlined_func$~lib/metashrew-as/assembly/blockdata/transaction/Input#inscription$2157
     local.get $2
     local.get $7
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     i32.load offset=20
     local.tee $6
     i32.eqz
     br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/transaction/Input#inscription$2157
     block $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness#tapscript$2521
      local.get $6
      i32.load offset=4
      local.tee $5
      i32.load offset=12
      local.tee $4
      i32.const 0
      i32.le_s
      br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness#tapscript$2521
      local.get $4
      i32.const 2
      i32.ge_s
      if (result i32)
       local.get $4
       i32.const 1
       i32.sub
       local.tee $2
       local.get $4
       local.get $5
       local.get $2
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       i32.load8_u offset=6
       select
       local.tee $4
       i32.const 1
       i32.le_s
       br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness#tapscript$2521
       local.get $6
       i32.load offset=4
       local.get $4
       i32.const 2
       i32.sub
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       i32.load8_u offset=5
       i32.eqz
       br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness#tapscript$2521
       local.get $6
       i32.load offset=4
       local.get $4
       i32.const 1
       i32.sub
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       i32.load
       local.tee $2
       i32.load offset=4
       i32.const 33
       i32.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $2
        i32.load offset=4
        i32.const 33
        i32.sub
        i32.const 31
        i32.and
       end
       br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness#tapscript$2521
       local.get $6
       i32.load offset=4
       local.get $4
       i32.const 2
       i32.sub
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       i32.load
       local.tee $2
       i32.load
       local.get $2
       i32.load offset=4
       call $~lib/metashrew-as/assembly/utils/box/Box#constructor
      else
       i32.const 0
      end
      local.set $3
     end
     local.get $3
     local.set $2
     i32.const 0
     local.set $3
     local.get $2
     if (result i32)
      block $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness.isInscribed$169 (result i32)
       local.get $2
       i32.load
       local.get $2
       i32.load offset=4
       call $~lib/metashrew-as/assembly/utils/box/Box#constructor
       local.tee $4
       i32.load
       local.tee $6
       local.get $4
       i32.load offset=4
       local.tee $5
       i32.add
       local.set $4
       loop $while-continue|0
        local.get $6
        local.get $4
        i32.const 1
        i32.sub
        i32.lt_u
        if
         block $while-break|0
          local.get $6
          i32.load8_u
          if (result i32)
           i32.const 0
          else
           local.get $6
           i32.load8_u offset=1
           i32.const 99
           i32.eq
          end
          if
           local.get $6
           i32.const 2
           i32.add
           local.set $6
           local.get $5
           i32.const 2
           i32.sub
           local.set $5
           br $while-break|0
          end
          local.get $6
          i32.const 1
          i32.add
          local.set $6
          local.get $5
          i32.const 1
          i32.sub
          local.set $5
          br $while-continue|0
         end
        end
       end
       loop $while-continue|1
        local.get $4
        local.get $6
        i32.gt_u
        if
         local.get $4
         i32.load8_u
         i32.const 104
         i32.ne
         if
          local.get $4
          i32.const 1
          i32.sub
          local.set $4
          local.get $5
          i32.const 1
          i32.sub
          local.set $5
          br $while-continue|1
         end
        end
       end
       i32.const 0
       local.get $6
       local.get $5
       call $~lib/metashrew-as/assembly/utils/box/Box#constructor
       local.tee $5
       i32.load offset=4
       if (result i32)
        local.get $5
        i32.load
        i32.load8_u
        local.tee $4
        i32.const 79
        i32.le_u
        if (result i32)
         i32.const 1
        else
         local.get $4
         i32.const 96
         i32.le_u
         local.get $4
         i32.const 80
         i32.gt_u
         i32.and
        end
       else
        i32.const 0
       end
       i32.eqz
       br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/witness/Witness.isInscribed$169
       drop
       local.get $5
       call $~lib/metashrew-as/assembly/utils/utils/parsePushOp
       i32.load
       i32.load
       i32.const 16777215
       i32.and
       i32.const 6582895
       i32.eq
      end
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$~lib/metashrew-as/assembly/blockdata/transaction/Input#inscription$2157
     local.get $2
     call $~lib/metashrew-as/assembly/blockdata/inscription/Inscription#constructor
     local.set $3
    end
    block $for-continue|0
     local.get $3
     i32.eqz
     br_if $for-continue|0
     block $__inlined_func$~lib/metashrew-as/assembly/blockdata/inscription/Inscription#field$2522 (result i32)
      i32.const 0
      local.set $4
      loop $for-loop|00
       local.get $4
       local.get $3
       i32.load offset=4
       local.tee $2
       i32.load offset=12
       i32.lt_s
       if
        local.get $2
        local.get $4
        call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
        i32.load
        i32.eqz
        if
         local.get $3
         i32.load offset=4
         local.get $4
         call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
         i32.load offset=4
         br $__inlined_func$~lib/metashrew-as/assembly/blockdata/inscription/Inscription#field$2522
        end
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|00
       end
      end
      i32.const 0
     end
     i32.eqz
     br_if $for-continue|0
     local.get $0
     i32.load offset=12
     local.get $7
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.tee $4
     i32.load offset=4
     i32.load
     i32.const 32
     call $~lib/metashrew-as/assembly/utils/box/Box#constructor
     local.tee $3
     i32.load offset=4
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $2
     local.get $3
     i32.load
     local.get $3
     i32.load offset=4
     memory.copy
     local.get $2
     call $~lib/metashrew-as/assembly/utils/utils/reverse
     local.get $4
     i32.load offset=8
     call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
     i32.load
     local.tee $3
     i32.load offset=4
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $2
     local.get $3
     i32.load
     local.get $3
     i32.load offset=4
     memory.copy
     local.get $1
     global.get $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT
     local.get $2
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
     i32.sub
     i32.const 6
     i32.ge_u
     if
      i32.const 1
      return
     end
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  i32.const 0
 )
 (func $assembly/tests/testCommitment
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  call $~lib/metashrew-as/assembly/indexer/index/__host_len
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  call $~lib/metashrew-as/assembly/indexer/index/__load_input
  local.get $1
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.tee $2
  i32.load
  local.tee $3
  i32.load
  local.set $1
  local.get $2
  local.get $3
  i32.const 4
  i32.add
  i32.store
  local.get $2
  local.get $2
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $2
  call $~lib/metashrew-as/assembly/blockdata/block/Block#constructor
  local.set $2
  i32.const 7568
  call $assembly/utils/nameToArrayBuffer
  local.set $4
  local.get $2
  i32.load offset=8
  i32.const 298
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
  local.tee $2
  call $assembly/indexer/RunesTransaction/RunesTransaction#processRunestones
  local.get $2
  i32.load offset=16
  local.get $2
  i32.load offset=36
  i32.load
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/yabsp/scriptParse
  local.set $3
  i32.const 1
  global.set $~argumentsLength
  local.get $3
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs
  local.tee $3
  i32.load offset=12
  local.set $5
  block $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2159
   loop $for-loop|0
    local.get $0
    local.get $5
    local.get $3
    i32.load offset=12
    local.tee $6
    local.get $5
    local.get $6
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $6
     i32.const 3
     global.set $~argumentsLength
     local.get $6
     local.get $0
     local.get $3
     i32.const 7632
     i32.load
     call_indirect (type $3)
     br_if $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2159
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   i32.const -1
   local.set $0
  end
  block $__inlined_func$assembly/indexer/Indexer/Index.inspectTransaction$61
   local.get $0
   i32.const -1
   i32.ne
   br_if $__inlined_func$assembly/indexer/Indexer/Index.inspectTransaction$61
   local.get $3
   call $~lib/metashrew-as/assembly/utils/box/Box.concat
   call $assembly/indexer/RunestoneMessage/RunestoneMessage.parse
   i32.eqz
   br_if $__inlined_func$assembly/indexer/Indexer/Index.inspectTransaction$61
   local.get $4
   local.get $4
   i32.const 20
   i32.sub
   i32.load offset=16
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.set $0
   loop $while-continue|0
    local.get $0
    i32.load offset=4
    local.tee $3
    if
     local.get $0
     i32.load
     local.get $3
     i32.add
     i32.const 1
     i32.sub
     i32.load8_u
     i32.eqz
     if
      local.get $0
      local.get $3
      i32.const 1
      i32.sub
      i32.store offset=4
      br $while-continue|0
     end
    end
   end
   local.get $0
   i32.load offset=4
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   memory.copy
   local.get $2
   local.get $1
   call $assembly/indexer/Indexer/Index.findCommitment
   if
    i32.const 2
    global.set $~argumentsLength
    i32.const 7824
    i32.const 1
    call $~lib/string/String.UTF8.encode@varargs
    call $~lib/metashrew-as/assembly/utils/logging/__log
   else
    i32.const 2
    global.set $~argumentsLength
    i32.const 7872
    i32.const 1
    call $~lib/string/String.UTF8.encode@varargs
    call $~lib/metashrew-as/assembly/utils/logging/__log
   end
  end
 )
 (func $~lib/as-bignum/assembly/globals/__udivmod128core (param $0 i64) (param $1 i64) (param $2 i64) (param $3 i64) (result i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  (local $16 i32)
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  local.get $0
  i64.store
  local.get $4
  local.get $1
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $8
  local.get $2
  i64.store
  local.get $8
  local.get $3
  i64.store offset=8
  local.get $3
  local.get $3
  local.get $3
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.tee $3
  i64.const -1
  i64.xor
  i64.and
  local.get $2
  local.get $3
  i64.and
  i64.or
  i64.clz
  i32.wrap_i64
  local.get $3
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  local.tee $9
  local.get $1
  local.get $1
  local.get $1
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.tee $1
  i64.const -1
  i64.xor
  i64.and
  local.get $0
  local.get $1
  i64.and
  i64.or
  i64.clz
  i32.wrap_i64
  local.get $1
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  local.tee $11
  i32.sub
  i32.const 127
  i32.and
  i64.extend_i32_s
  local.tee $3
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.tee $0
  i64.const -1
  i64.xor
  local.get $8
  i64.load
  local.tee $1
  local.get $3
  i64.const 63
  i64.and
  local.tee $12
  i64.shl
  local.tee $13
  i64.and
  local.get $3
  i64.const 127
  i64.add
  local.get $3
  i64.or
  i64.const 64
  i64.and
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.tee $2
  local.get $1
  i64.const 64
  local.get $12
  i64.sub
  i64.shr_u
  i64.and
  local.get $8
  i64.load offset=8
  local.get $12
  i64.shl
  i64.or
  local.get $0
  i64.and
  i64.or
  local.set $1
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $5
  local.get $0
  local.get $13
  i64.and
  i64.store
  local.get $5
  local.get $1
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $6
  i64.const 0
  i64.store
  local.get $6
  i64.const 0
  i64.store offset=8
  local.get $4
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $4
  i64.load
  local.set $0
  local.get $4
  i64.load offset=8
  local.set $1
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $7
  local.get $0
  i64.store
  local.get $7
  local.get $1
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  i64.const 1
  i64.store
  local.get $4
  i64.const 0
  i64.store offset=8
  i32.const 128
  local.get $9
  i32.sub
  i32.const 127
  i32.and
  i64.extend_i32_s
  local.tee $13
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.tee $14
  i64.const -1
  i64.xor
  local.get $4
  i64.load
  local.tee $0
  local.get $13
  i64.const 63
  i64.and
  local.tee $1
  i64.shl
  local.tee $15
  i64.and
  local.get $13
  i64.const 127
  i64.add
  local.get $13
  i64.or
  i64.const 64
  i64.and
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.get $0
  i64.const 64
  local.get $1
  i64.sub
  i64.shr_u
  i64.and
  local.get $4
  i64.load offset=8
  local.get $1
  i64.shl
  i64.or
  local.get $14
  i64.and
  i64.or
  local.set $0
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  local.get $14
  local.get $15
  i64.and
  i64.store
  local.get $4
  local.get $0
  i64.store offset=8
  local.get $4
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $4
  local.get $4
  i64.load offset=8
  local.get $4
  i64.load
  local.tee $0
  i64.const 1
  i64.sub
  local.tee $1
  local.get $0
  i64.gt_u
  i64.extend_i32_u
  i64.sub
  i64.store offset=8
  local.get $4
  local.get $1
  i64.store
  local.get $4
  i64.load
  local.tee $0
  local.get $12
  i64.shl
  local.tee $1
  local.get $3
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.tee $3
  i64.const -1
  i64.xor
  i64.and
  local.get $2
  local.get $0
  i64.const 64
  local.get $12
  i64.sub
  i64.shr_u
  i64.and
  local.get $4
  i64.load offset=8
  local.get $12
  i64.shl
  i64.or
  local.get $3
  i64.and
  i64.or
  local.set $0
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  local.get $1
  local.get $3
  i64.and
  i64.store
  local.get $4
  local.get $0
  i64.store offset=8
  loop $while-continue|0
   local.get $7
   i64.load offset=8
   local.tee $0
   local.get $8
   i64.load offset=8
   local.tee $1
   i64.eq
   if (result i32)
    local.get $7
    i64.load
    local.get $8
    i64.load
    i64.lt_u
   else
    local.get $0
    local.get $1
    i64.lt_u
   end
   i32.eqz
   if
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    local.get $6
    i64.load offset=8
    i64.const 1
    i64.shl
    local.get $6
    i64.load
    local.tee $0
    i64.const 63
    i64.shr_u
    i64.or
    local.set $1
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $6
    local.get $0
    i64.const 1
    i64.shl
    i64.store
    local.get $6
    local.get $1
    i64.store offset=8
    local.get $7
    i64.load
    local.get $4
    i64.load
    i64.and
    local.set $0
    local.get $7
    i64.load offset=8
    local.get $4
    i64.load offset=8
    i64.and
    local.set $1
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $16
    local.get $0
    i64.store
    local.get $16
    local.get $1
    i64.store offset=8
    local.get $16
    i64.load offset=8
    local.tee $0
    local.get $5
    i64.load offset=8
    local.tee $1
    i64.eq
    if (result i32)
     local.get $16
     i64.load
     local.get $5
     i64.load
     i64.lt_u
    else
     local.get $0
     local.get $1
     i64.lt_u
    end
    i32.eqz
    if
     local.get $6
     i32.const 8
     i32.sub
     i32.load
     drop
     local.get $6
     local.get $6
     i64.load offset=8
     local.get $6
     i64.load
     local.tee $0
     i64.const 1
     i64.add
     local.tee $1
     local.get $0
     i64.lt_u
     i64.extend_i32_u
     i64.add
     i64.store offset=8
     local.get $6
     local.get $1
     i64.store
     local.get $7
     i64.load offset=8
     local.get $5
     i64.load offset=8
     i64.sub
     local.get $7
     i64.load
     local.tee $0
     local.get $5
     i64.load
     i64.sub
     local.tee $1
     local.get $0
     i64.gt_u
     i64.extend_i32_u
     i64.sub
     local.set $0
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $7
     local.get $1
     i64.store
     local.get $7
     local.get $0
     i64.store offset=8
    end
    local.get $4
    i64.load offset=8
    local.tee $0
    i64.const 63
    i64.shl
    local.get $4
    i64.load
    i64.const 1
    i64.shr_u
    i64.or
    local.set $1
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $16
    local.get $1
    i64.store
    local.get $16
    local.get $0
    i64.const 1
    i64.shr_u
    i64.store offset=8
    local.get $4
    i64.load
    local.get $16
    i64.load
    i64.or
    local.set $0
    local.get $4
    i64.load offset=8
    local.get $16
    i64.load offset=8
    i64.or
    local.set $1
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $4
    local.get $0
    i64.store
    local.get $4
    local.get $1
    i64.store offset=8
    local.get $5
    i64.load offset=8
    local.tee $0
    i64.const 63
    i64.shl
    local.get $5
    i64.load
    i64.const 1
    i64.shr_u
    i64.or
    local.set $1
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $5
    local.get $1
    i64.store
    local.get $5
    local.get $0
    i64.const 1
    i64.shr_u
    i64.store offset=8
    br $while-continue|0
   end
  end
  local.get $9
  local.get $11
  i32.sub
  local.get $10
  i32.sub
  i32.const 1
  i32.add
  i32.const 127
  i32.and
  i64.extend_i32_s
  local.tee $0
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.tee $1
  i64.const -1
  i64.xor
  local.get $6
  i64.load
  local.tee $2
  local.get $0
  i64.const 63
  i64.and
  local.tee $3
  i64.shl
  local.tee $12
  i64.and
  local.get $0
  i64.const 127
  i64.add
  local.get $0
  i64.or
  i64.const 64
  i64.and
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.get $2
  i64.const 64
  local.get $3
  i64.sub
  i64.shr_u
  i64.and
  local.get $6
  i64.load offset=8
  local.get $3
  i64.shl
  i64.or
  local.get $1
  i64.and
  i64.or
  local.set $0
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  local.get $1
  local.get $12
  i64.and
  i64.store
  local.get $4
  local.get $0
  i64.store offset=8
  local.get $4
  i64.load offset=8
  global.set $~lib/as-bignum/assembly/globals/__divmod_quot_hi
  local.get $7
  i64.load
  global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
  local.get $7
  i64.load offset=8
  global.set $~lib/as-bignum/assembly/globals/__divmod_rem_hi
  local.get $4
  i64.load
 )
 (func $~lib/as-bignum/assembly/globals/__udivmod128 (param $0 i64) (param $1 i64) (param $2 i64) (param $3 i64) (result i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  local.get $3
  local.get $3
  local.get $3
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.tee $6
  i64.const -1
  i64.xor
  i64.and
  local.get $2
  local.get $6
  i64.and
  i64.or
  i64.clz
  i32.wrap_i64
  local.get $6
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  local.tee $4
  i32.const 128
  i32.eq
  if
   i32.const 7936
   i32.const 8000
   i32.const 253
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $2
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.tee $6
  local.get $3
  i64.and
  local.get $2
  local.get $6
  i64.const -1
  i64.xor
  i64.and
  i64.or
  i64.ctz
  i32.wrap_i64
  local.get $6
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  local.set $5
  local.get $0
  local.get $1
  i64.or
  i64.eqz
  if
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_quot_hi
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_hi
   i64.const 0
   return
  end
  local.get $4
  i32.const 127
  i32.eq
  if
   local.get $1
   global.set $~lib/as-bignum/assembly/globals/__divmod_quot_hi
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_hi
   local.get $0
   return
  end
  local.get $1
  local.get $3
  i64.eq
  local.get $0
  local.get $2
  i64.eq
  i32.and
  if
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_quot_hi
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_hi
   i64.const 1
   return
  end
  local.get $1
  local.get $3
  i64.or
  i64.eqz
  if
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_quot_hi
   i64.const 0
   global.set $~lib/as-bignum/assembly/globals/__divmod_rem_hi
   local.get $2
   i64.const 1
   i64.sub
   local.tee $1
   local.get $2
   i64.and
   i64.eqz
   if
    local.get $0
    local.get $1
    i64.and
    global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
    local.get $0
    local.get $5
    i64.extend_i32_s
    i64.shr_u
    return
   else
    local.get $0
    local.get $0
    local.get $2
    i64.div_u
    local.tee $0
    local.get $2
    i64.mul
    i64.sub
    global.set $~lib/as-bignum/assembly/globals/__divmod_rem_lo
    local.get $0
    return
   end
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/as-bignum/assembly/globals/__udivmod128core
 )
 (func $~lib/string/String.fromCharCode@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  i32.const 2
  local.get $1
  i32.const 0
  i32.gt_s
  local.tee $3
  i32.shl
  i32.const 2
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $0
  i32.store16
  local.get $3
  if
   local.get $2
   local.get $1
   i32.store16 offset=2
  end
  local.get $2
 )
 (func $assembly/utils/fieldToName (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $2
  i64.const 1
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $0
  i64.load
  local.tee $1
  local.get $2
  i64.load
  i64.add
  local.set $3
  local.get $1
  local.get $3
  i64.gt_u
  i64.extend_i32_u
  local.get $0
  i64.load offset=8
  local.get $2
  i64.load offset=8
  i64.add
  i64.add
  local.set $1
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $3
  i64.store
  local.get $0
  local.get $1
  i64.store offset=8
  i32.const 7408
  local.set $2
  loop $while-continue|0
   local.get $0
   i64.load
   local.tee $1
   local.get $0
   i64.load offset=8
   local.tee $3
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $1
    local.get $3
    global.get $assembly/indexer/constants/index/TWENTY_SIX
    local.tee $4
    i64.load
    local.get $4
    i64.load offset=8
    call $~lib/as-bignum/assembly/globals/__udivmod128
    drop
    global.get $~lib/as-bignum/assembly/globals/__divmod_rem_lo
    local.set $1
    global.get $~lib/as-bignum/assembly/globals/__divmod_rem_hi
    local.set $3
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $4
    local.get $1
    i64.store
    local.get $4
    local.get $3
    i64.store offset=8
    local.get $4
    i64.load
    i32.wrap_i64
    local.set $4
    i32.const 1
    global.set $~argumentsLength
    local.get $4
    i32.const -64
    i32.sub
    call $~lib/string/String.fromCharCode@varargs
    local.get $2
    call $~lib/string/String.__concat
    local.set $2
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    drop
    local.get $0
    call $~lib/as-bignum/assembly/integer/u128/u128#postDec
    local.tee $0
    i64.load
    local.get $0
    i64.load offset=8
    global.get $assembly/indexer/constants/index/TWENTY_SIX
    local.tee $0
    i64.load
    local.get $0
    i64.load offset=8
    call $~lib/as-bignum/assembly/globals/__udivmod128
    local.set $1
    global.get $~lib/as-bignum/assembly/globals/__divmod_quot_hi
    local.set $3
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $0
    local.get $1
    i64.store
    local.get $0
    local.get $3
    i64.store offset=8
    br $while-continue|0
   end
  end
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $2of2
   block $1of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $1of2 $1of2 $2of2 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.set $2
  local.get $1
  i32.const 0
  i32.lt_s
  if
   local.get $1
   i32.const -1
   i32.eq
   if (result i32)
    local.get $2
   else
    i32.const 2608
    i32.const 8096
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.set $1
  else
   local.get $1
   local.get $2
   i32.gt_s
   if
    i32.const 2608
    i32.const 8096
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 12
  i32.const 20
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
 )
 (func $assembly/utils/fromArrayBuffer (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.eqz
  if
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i64.const 0
   i64.store offset=8
   local.get $0
   return
  end
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $3
  i32.load offset=8
  local.tee $0
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
  else
   i32.const 1
  end
  if
   i32.const 0
   i32.const 8160
   i32.const 132
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.load offset=4
  local.tee $0
  i64.load
  local.set $1
  local.get $0
  i64.load offset=8
  local.set $2
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $1
  i64.store
  local.get $0
  local.get $2
  i64.store offset=8
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 3
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 2608
   i32.const 2656
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  local.get $1
  memory.fill
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
 )
 (func $~lib/as-bignum/assembly/utils/processU64 (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=8
  i32.const 1
  i32.sub
  local.set $3
  i32.const 63
  local.set $5
  loop $for-loop|0
   local.get $5
   i32.const -1
   i32.ne
   if
    i32.const 0
    local.set $4
    loop $for-loop|1
     local.get $3
     local.get $4
     i32.ge_s
     if
      local.get $0
      i32.load offset=4
      local.get $4
      i32.add
      local.tee $2
      local.get $2
      i32.load8_u
      local.tee $2
      local.get $2
      i32.const 5
      i32.ge_u
      i32.const 3
      i32.mul
      i32.add
      i32.store8
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    local.get $3
    local.set $2
    loop $for-loop|2
     local.get $2
     i32.const -1
     i32.ne
     if
      local.get $0
      i32.load offset=4
      local.tee $4
      local.get $2
      i32.add
      i32.load8_u
      i32.const 1
      i32.shl
      local.set $6
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $4
       local.get $2
       i32.const 1
       i32.add
       i32.add
       local.tee $4
       local.get $4
       i32.load8_u
       local.get $6
       i32.const 255
       i32.and
       i32.const 15
       i32.gt_u
       i32.or
       i32.store8
      end
      local.get $0
      i32.load offset=4
      local.get $2
      i32.add
      local.get $6
      i32.const 15
      i32.and
      i32.store8
      local.get $2
      i32.const 1
      i32.sub
      local.set $2
      br $for-loop|2
     end
    end
    local.get $0
    i32.load offset=4
    local.tee $2
    local.get $2
    i32.load8_u
    local.get $1
    i64.const 1
    local.get $5
    i64.extend_i32_s
    i64.shl
    i64.and
    i64.const 0
    i64.ne
    i32.add
    i32.store8
    local.get $5
    i32.const 1
    i32.sub
    local.set $5
    br $for-loop|0
   end
  end
 )
 (func $assembly/tests/testFieldToName
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  i32.const 4848
  call $~lib/as-bignum/assembly/utils/atou128
  call $assembly/utils/fieldToName
  local.set $1
  i32.const 2
  global.set $~argumentsLength
  local.get $1
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
  i32.const 5824
  local.set $0
  local.get $1
  call $assembly/utils/nameToArrayBuffer
  call $assembly/utils/fromArrayBuffer
  local.tee $1
  i64.load
  local.get $1
  i64.load offset=8
  i64.or
  i64.const 0
  i64.ne
  if
   i32.const 7408
   local.set $0
   i32.const 12
   i32.const 20
   call $~lib/rt/stub/__new
   i32.const 40
   i32.const 0
   call $~lib/arraybuffer/ArrayBufferView#constructor
   local.tee $2
   local.get $1
   i64.load offset=8
   call $~lib/as-bignum/assembly/utils/processU64
   local.get $2
   local.get $1
   i64.load
   call $~lib/as-bignum/assembly/utils/processU64
   i32.const 39
   local.set $1
   loop $for-loop|0
    local.get $1
    i32.const -1
    i32.ne
    if
     i32.const 1
     local.get $3
     local.get $3
     i32.eqz
     local.get $1
     local.get $2
     i32.load offset=4
     i32.add
     i32.load8_u
     local.tee $4
     i32.const 0
     i32.ne
     i32.and
     select
     local.tee $3
     if
      local.get $4
      i32.const 9
      i32.gt_u
      if
       i32.const 0
       i32.const 4960
       i32.const 114
       i32.const 7
       call $~lib/builtins/abort
       unreachable
      end
      i32.const 1
      global.set $~argumentsLength
      local.get $0
      local.get $4
      i32.const 48
      i32.add
      call $~lib/string/String.fromCharCode@varargs
      call $~lib/string/String.__concat
      local.set $0
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|0
    end
   end
  end
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
  i32.const 8448
  call $~lib/as-bignum/assembly/utils/atou128
  local.tee $0
  i64.load
  local.get $0
  i64.load offset=8
  global.get $assembly/indexer/constants/index/TWENTY_SIX
  local.tee $0
  i64.load
  local.get $0
  i64.load offset=8
  call $~lib/as-bignum/assembly/globals/__udivmod128
  local.set $5
  global.get $~lib/as-bignum/assembly/globals/__divmod_quot_hi
  local.set $6
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $5
  i64.store
  local.get $0
  local.get $6
  i64.store offset=8
  local.get $0
  call $assembly/utils/fieldToName
  local.set $0
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
 )
 (func $~lib/util/string/strtol<f64> (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $0
  local.tee $2
  i32.load16_u
  local.set $0
  loop $while-continue|0
   block $__inlined_func$~lib/util/string/isSpace$770 (result i32)
    local.get $0
    i32.const 128
    i32.or
    i32.const 160
    i32.eq
    local.get $0
    i32.const 9
    i32.sub
    i32.const 4
    i32.le_u
    i32.or
    local.get $0
    i32.const 5760
    i32.lt_u
    br_if $__inlined_func$~lib/util/string/isSpace$770
    drop
    i32.const 1
    local.get $0
    i32.const -8192
    i32.add
    i32.const 10
    i32.le_u
    br_if $__inlined_func$~lib/util/string/isSpace$770
    drop
    block $break|0
     block $case6|0
      local.get $0
      i32.const 5760
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8232
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8233
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8239
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8287
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 12288
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 65279
      i32.eq
      br_if $case6|0
      br $break|0
     end
     i32.const 1
     br $__inlined_func$~lib/util/string/isSpace$770
    end
    i32.const 0
   end
   if
    local.get $2
    i32.const 2
    i32.add
    local.tee $2
    i32.load16_u
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $while-continue|0
   end
  end
  f64.const 1
  local.set $3
  local.get $0
  i32.const 43
  i32.eq
  local.get $0
  i32.const 45
  i32.eq
  i32.or
  if (result i32)
   local.get $1
   i32.const 1
   i32.sub
   local.tee $1
   i32.eqz
   if
    f64.const nan:0x8000000000000
    return
   end
   f64.const -1
   f64.const 1
   local.get $0
   i32.const 45
   i32.eq
   select
   local.set $3
   local.get $2
   i32.const 2
   i32.add
   local.tee $2
   i32.load16_u
  else
   local.get $0
  end
  i32.const 48
  i32.eq
  local.get $1
  i32.const 2
  i32.gt_s
  i32.and
  if (result i32)
   local.get $2
   i32.load16_u offset=2
   i32.const 32
   i32.or
   i32.const 120
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $2
   i32.const 4
   i32.add
   local.set $2
   local.get $1
   i32.const 2
   i32.sub
   local.set $1
  end
  local.get $1
  i32.const 1
  i32.sub
  local.set $5
  loop $while-continue|2
   local.get $1
   local.tee $0
   i32.const 1
   i32.sub
   local.set $1
   local.get $0
   if
    block $while-break|2
     local.get $2
     i32.load16_u
     local.tee $6
     i32.const 48
     i32.sub
     local.tee $0
     i32.const 10
     i32.ge_u
     if
      local.get $6
      i32.const 65
      i32.sub
      i32.const 25
      i32.le_u
      if (result i32)
       local.get $6
       i32.const 55
       i32.sub
      else
       local.get $6
       i32.const 87
       i32.sub
       local.get $6
       local.get $6
       i32.const 97
       i32.sub
       i32.const 25
       i32.le_u
       select
      end
      local.set $0
     end
     local.get $0
     i32.const 16
     i32.ge_u
     if
      local.get $1
      local.get $5
      i32.eq
      if
       f64.const nan:0x8000000000000
       return
      end
      br $while-break|2
     end
     local.get $4
     f64.const 16
     f64.mul
     local.get $0
     f64.convert_i32_u
     f64.add
     local.set $4
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|2
    end
   end
  end
  local.get $3
  local.get $4
  f64.mul
 )
 (func $~lib/metashrew-as/assembly/index/decodeHex (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $3
   i32.lt_s
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.div_s
    i32.add
    local.set $5
    local.get $2
    i32.const 0
    local.get $2
    i32.const 0
    i32.gt_s
    select
    local.tee $1
    local.get $3
    local.get $1
    local.get $3
    i32.lt_s
    select
    local.tee $6
    local.get $2
    i32.const 2
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
    local.tee $1
    local.get $3
    local.get $1
    local.get $3
    i32.lt_s
    select
    local.tee $7
    local.get $6
    local.get $7
    i32.lt_s
    select
    i32.const 1
    i32.shl
    local.set $8
    i32.const 7408
    local.set $1
    block $__inlined_func$~lib/string/String#substring$771
     local.get $6
     local.get $7
     local.get $6
     local.get $7
     i32.gt_s
     select
     i32.const 1
     i32.shl
     local.tee $7
     local.get $8
     i32.sub
     local.tee $6
     i32.eqz
     br_if $__inlined_func$~lib/string/String#substring$771
     local.get $0
     local.set $1
     local.get $8
     i32.eqz
     local.get $7
     local.get $3
     i32.const 1
     i32.shl
     i32.eq
     i32.and
     br_if $__inlined_func$~lib/string/String#substring$771
     local.get $6
     i32.const 2
     call $~lib/rt/stub/__new
     local.tee $1
     local.get $0
     local.get $8
     i32.add
     local.get $6
     memory.copy
    end
    local.get $5
    local.get $1
    call $~lib/util/string/strtol<f64>
    i32.trunc_sat_f64_u
    i32.store8
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $4
 )
 (func $assembly/indexer/RuneId/RuneId#constructor (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 12
  i32.const 53
  call $~lib/rt/stub/__new
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $0
  i64.store
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   i32.const 5824
   return
  end
  local.get $0
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $0
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $2
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/stub/__new
  local.tee $1
  local.get $0
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex (param $0 i32) (param $1 i32) (result i32)
  i32.const 12240
  local.get $1
  call $~lib/util/number/utoa32
  call $~lib/string/String.__concat
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 12192
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $1
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  local.set $2
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  local.get $2
  i32.const 1
  i32.add
  i32.store
  local.get $1
  call $~lib/string/String.UTF8.decode
  local.set $3
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $3
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $3
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  local.get $0
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage.etchGenesisRune
  (local $0 i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 12112
  call $assembly/utils/nameToArrayBuffer
  local.set $0
  i64.const 1
  i32.const 0
  call $assembly/indexer/RuneId/RuneId#constructor
  local.tee $3
  i64.load
  local.set $1
  local.get $3
  i64.load32_u offset=8
  local.set $2
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $3
  local.get $1
  i64.store
  local.get $3
  local.get $2
  i64.store offset=8
  local.get $3
  call $assembly/utils/toArrayBuffer
  local.set $3
  global.get $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $4
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $4
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $0
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/RUNE_ID_TO_HEIGHT
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i32.const 840000
  i32.store
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/DIVISIBILITY
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 1
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i32.const 1
  i32.store8
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/AMOUNT
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  i64.const 1
  i64.store
  local.get $4
  i64.const 0
  i64.store offset=8
  local.get $4
  call $assembly/utils/toArrayBuffer
  local.set $4
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/CAP
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  i64.const -1
  i64.store
  local.get $4
  i64.const -1
  i64.store offset=8
  local.get $4
  call $assembly/utils/toArrayBuffer
  local.set $4
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/MINTS_REMAINING
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  i64.const -1
  i64.store
  local.get $4
  i64.const -1
  i64.store offset=8
  local.get $4
  call $assembly/utils/toArrayBuffer
  local.set $4
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/OFFSETEND
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 8
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i64.const 210000
  i64.store
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/SPACERS
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i32.const 128
  i32.store
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/SYMBOL
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 12156
  i32.load
  i32.const 1
  i32.shr_u
  if (result i32)
   i32.const 12160
   i32.load16_u
  else
   i32.const -1
  end
  local.set $4
  i32.const 1
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $5
  local.get $4
  i32.store8
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $4
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $4
  local.get $5
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $4
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/ETCHINGS
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
  local.tee $3
  call $~lib/string/String.UTF8.decode
  local.set $4
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $4
  local.get $0
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $4
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectValue<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.get $1
  i32.const -16711936
  i32.and
  i32.const 8
  i32.rotl
  local.get $1
  i32.const 16711935
  i32.and
  i32.const 8
  i32.rotr
  i32.or
  i32.store
  local.get $0
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
 )
 (func $~lib/typedarray/Int32Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 3344
   i32.const 8096
   i32.const 747
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
 )
 (func $~lib/fast-sha256-as/assembly/sha256/Hash#reset (param $0 i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.const 1779033703
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 1
  i32.const -1150833019
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.const 1013904242
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.const -1521486534
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 4
  i32.const 1359893119
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 5
  i32.const -1694144372
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 6
  i32.const 528734635
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.load offset=8
  i32.const 7
  i32.const 1541459225
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
  i32.const 0
  i32.store offset=24
  local.get $0
  i32.const 0
  i32.store8 offset=28
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 3344
   i32.const 8096
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/typedarray/Uint8Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 3344
   i32.const 8096
   i32.const 178
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $~lib/typedarray/Int32Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 3344
   i32.const 8096
   i32.const 736
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3344
   i32.const 3520
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/fast-sha256-as/assembly/sha256/hashBlocks (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  loop $while-continue|0
   local.get $4
   i32.const 64
   i32.ge_s
   if
    local.get $1
    i32.const 0
    call $~lib/typedarray/Int32Array#__get
    local.set $9
    local.get $1
    i32.const 1
    call $~lib/typedarray/Int32Array#__get
    local.set $5
    local.get $1
    i32.const 2
    call $~lib/typedarray/Int32Array#__get
    local.set $6
    local.get $1
    i32.const 3
    call $~lib/typedarray/Int32Array#__get
    local.set $11
    local.get $1
    i32.const 4
    call $~lib/typedarray/Int32Array#__get
    local.set $10
    local.get $1
    i32.const 5
    call $~lib/typedarray/Int32Array#__get
    local.set $7
    local.get $1
    i32.const 6
    call $~lib/typedarray/Int32Array#__get
    local.set $8
    local.get $1
    i32.const 7
    call $~lib/typedarray/Int32Array#__get
    local.set $12
    i32.const 0
    local.set $13
    loop $for-loop|1
     local.get $13
     i32.const 16
     i32.lt_s
     if
      local.get $0
      local.get $13
      local.get $2
      local.get $3
      local.get $13
      i32.const 2
      i32.shl
      i32.add
      local.tee $14
      call $~lib/typedarray/Uint8Array#__get
      i32.const 255
      i32.and
      i32.const 24
      i32.shl
      local.get $2
      local.get $14
      i32.const 1
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i32.const 255
      i32.and
      i32.const 16
      i32.shl
      i32.or
      local.get $2
      local.get $14
      i32.const 2
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i32.const 255
      i32.and
      i32.const 8
      i32.shl
      i32.or
      local.get $2
      local.get $14
      i32.const 3
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i32.const 255
      i32.and
      i32.or
      call $~lib/typedarray/Int32Array#__set
      local.get $13
      i32.const 1
      i32.add
      local.set $13
      br $for-loop|1
     end
    end
    i32.const 16
    local.set $13
    loop $for-loop|2
     local.get $13
     i32.const 64
     i32.lt_s
     if
      local.get $0
      local.get $13
      i32.const 2
      i32.sub
      call $~lib/typedarray/Int32Array#__get
      local.set $14
      local.get $0
      local.get $13
      i32.const 15
      i32.sub
      call $~lib/typedarray/Int32Array#__get
      local.set $15
      local.get $0
      local.get $13
      local.get $0
      local.get $13
      i32.const 7
      i32.sub
      call $~lib/typedarray/Int32Array#__get
      local.get $14
      i32.const 15
      i32.shl
      local.get $14
      i32.const 17
      i32.shr_u
      i32.or
      local.get $14
      i32.const 13
      i32.shl
      local.get $14
      i32.const 19
      i32.shr_u
      i32.or
      i32.xor
      local.get $14
      i32.const 10
      i32.shr_u
      i32.xor
      i32.add
      local.get $0
      local.get $13
      i32.const 16
      i32.sub
      call $~lib/typedarray/Int32Array#__get
      local.get $15
      i32.const 25
      i32.shl
      local.get $15
      i32.const 7
      i32.shr_u
      i32.or
      local.get $15
      i32.const 14
      i32.shl
      local.get $15
      i32.const 18
      i32.shr_u
      i32.or
      i32.xor
      local.get $15
      i32.const 3
      i32.shr_u
      i32.xor
      i32.add
      i32.add
      call $~lib/typedarray/Int32Array#__set
      local.get $13
      i32.const 1
      i32.add
      local.set $13
      br $for-loop|2
     end
    end
    i32.const 0
    local.set $13
    loop $for-loop|3
     local.get $13
     i32.const 64
     i32.lt_s
     if
      local.get $10
      i32.const 7
      i32.shl
      local.get $10
      i32.const 25
      i32.shr_u
      i32.or
      local.get $10
      i32.const 26
      i32.shl
      local.get $10
      i32.const 6
      i32.shr_u
      i32.or
      local.get $10
      i32.const 21
      i32.shl
      local.get $10
      i32.const 11
      i32.shr_u
      i32.or
      i32.xor
      i32.xor
      local.get $7
      local.get $10
      i32.and
      local.get $10
      i32.const -1
      i32.xor
      local.get $8
      i32.and
      i32.xor
      i32.add
      i32.const 2560
      local.get $13
      call $~lib/array/Array<u32>#__get
      local.get $0
      local.get $13
      call $~lib/typedarray/Int32Array#__get
      i32.add
      local.get $12
      i32.add
      i32.add
      local.set $14
      local.get $9
      i32.const 10
      i32.shl
      local.get $9
      i32.const 22
      i32.shr_u
      i32.or
      local.get $9
      i32.const 30
      i32.shl
      local.get $9
      i32.const 2
      i32.shr_u
      i32.or
      local.get $9
      i32.const 19
      i32.shl
      local.get $9
      i32.const 13
      i32.shr_u
      i32.or
      i32.xor
      i32.xor
      local.get $5
      local.get $6
      i32.and
      local.get $5
      local.get $9
      i32.and
      local.get $6
      local.get $9
      i32.and
      i32.xor
      i32.xor
      i32.add
      local.set $15
      local.get $8
      local.set $12
      local.get $7
      local.set $8
      local.get $10
      local.set $7
      local.get $11
      local.get $14
      i32.add
      local.set $10
      local.get $6
      local.set $11
      local.get $5
      local.set $6
      local.get $9
      local.set $5
      local.get $14
      local.get $15
      i32.add
      local.set $9
      local.get $13
      i32.const 1
      i32.add
      local.set $13
      br $for-loop|3
     end
    end
    local.get $1
    i32.const 0
    local.get $1
    i32.const 0
    call $~lib/typedarray/Int32Array#__get
    local.get $9
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 1
    local.get $1
    i32.const 1
    call $~lib/typedarray/Int32Array#__get
    local.get $5
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 2
    local.get $1
    i32.const 2
    call $~lib/typedarray/Int32Array#__get
    local.get $6
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 3
    local.get $1
    i32.const 3
    call $~lib/typedarray/Int32Array#__get
    local.get $11
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 4
    local.get $1
    i32.const 4
    call $~lib/typedarray/Int32Array#__get
    local.get $10
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 5
    local.get $1
    i32.const 5
    call $~lib/typedarray/Int32Array#__get
    local.get $7
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 6
    local.get $1
    i32.const 6
    call $~lib/typedarray/Int32Array#__get
    local.get $8
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $1
    i32.const 7
    local.get $1
    i32.const 7
    call $~lib/typedarray/Int32Array#__get
    local.get $12
    i32.add
    call $~lib/typedarray/Int32Array#__set
    local.get $3
    i32.const -64
    i32.sub
    local.set $3
    local.get $4
    i32.const -64
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  local.get $3
 )
 (func $~lib/fast-sha256-as/assembly/sha256/Hash#finish (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load8_u offset=28
  i32.eqz
  if
   local.get $0
   i32.load offset=24
   local.tee $3
   i32.const 536870912
   i32.div_s
   local.set $4
   local.get $3
   i32.const 3
   i32.shl
   local.set $5
   i32.const 64
   i32.const 128
   local.get $3
   i32.const 64
   i32.rem_s
   i32.const 56
   i32.lt_s
   select
   local.set $6
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=20
   local.tee $3
   i32.const 128
   call $~lib/typedarray/Uint8Array#__set
   local.get $3
   i32.const 1
   i32.add
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.const 8
    i32.sub
    i32.lt_s
    if
     local.get $0
     i32.load offset=16
     local.get $3
     i32.const 0
     call $~lib/typedarray/Uint8Array#__set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 8
   i32.sub
   local.get $4
   i32.const 24
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 7
   i32.sub
   local.get $4
   i32.const 16
   i32.shr_u
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 6
   i32.sub
   local.get $4
   i32.const 8
   i32.shr_u
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 5
   i32.sub
   local.get $4
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 4
   i32.sub
   local.get $5
   i32.const 24
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 3
   i32.sub
   local.get $5
   i32.const 16
   i32.shr_u
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 2
   i32.sub
   local.get $5
   i32.const 8
   i32.shr_u
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=16
   local.get $6
   i32.const 1
   i32.sub
   local.get $5
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__set
   local.get $0
   i32.load offset=12
   local.get $0
   i32.load offset=8
   local.get $0
   i32.load offset=16
   i32.const 0
   local.get $6
   call $~lib/fast-sha256-as/assembly/sha256/hashBlocks
   drop
   local.get $0
   i32.const 1
   i32.store8 offset=28
  end
  loop $for-loop|1
   local.get $2
   i32.const 8
   i32.lt_s
   if
    local.get $1
    local.get $2
    i32.const 2
    i32.shl
    local.tee $3
    local.get $0
    i32.load offset=8
    local.get $2
    call $~lib/typedarray/Int32Array#__get
    i32.const 24
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    local.get $3
    i32.const 1
    i32.add
    local.get $0
    i32.load offset=8
    local.get $2
    call $~lib/typedarray/Int32Array#__get
    i32.const 16
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    local.get $3
    i32.const 2
    i32.add
    local.get $0
    i32.load offset=8
    local.get $2
    call $~lib/typedarray/Int32Array#__get
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    local.get $3
    i32.const 3
    i32.add
    local.get $0
    i32.load offset=8
    local.get $2
    call $~lib/typedarray/Int32Array#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
 )
 (func $~lib/fast-sha256-as/assembly/sha256/sha256 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 29
  i32.const 54
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  local.get $3
  i32.const 0
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.store offset=20
  local.get $3
  i32.const 0
  i32.store offset=24
  local.get $3
  i32.const 0
  i32.store8 offset=28
  local.get $3
  i32.const 32
  i32.store
  local.get $3
  i32.const 64
  i32.store offset=4
  local.get $3
  i32.const 12
  i32.const 55
  call $~lib/rt/stub/__new
  i32.const 8
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  i32.store offset=8
  local.get $3
  i32.const 12
  i32.const 55
  call $~lib/rt/stub/__new
  i32.const 64
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  i32.store offset=12
  local.get $3
  i32.const 12
  i32.const 20
  call $~lib/rt/stub/__new
  i32.const 128
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.store offset=20
  local.get $3
  i32.const 0
  i32.store offset=24
  local.get $3
  call $~lib/fast-sha256-as/assembly/sha256/Hash#reset
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $5
  i32.const 1
  global.set $~argumentsLength
  local.get $5
  i32.load offset=8
  local.set $1
  i32.const 0
  local.set $0
  local.get $3
  i32.load8_u offset=28
  if
   i32.const 12368
   i32.const 12496
   i32.const 196
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $3
  i32.load offset=24
  local.get $1
  i32.add
  i32.store offset=24
  local.get $3
  i32.load offset=20
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $3
    i32.load offset=20
    local.tee $6
    i32.const 64
    i32.lt_s
    local.get $1
    i32.const 0
    i32.gt_s
    i32.and
    if
     local.get $0
     local.tee $2
     i32.const 1
     i32.add
     local.set $0
     local.get $3
     i32.load offset=16
     local.set $7
     local.get $3
     local.get $6
     i32.const 1
     i32.add
     i32.store offset=20
     local.get $7
     local.get $6
     local.get $5
     local.get $2
     call $~lib/typedarray/Uint8Array#__get
     call $~lib/typedarray/Uint8Array#__set
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $while-continue|0
    end
   end
   local.get $3
   i32.load offset=20
   i32.const 64
   i32.eq
   if
    local.get $3
    i32.load offset=12
    local.get $3
    i32.load offset=8
    local.get $3
    i32.load offset=16
    i32.const 0
    i32.const 64
    call $~lib/fast-sha256-as/assembly/sha256/hashBlocks
    drop
    local.get $3
    i32.const 0
    i32.store offset=20
   end
  end
  local.get $1
  i32.const 64
  i32.ge_s
  if
   local.get $3
   i32.load offset=12
   local.get $3
   i32.load offset=8
   local.get $5
   local.get $0
   local.get $1
   call $~lib/fast-sha256-as/assembly/sha256/hashBlocks
   local.set $0
   local.get $1
   i32.const 64
   i32.rem_s
   local.set $1
  end
  loop $while-continue|1
   local.get $1
   i32.const 0
   i32.gt_s
   if
    local.get $0
    local.tee $2
    i32.const 1
    i32.add
    local.set $0
    local.get $3
    i32.load offset=16
    local.set $6
    local.get $3
    local.get $3
    i32.load offset=20
    local.tee $7
    i32.const 1
    i32.add
    i32.store offset=20
    local.get $6
    local.get $7
    local.get $5
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $while-continue|1
   end
  end
  local.get $3
  i32.load
  local.set $0
  local.get $3
  i32.const 12
  i32.const 20
  call $~lib/rt/stub/__new
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  call $~lib/fast-sha256-as/assembly/sha256/Hash#finish
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.load offset=16
   local.tee $1
   i32.load offset=8
   i32.lt_s
   if
    local.get $1
    local.get $4
    i32.const 0
    call $~lib/typedarray/Uint8Array#__set
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $3
   i32.load offset=12
   local.tee $1
   i32.load offset=8
   i32.const 2
   i32.shr_u
   i32.lt_s
   if
    local.get $1
    local.get $4
    i32.const 0
    call $~lib/typedarray/Int32Array#__set
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $3
  call $~lib/fast-sha256-as/assembly/sha256/Hash#reset
  local.get $0
  i32.load
 )
 (func $~lib/metashrew-as/assembly/blockdata/block/Block#blockhash (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.load
  local.set $1
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.get $1
  i32.store
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  local.get $0
  i32.load offset=12
  local.set $1
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $5
  local.get $1
  i32.store
  local.get $0
  i32.load offset=16
  local.set $1
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $6
  local.get $1
  i32.store
  local.get $0
  i32.load offset=20
  local.set $0
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  i32.store
  i32.const 6
  i32.const 2
  i32.const 50
  call $~lib/rt/__newArray
  local.tee $0
  i32.load offset=4
  drop
  local.get $0
  i32.const 0
  local.get $2
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 1
  local.get $3
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 2
  local.get $4
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 3
  local.get $5
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 4
  local.get $6
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 5
  local.get $1
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $0
  i32.const 7792
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
  call $~lib/metashrew-as/assembly/utils/box/Box.concat
  call $~lib/fast-sha256-as/assembly/sha256/sha256
  call $~lib/fast-sha256-as/assembly/sha256/sha256
  call $~lib/metashrew-as/assembly/utils/utils/reverse
 )
 (func $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#txid (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=32
  local.tee $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 0
  i32.gt_s
  if
   local.get $1
   return
  end
  local.get $0
  local.tee $1
  i32.load8_u offset=8
  if
   local.get $1
   i32.load
   i32.load
   i32.const 4
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.set $2
   local.get $1
   i32.load
   i32.load
   local.get $1
   i32.load
   i32.load offset=4
   i32.add
   i32.const 4
   i32.sub
   i32.const 4
   call $~lib/metashrew-as/assembly/utils/box/Box#constructor
   local.set $3
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#constructor
   local.tee $0
   local.get $2
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
   local.get $0
   local.get $1
   i32.load offset=28
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
   local.get $0
   local.get $3
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
  else
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#constructor
   local.tee $0
   local.get $1
   i32.load
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
  end
  local.get $1
  local.get $0
  call $~lib/metashrew-as/assembly/utils/box/Box.concat
  call $~lib/fast-sha256-as/assembly/sha256/sha256
  call $~lib/fast-sha256-as/assembly/sha256/sha256
  call $~lib/metashrew-as/assembly/utils/utils/reverse
  i32.store offset=32
  local.get $1
  i32.load offset=32
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3344
   i32.const 3520
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/dataview/DataView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 12
  i32.const 63
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.get $1
  local.get $2
  i32.add
  i32.lt_u
  local.get $2
  i32.const 1073741820
  i32.gt_u
  i32.or
  if
   i32.const 2608
   i32.const 12592
   i32.const 25
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  local.get $1
  i32.add
  i32.store offset=4
  local.get $3
  local.get $2
  i32.store offset=8
  local.get $3
 )
 (func $~lib/dataview/DataView#constructor@varargs (param $0 i32) (result i32)
  (local $1 i32)
  block $2of2
   block $1of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $1of2 $1of2 $2of2 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   local.set $1
  end
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/dataview/DataView#constructor
 )
 (func $assembly/proto/protorune/__proto.SafeDecoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  i32.const 9
  i32.const 64
  call $~lib/rt/stub/__new
  local.tee $1
  i32.eqz
  if
   i32.const 8
   i32.const 65
   call $~lib/rt/stub/__new
   local.set $1
  end
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store8 offset=8
  local.get $1
 )
 (func $assembly/proto/protorune/protorune.Predicate#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 4
  i32.const 57
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  i32.const 16
  i32.const 61
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.const 32
  memory.fill
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.store offset=4
  local.get $1
  i32.const 32
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
 )
 (func $~lib/dataview/DataView#getUint8 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 3344
   i32.const 12592
   i32.const 72
   i32.const 50
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 5824
   return
  end
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $0
  select
  local.tee $3
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $3
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $3
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $3
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $3
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $2
  i32.const 1
  i32.shl
  local.get $0
  i32.add
  i32.const 2
  call $~lib/rt/stub/__new
  local.tee $1
  local.get $0
  i32.add
  local.get $3
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  if
   local.get $1
   i32.const 45
   i32.store16
  end
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 7408
  local.set $3
  block $__inlined_func$~lib/util/string/joinStringArray$940
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 2
   i32.shr_u
   local.tee $7
   i32.const 1
   i32.sub
   local.tee $5
   i32.const 0
   i32.lt_s
   br_if $__inlined_func$~lib/util/string/joinStringArray$940
   local.get $5
   i32.eqz
   if
    local.get $0
    i32.load
    local.tee $3
    i32.eqz
    if
     i32.const 7408
     local.set $3
    end
    br $__inlined_func$~lib/util/string/joinStringArray$940
   end
   loop $for-loop|0
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $3
     if
      local.get $1
      local.get $3
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      i32.add
      local.set $1
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $1
   local.get $5
   i32.const 7404
   i32.load
   i32.const 1
   i32.shr_u
   local.tee $1
   i32.mul
   i32.add
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/stub/__new
   local.set $3
   loop $for-loop|1
    local.get $5
    local.get $6
    i32.gt_s
    if
     local.get $0
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $4
     if
      local.get $3
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $4
      local.get $4
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      local.tee $4
      i32.const 1
      i32.shl
      memory.copy
      local.get $2
      local.get $4
      i32.add
      local.set $2
     end
     local.get $1
     if
      local.get $3
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      i32.const 7408
      local.get $1
      i32.const 1
      i32.shl
      memory.copy
      local.get $1
      local.get $2
      i32.add
      local.set $2
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|1
    end
   end
   local.get $0
   local.get $5
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.tee $0
   if
    local.get $3
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const -2
    i32.and
    memory.copy
   end
  end
  local.get $3
 )
 (func $assembly/proto/protorune/__proto.Decoder#varint (param $0 i32) (result i64)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/dataview/DataView#getUint8
  i32.const 255
  i32.and
  i64.extend_i32_u
  i64.const 127
  i64.and
  local.set $1
  local.get $0
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1
  i32.add
  i32.store offset=4
  block $folding-inner0
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 7
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 14
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 21
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 28
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 35
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 42
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 49
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 28
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 35
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load
   i32.load offset=8
   i32.gt_s
   if
    i32.const 12788
    local.get $0
    i32.load offset=4
    call $~lib/util/number/itoa32
    i32.store
    i32.const 12784
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 12816
    i32.const 278
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
 )
 (func $~lib/array/Array<u8>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3344
    i32.const 3520
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 0
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $assembly/proto/protorune/__proto.SafeDecoder#bytes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2224 (result i32)
   i32.const 1
   local.get $0
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2224
   drop
   local.get $0
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $0
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2224
   end
   i32.const 0
  end
  if
   i32.const 0
   call $~lib/array/Array<u8>#constructor
   return
  end
  local.get $0
  call $assembly/proto/protorune/__proto.Decoder#varint@override
  i32.wrap_i64
  local.set $1
  local.get $0
  i32.load
  i32.load offset=8
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $0
   i32.load offset=4
   i32.add
   i32.const 4096
   i32.gt_s
  end
  if
   local.get $0
   i32.const 1
   i32.store8 offset=8
   i32.const 0
   call $~lib/array/Array<u8>#constructor
   return
  end
  local.get $1
  call $~lib/array/Array<u8>#constructor
  local.set $3
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.gt_u
   if
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $3
    local.get $2
    local.get $0
    i32.load
    local.get $4
    call $~lib/dataview/DataView#getUint8
    call $~lib/array/Array<u8>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $assembly/proto/protorune/protorune.RuneId#constructor (result i32)
  (local $0 i32)
  i32.const 8
  i32.const 59
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
 )
 (func $assembly/proto/protorune/protorune.uint128#constructor (result i32)
  (local $0 i32)
  i32.const 16
  i32.const 60
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i64.const 0
  i64.store
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
 )
 (func $assembly/proto/protorune/__proto.SafeDecoder#varint (param $0 i32) (result i64)
  (local $1 i64)
  (local $2 i32)
  block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2227 (result i32)
   i32.const 1
   local.get $0
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2227
   drop
   local.get $0
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $0
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2227
   end
   i32.const 0
  end
  if
   i64.const 0
   return
  end
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/dataview/DataView#getUint8
  i32.const 255
  i32.and
  i64.extend_i32_u
  i64.const 127
  i64.and
  local.set $1
  local.get $0
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1
  i32.add
  i32.store offset=4
  block $folding-inner1
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner1
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 7
   i64.shl
   local.get $1
   i64.or
   local.set $1
   block $folding-inner0
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 14
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 21
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 28
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 35
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 42
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 49
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 28
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load
    local.get $0
    i32.load offset=4
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i64.extend_i32_u
    i64.const 127
    i64.and
    i64.const 35
    i64.shl
    local.get $1
    i64.or
    local.set $1
    local.get $0
    i32.load offset=4
    i32.const 1
    i32.add
    i32.const 4096
    i32.gt_s
    br_if $folding-inner0
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $0
    i32.load
    local.get $2
    call $~lib/dataview/DataView#getUint8
    i32.const 255
    i32.and
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    local.get $0
    i32.load offset=4
    local.get $0
    i32.load
    i32.load offset=8
    i32.gt_s
    if (result i32)
     i32.const 1
    else
     local.get $0
     i32.load offset=4
     i32.const 4096
     i32.gt_s
    end
    br_if $folding-inner0
    local.get $1
    return
   end
   local.get $0
   i32.const 1
   i32.store8 offset=8
   i64.const 0
   return
  end
  local.get $1
 )
 (func $assembly/proto/protorune/__proto.SafeDecoder#skipType (param $0 i32) (param $1 i32)
  block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2229 (result i32)
   i32.const 1
   local.get $0
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2229
   drop
   local.get $0
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $0
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2229
   end
   i32.const 0
  end
  if
   return
  end
  block $break|0
   block $case5|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $1
         br_table $case0|0 $case1|0 $case2|0 $case3|0 $case5|0 $case4|0 $case5|0
        end
        local.get $0
        call $assembly/proto/protorune/__proto.SafeDecoder#varint
        drop
        br $break|0
       end
       block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228 (result i32)
        i32.const 1
        local.get $0
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
        drop
        local.get $0
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $0
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
        end
        i32.const 0
       end
       i32.eqz
       if
        local.get $0
        i32.load
        i32.load offset=8
        local.get $0
        i32.load offset=4
        i32.const 8
        i32.add
        i32.lt_s
        if (result i32)
         i32.const 1
        else
         local.get $0
         i32.load offset=4
         i32.const 8
         i32.add
         i32.const 4096
         i32.gt_s
        end
        if
         local.get $0
         i32.const 1
         i32.store8 offset=8
        end
        local.get $0
        local.get $0
        i32.load offset=4
        i32.const 8
        i32.add
        i32.store offset=4
       end
       br $break|0
      end
      local.get $0
      call $assembly/proto/protorune/__proto.Decoder#varint@override
      i32.wrap_i64
      local.set $1
      block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280 (result i32)
       i32.const 1
       local.get $0
       i32.load8_u offset=8
       br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
       drop
       local.get $0
       i32.load offset=4
       i32.const 4096
       i32.gt_s
       if
        local.get $0
        i32.const 1
        i32.store8 offset=8
        i32.const 1
        br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
       end
       i32.const 0
      end
      i32.eqz
      if
       local.get $0
       i32.load
       i32.load offset=8
       local.get $1
       local.get $0
       i32.load offset=4
       i32.add
       i32.lt_s
       if (result i32)
        i32.const 1
       else
        local.get $1
        local.get $0
        i32.load offset=4
        i32.add
        i32.const 4096
        i32.gt_s
       end
       if
        local.get $0
        i32.const 1
        i32.store8 offset=8
       end
       local.get $0
       local.get $1
       local.get $0
       i32.load offset=4
       i32.add
       i32.store offset=4
      end
      br $break|0
     end
     loop $while-continue|1
      local.get $0
      call $assembly/proto/protorune/__proto.Decoder#varint@override
      i32.wrap_i64
      i32.const 7
      i32.and
      local.tee $1
      i32.const 4
      i32.ne
      if
       local.get $0
       local.get $1
       call $assembly/proto/protorune/__proto.SafeDecoder#skipType
       br $while-continue|1
      end
     end
     br $break|0
    end
    block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22281 (result i32)
     i32.const 1
     local.get $0
     i32.load8_u offset=8
     br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22281
     drop
     local.get $0
     i32.load offset=4
     i32.const 4096
     i32.gt_s
     if
      local.get $0
      i32.const 1
      i32.store8 offset=8
      i32.const 1
      br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22281
     end
     i32.const 0
    end
    i32.eqz
    if
     local.get $0
     i32.load
     i32.load offset=8
     local.get $0
     i32.load offset=4
     i32.const 4
     i32.add
     i32.lt_s
     if (result i32)
      i32.const 1
     else
      local.get $0
      i32.load offset=4
      i32.const 4
      i32.add
      i32.const 4096
      i32.gt_s
     end
     if
      local.get $0
      i32.const 1
      i32.store8 offset=8
     end
     local.get $0
     local.get $0
     i32.load offset=4
     i32.const 4
     i32.add
     i32.store offset=4
    end
    br $break|0
   end
   local.get $0
   i32.const 1
   i32.store8 offset=8
  end
 )
 (func $assembly/proto/protorune/protorune.Clause.decodeDataView (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $assembly/proto/protorune/__proto.SafeDecoder#constructor
  local.set $1
  i32.const 8
  i32.const 58
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $assembly/proto/protorune/protorune.RuneId#constructor
  i32.store
  local.get $0
  call $assembly/proto/protorune/protorune.uint128#constructor
  i32.store offset=4
  loop $while-continue|0
   block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217 (result i32)
    i32.const 1
    local.get $1
    i32.load8_u offset=8
    br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
    drop
    local.get $1
    i32.load offset=4
    i32.const 4096
    i32.gt_s
    if
     local.get $1
     i32.const 1
     i32.store8 offset=8
     i32.const 1
     br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
    end
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    local.get $1
    i32.load offset=4
    local.get $1
    i32.load
    i32.load offset=8
    i32.ge_s
   end
   i32.eqz
   if
    block $case2|1
     block $case1|1
      local.get $1
      call $assembly/proto/protorune/__proto.Decoder#varint@override
      i32.wrap_i64
      local.tee $2
      i32.const 3
      i32.shr_u
      local.tee $3
      i32.const 1
      i32.ne
      if
       local.get $3
       i32.const 2
       i32.eq
       br_if $case1|1
       br $case2|1
      end
      local.get $1
      call $assembly/proto/protorune/__proto.Decoder#varint@override
      i32.wrap_i64
      local.set $2
      local.get $0
      block $__inlined_func$assembly/proto/protorune/protorune.RuneId.decodeDataView$2532 (result i32)
       local.get $1
       i32.load
       local.tee $3
       i32.load
       local.tee $4
       local.get $1
       i32.load offset=4
       local.get $3
       i32.load offset=4
       local.get $4
       i32.sub
       i32.add
       local.get $2
       call $~lib/dataview/DataView#constructor
       call $assembly/proto/protorune/__proto.SafeDecoder#constructor
       local.set $3
       call $assembly/proto/protorune/protorune.RuneId#constructor
       local.set $4
       loop $while-continue|01
        block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170 (result i32)
         i32.const 1
         local.get $3
         i32.load8_u offset=8
         br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170
         drop
         local.get $3
         i32.load offset=4
         i32.const 4096
         i32.gt_s
         if
          local.get $3
          i32.const 1
          i32.store8 offset=8
          i32.const 1
          br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170
         end
         i32.const 0
        end
        if (result i32)
         i32.const 1
        else
         local.get $3
         i32.load offset=4
         local.get $3
         i32.load
         i32.load offset=8
         i32.ge_s
        end
        i32.eqz
        if
         block $case2|13
          block $case1|14
           local.get $3
           call $assembly/proto/protorune/__proto.Decoder#varint@override
           i32.wrap_i64
           local.tee $5
           i32.const 3
           i32.shr_u
           local.tee $6
           i32.const 1
           i32.ne
           if
            local.get $6
            i32.const 2
            i32.eq
            br_if $case1|14
            br $case2|13
           end
           local.get $4
           local.get $3
           call $assembly/proto/protorune/__proto.Decoder#varint@override
           i64.store32
           br $while-continue|01
          end
          local.get $4
          local.get $3
          call $assembly/proto/protorune/__proto.Decoder#varint@override
          i64.store32 offset=4
          br $while-continue|01
         end
         local.get $3
         local.get $5
         i32.const 7
         i32.and
         call $assembly/proto/protorune/__proto.SafeDecoder#skipType
         br $while-continue|01
        end
       end
       i32.const 0
       block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2230 (result i32)
        i32.const 1
        local.get $3
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2230
        drop
        local.get $3
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $3
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2230
        end
        i32.const 0
       end
       br_if $__inlined_func$assembly/proto/protorune/protorune.RuneId.decodeDataView$2532
       drop
       local.get $4
      end
      i32.store
      block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228 (result i32)
       i32.const 1
       local.get $1
       i32.load8_u offset=8
       br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
       drop
       local.get $1
       i32.load offset=4
       i32.const 4096
       i32.gt_s
       if
        local.get $1
        i32.const 1
        i32.store8 offset=8
        i32.const 1
        br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
       end
       i32.const 0
      end
      i32.eqz
      if
       local.get $1
       i32.load
       i32.load offset=8
       local.get $2
       local.get $1
       i32.load offset=4
       i32.add
       i32.lt_s
       if (result i32)
        i32.const 1
       else
        local.get $2
        local.get $1
        i32.load offset=4
        i32.add
        i32.const 4096
        i32.gt_s
       end
       if
        local.get $1
        i32.const 1
        i32.store8 offset=8
       end
       local.get $1
       local.get $2
       local.get $1
       i32.load offset=4
       i32.add
       i32.store offset=4
      end
      br $while-continue|0
     end
     local.get $1
     call $assembly/proto/protorune/__proto.Decoder#varint@override
     i32.wrap_i64
     local.set $2
     local.get $0
     block $__inlined_func$assembly/proto/protorune/protorune.uint128.decodeDataView$2533 (result i32)
      local.get $1
      i32.load
      local.tee $3
      i32.load
      local.tee $4
      local.get $1
      i32.load offset=4
      local.get $3
      i32.load offset=4
      local.get $4
      i32.sub
      i32.add
      local.get $2
      call $~lib/dataview/DataView#constructor
      call $assembly/proto/protorune/__proto.SafeDecoder#constructor
      local.set $3
      call $assembly/proto/protorune/protorune.uint128#constructor
      local.set $4
      loop $while-continue|02
       block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22171 (result i32)
        i32.const 1
        local.get $3
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22171
        drop
        local.get $3
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $3
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22171
        end
        i32.const 0
       end
       if (result i32)
        i32.const 1
       else
        local.get $3
        i32.load offset=4
        local.get $3
        i32.load
        i32.load offset=8
        i32.ge_s
       end
       i32.eqz
       if
        block $case2|14
         block $case1|15
          local.get $3
          call $assembly/proto/protorune/__proto.Decoder#varint@override
          i32.wrap_i64
          local.tee $5
          i32.const 3
          i32.shr_u
          local.tee $6
          i32.const 1
          i32.ne
          if
           local.get $6
           i32.const 2
           i32.eq
           br_if $case1|15
           br $case2|14
          end
          local.get $4
          local.get $3
          call $assembly/proto/protorune/__proto.Decoder#varint@override
          i64.store
          br $while-continue|02
         end
         local.get $4
         local.get $3
         call $assembly/proto/protorune/__proto.Decoder#varint@override
         i64.store offset=8
         br $while-continue|02
        end
        local.get $3
        local.get $5
        i32.const 7
        i32.and
        call $assembly/proto/protorune/__proto.SafeDecoder#skipType
        br $while-continue|02
       end
      end
      i32.const 0
      block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2231 (result i32)
       i32.const 1
       local.get $3
       i32.load8_u offset=8
       br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2231
       drop
       local.get $3
       i32.load offset=4
       i32.const 4096
       i32.gt_s
       if
        local.get $3
        i32.const 1
        i32.store8 offset=8
        i32.const 1
        br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2231
       end
       i32.const 0
      end
      br_if $__inlined_func$assembly/proto/protorune/protorune.uint128.decodeDataView$2533
      drop
      local.get $4
     end
     i32.store offset=4
     block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280 (result i32)
      i32.const 1
      local.get $1
      i32.load8_u offset=8
      br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
      drop
      local.get $1
      i32.load offset=4
      i32.const 4096
      i32.gt_s
      if
       local.get $1
       i32.const 1
       i32.store8 offset=8
       i32.const 1
       br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
      end
      i32.const 0
     end
     i32.eqz
     if
      local.get $1
      i32.load
      i32.load offset=8
      local.get $2
      local.get $1
      i32.load offset=4
      i32.add
      i32.lt_s
      if (result i32)
       i32.const 1
      else
       local.get $2
       local.get $1
       i32.load offset=4
       i32.add
       i32.const 4096
       i32.gt_s
      end
      if
       local.get $1
       i32.const 1
       i32.store8 offset=8
      end
      local.get $1
      local.get $2
      local.get $1
      i32.load offset=4
      i32.add
      i32.store offset=4
     end
     br $while-continue|0
    end
    local.get $1
    local.get $2
    i32.const 7
    i32.and
    call $assembly/proto/protorune/__proto.SafeDecoder#skipType
    br $while-continue|0
   end
  end
  block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2236 (result i32)
   i32.const 1
   local.get $1
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2236
   drop
   local.get $1
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $1
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2236
   end
   i32.const 0
  end
  if
   i32.const 0
   return
  end
  local.get $0
 )
 (func $assembly/proto/protorune/protorune.ProtoMessage.decodeDataView (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $assembly/proto/protorune/__proto.SafeDecoder#constructor
  local.set $1
  i32.const 16
  i32.const 56
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  i32.store
  local.get $0
  call $assembly/proto/protorune/protorune.Predicate#constructor
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  loop $while-continue|0
   block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217 (result i32)
    i32.const 1
    local.get $1
    i32.load8_u offset=8
    br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
    drop
    local.get $1
    i32.load offset=4
    i32.const 4096
    i32.gt_s
    if
     local.get $1
     i32.const 1
     i32.store8 offset=8
     i32.const 1
     br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
    end
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    local.get $1
    i32.load offset=4
    local.get $1
    i32.load
    i32.load offset=8
    i32.ge_s
   end
   i32.eqz
   if
    block $case4|1
     block $case3|1
      block $case2|1
       block $case1|1
        block $case0|1
         local.get $1
         call $assembly/proto/protorune/__proto.Decoder#varint@override
         i32.wrap_i64
         local.tee $2
         i32.const 3
         i32.shr_u
         i32.const 1
         i32.sub
         br_table $case0|1 $case1|1 $case2|1 $case3|1 $case4|1
        end
        local.get $0
        local.get $1
        call $assembly/proto/protorune/__proto.SafeDecoder#bytes
        i32.store
        br $while-continue|0
       end
       local.get $1
       call $assembly/proto/protorune/__proto.Decoder#varint@override
       i32.wrap_i64
       local.set $5
       local.get $0
       block $__inlined_func$assembly/proto/protorune/protorune.Predicate.decodeDataView$2535 (result i32)
        local.get $1
        i32.load
        local.tee $2
        i32.load
        local.tee $3
        local.get $1
        i32.load offset=4
        local.get $2
        i32.load offset=4
        local.get $3
        i32.sub
        i32.add
        local.get $5
        call $~lib/dataview/DataView#constructor
        call $assembly/proto/protorune/__proto.SafeDecoder#constructor
        local.set $3
        call $assembly/proto/protorune/protorune.Predicate#constructor
        local.set $6
        loop $while-continue|01
         block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170 (result i32)
          i32.const 1
          local.get $3
          i32.load8_u offset=8
          br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170
          drop
          local.get $3
          i32.load offset=4
          i32.const 4096
          i32.gt_s
          if
           local.get $3
           i32.const 1
           i32.store8 offset=8
           i32.const 1
           br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22170
          end
          i32.const 0
         end
         if (result i32)
          i32.const 1
         else
          local.get $3
          i32.load offset=4
          local.get $3
          i32.load
          i32.load offset=8
          i32.ge_s
         end
         i32.eqz
         if
          local.get $3
          call $assembly/proto/protorune/__proto.Decoder#varint@override
          i32.wrap_i64
          local.tee $2
          i32.const 3
          i32.shr_u
          i32.const 1
          i32.eq
          if
           local.get $3
           call $assembly/proto/protorune/__proto.Decoder#varint@override
           i32.wrap_i64
           local.set $4
           local.get $6
           i32.load
           local.get $3
           i32.load
           local.tee $7
           i32.load
           local.tee $2
           local.get $3
           i32.load offset=4
           local.get $7
           i32.load offset=4
           local.get $2
           i32.sub
           i32.add
           local.get $4
           call $~lib/dataview/DataView#constructor
           call $assembly/proto/protorune/protorune.Clause.decodeDataView
           call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
           drop
           block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228 (result i32)
            i32.const 1
            local.get $3
            i32.load8_u offset=8
            br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
            drop
            local.get $3
            i32.load offset=4
            i32.const 4096
            i32.gt_s
            if
             local.get $3
             i32.const 1
             i32.store8 offset=8
             i32.const 1
             br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2228
            end
            i32.const 0
           end
           i32.eqz
           if
            local.get $3
            i32.load
            i32.load offset=8
            local.get $4
            local.get $3
            i32.load offset=4
            i32.add
            i32.lt_s
            if (result i32)
             i32.const 1
            else
             local.get $4
             local.get $3
             i32.load offset=4
             i32.add
             i32.const 4096
             i32.gt_s
            end
            if
             local.get $3
             i32.const 1
             i32.store8 offset=8
            end
            local.get $3
            local.get $4
            local.get $3
            i32.load offset=4
            i32.add
            i32.store offset=4
           end
           br $while-continue|01
          end
          local.get $3
          local.get $2
          i32.const 7
          i32.and
          call $assembly/proto/protorune/__proto.SafeDecoder#skipType
          br $while-continue|01
         end
        end
        i32.const 0
        block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2238 (result i32)
         i32.const 1
         local.get $3
         i32.load8_u offset=8
         br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2238
         drop
         local.get $3
         i32.load offset=4
         i32.const 4096
         i32.gt_s
         if
          local.get $3
          i32.const 1
          i32.store8 offset=8
          i32.const 1
          br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2238
         end
         i32.const 0
        end
        br_if $__inlined_func$assembly/proto/protorune/protorune.Predicate.decodeDataView$2535
        drop
        local.get $6
       end
       i32.store offset=4
       block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280 (result i32)
        i32.const 1
        local.get $1
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
        drop
        local.get $1
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $1
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$22280
        end
        i32.const 0
       end
       i32.eqz
       if
        local.get $1
        i32.load
        i32.load offset=8
        local.get $5
        local.get $1
        i32.load offset=4
        i32.add
        i32.lt_s
        if (result i32)
         i32.const 1
        else
         local.get $5
         local.get $1
         i32.load offset=4
         i32.add
         i32.const 4096
         i32.gt_s
        end
        if
         local.get $1
         i32.const 1
         i32.store8 offset=8
        end
        local.get $1
        local.get $5
        local.get $1
        i32.load offset=4
        i32.add
        i32.store offset=4
       end
       br $while-continue|0
      end
      local.get $0
      local.get $1
      call $assembly/proto/protorune/__proto.Decoder#varint@override
      i64.store32 offset=8
      br $while-continue|0
     end
     local.get $0
     local.get $1
     call $assembly/proto/protorune/__proto.Decoder#varint@override
     i64.store32 offset=12
     br $while-continue|0
    end
    local.get $1
    local.get $2
    i32.const 7
    i32.and
    call $assembly/proto/protorune/__proto.SafeDecoder#skipType
    br $while-continue|0
   end
  end
  block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2242 (result i32)
   i32.const 1
   local.get $1
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2242
   drop
   local.get $1
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $1
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2242
   end
   i32.const 0
  end
  if
   i32.const 0
   return
  end
  local.get $0
 )
 (func $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get" (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  i32.const 15
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  i32.const 13
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  i32.const 16
  i32.shr_u
  local.get $0
  i32.xor
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2249"
   loop $while-continue|0
    local.get $0
    if
     local.get $0
     i32.load offset=8
     local.tee $2
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $0
      i32.load
      local.get $1
      i32.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2249"
     local.get $2
     i32.const -2
     i32.and
     local.set $0
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $0
  end
  local.get $0
  i32.eqz
  if
   i32.const 5520
   i32.const 5584
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
 )
 (func $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  i32.load
  local.get $1
  local.tee $3
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $1
  local.get $1
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $1
  local.get $1
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $1
  local.get $1
  i32.const 16
  i32.shr_u
  i32.xor
  local.tee $8
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2252"
   loop $while-continue|0
    local.get $1
    if
     local.get $1
     i32.load offset=8
     local.tee $4
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i32.load
      local.get $3
      i32.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2252"
     local.get $4
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   local.get $1
   local.get $2
   i32.store offset=4
  else
   local.get $0
   i32.load offset=12
   local.tee $1
   local.get $0
   i32.load offset=16
   i32.eq
   if
    local.get $0
    i32.load offset=20
    local.get $1
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    local.tee $6
    i32.const 1
    i32.add
    local.tee $1
    i32.const 2
    i32.shl
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $7
    local.get $1
    i32.const 3
    i32.shl
    i32.const 3
    i32.div_s
    local.tee $9
    i32.const 12
    i32.mul
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $4
    local.get $0
    i32.load offset=8
    local.tee $5
    local.get $0
    i32.load offset=16
    i32.const 12
    i32.mul
    i32.add
    local.set $10
    local.get $4
    local.set $1
    loop $while-continue|00
     local.get $5
     local.get $10
     i32.ne
     if
      local.get $5
      i32.load offset=8
      i32.const 1
      i32.and
      i32.eqz
      if
       local.get $1
       local.get $5
       i32.load
       local.tee $11
       i32.store
       local.get $1
       local.get $5
       i32.load offset=4
       i32.store offset=4
       local.get $1
       local.get $7
       local.get $11
       i32.const -1028477379
       i32.mul
       i32.const 374761397
       i32.add
       i32.const 17
       i32.rotl
       i32.const 668265263
       i32.mul
       local.tee $11
       i32.const 15
       i32.shr_u
       local.get $11
       i32.xor
       i32.const -2048144777
       i32.mul
       local.tee $11
       i32.const 13
       i32.shr_u
       local.get $11
       i32.xor
       i32.const -1028477379
       i32.mul
       local.tee $11
       i32.const 16
       i32.shr_u
       local.get $11
       i32.xor
       local.get $6
       i32.and
       i32.const 2
       i32.shl
       i32.add
       local.tee $11
       i32.load
       i32.store offset=8
       local.get $11
       local.get $1
       i32.store
       local.get $1
       i32.const 12
       i32.add
       local.set $1
      end
      local.get $5
      i32.const 12
      i32.add
      local.set $5
      br $while-continue|00
     end
    end
    local.get $0
    local.get $7
    i32.store
    local.get $0
    local.get $6
    i32.store offset=4
    local.get $0
    local.get $4
    i32.store offset=8
    local.get $0
    local.get $9
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=20
    i32.store offset=16
   end
   local.get $0
   i32.load offset=8
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $4
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $1
   local.get $4
   i32.const 12
   i32.mul
   i32.add
   local.tee $1
   local.get $3
   i32.store
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $1
   local.get $0
   i32.load
   local.get $8
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
  end
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 12
  i32.const 68
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  i32.const 24
  i32.const 69
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $1
  i32.const 3
  i32.store offset=4
  local.get $1
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  call $~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>#constructor
  i32.store offset=4
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor
  i32.store
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get" (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 5520
   i32.const 5584
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $0
  i32.load offset=8
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
  if
   block $assembly/indexer/BalanceSheet/BalanceSheet#getIndex|inlined.0 (result i32)
    local.get $0
    i32.load offset=8
    local.get $1
    local.get $1
    call $~lib/util/hash/HASH<~lib/string/String>
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
    if
     local.get $0
     i32.load offset=8
     local.get $1
     call $"~lib/map/Map<~lib/string/String,i32>#get"
     br $assembly/indexer/BalanceSheet/BalanceSheet#getIndex|inlined.0
    end
    i32.const -1
   end
   local.set $1
   local.get $0
   i32.load offset=4
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  else
   local.get $0
   i32.load
   i32.load offset=12
   local.set $7
   local.get $0
   i32.load offset=8
   local.tee $5
   local.get $1
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.tee $10
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
   local.tee $3
   if
    local.get $3
    local.get $7
    i32.store offset=4
   else
    local.get $5
    i32.load offset=12
    local.tee $3
    local.get $5
    i32.load offset=16
    i32.eq
    if
     local.get $5
     i32.load offset=20
     local.get $3
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      local.get $5
      i32.load offset=4
     else
      local.get $5
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.tee $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $9
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $11
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $4
     local.get $5
     i32.load offset=8
     local.tee $6
     local.get $5
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $12
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $6
      local.get $12
      i32.ne
      if
       local.get $6
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $6
        i32.load
        local.tee $13
        i32.store
        local.get $3
        local.get $6
        i32.load offset=4
        i32.store offset=4
        local.get $3
        local.get $9
        local.get $13
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $8
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $13
        i32.load
        i32.store offset=8
        local.get $13
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $6
       i32.const 12
       i32.add
       local.set $6
       br $while-continue|0
      end
     end
     local.get $5
     local.get $9
     i32.store
     local.get $5
     local.get $8
     i32.store offset=4
     local.get $5
     local.get $4
     i32.store offset=8
     local.get $5
     local.get $11
     i32.store offset=12
     local.get $5
     local.get $5
     i32.load offset=20
     i32.store offset=16
    end
    local.get $5
    i32.load offset=8
    local.set $3
    local.get $5
    local.get $5
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $3
    local.get $7
    i32.store offset=4
    local.get $5
    local.get $5
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    local.get $3
    local.get $5
    i32.load
    local.get $10
    local.get $5
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $4
    i32.load
    i32.store offset=8
    local.get $4
    local.get $3
    i32.store
   end
   local.get $0
   i32.load
   local.get $1
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
   local.get $0
   i32.load offset=4
   local.get $2
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
   drop
  end
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet.load (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 12928
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $2
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 12960
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $4
  i32.const 1
  global.set $~argumentsLength
  local.get $2
  i32.const 12192
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  local.set $0
  call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
  local.set $3
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $3
    local.get $2
    local.get $1
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
    local.get $4
    local.get $1
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
    call $assembly/utils/fromArrayBuffer
    call $assembly/indexer/BalanceSheet/BalanceSheet#set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#process~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $assembly/indexer/constants/index/OUTPOINT_TO_RUNES
  local.set $2
  local.get $0
  i32.load offset=4
  i32.load
  i32.const 32
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.tee $1
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  local.get $3
  call $~lib/metashrew-as/assembly/utils/utils/reverse
  local.get $0
  i32.load offset=8
  call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
  i32.load
  local.tee $0
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  memory.copy
  local.get $2
  local.get $1
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $assembly/indexer/BalanceSheet/BalanceSheet.load
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#get (param $0 i32) (param $1 i32) (result i32)
  block $assembly/indexer/BalanceSheet/BalanceSheet#getIndex|inlined.1 (result i32)
   local.get $0
   i32.load offset=8
   local.get $1
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#find"
   if
    local.get $0
    i32.load offset=8
    local.get $1
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    br $assembly/indexer/BalanceSheet/BalanceSheet#getIndex|inlined.1
   end
   i32.const -1
  end
  local.tee $1
  i32.const -1
  i32.ne
  if
   local.get $0
   i32.load offset=4
   local.get $1
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   return
  end
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  i64.const 0
  i64.store
  local.get $0
  i64.const 0
  i64.store offset=8
  local.get $0
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#increase (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i64)
  local.get $0
  local.get $1
  call $assembly/indexer/BalanceSheet/BalanceSheet#get
  local.set $4
  local.get $2
  i64.load
  local.tee $5
  local.get $4
  i64.load
  i64.add
  local.set $3
  local.get $3
  local.get $5
  i64.lt_u
  i64.extend_i32_u
  local.get $2
  i64.load offset=8
  local.get $4
  i64.load offset=8
  i64.add
  i64.add
  local.set $5
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $3
  i64.store
  local.get $2
  local.get $5
  i64.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/indexer/BalanceSheet/BalanceSheet#set
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#pipe (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load
   local.tee $3
   i32.load offset=12
   i32.lt_s
   if
    local.get $1
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.get $0
    i32.load offset=4
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    call $assembly/indexer/BalanceSheet/BalanceSheet#increase
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet.concat~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
  local.tee $2
  call $assembly/indexer/BalanceSheet/BalanceSheet#pipe
  local.get $1
  local.get $2
  call $assembly/indexer/BalanceSheet/BalanceSheet#pipe
  local.get $2
 )
 (func $assembly/utils/fieldToArrayBuffer~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $assembly/utils/toArrayBuffer
  local.tee $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
 )
 (func $assembly/indexer/RuneId/RuneId.fromBytes~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $2
  local.get $1
  call $~lib/array/Array<u8>#__set
  local.get $0
 )
 (func $~lib/array/Array<u8>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 0
  i32.const 19
  call $~lib/rt/__newArray
  local.tee $3
  i32.load offset=4
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  memory.copy
  local.get $3
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u64> (param $0 i32) (result i64)
  (local $1 i32)
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  local.tee $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.eqz
  if
   i64.const 0
   return
  end
  i32.const 8
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  memory.copy
  local.get $1
  i64.load
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#mint (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  local.get $0
  i32.load
  local.tee $2
  i32.load
  local.get $2
  i32.load offset=4
  i32.const -1635318407
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2270"
   loop $while-continue|0
    local.get $2
    if
     local.get $2
     i32.load offset=12
     local.tee $4
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $2
      i64.load
      i64.const 20
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2270"
     local.get $4
     i32.const -2
     i32.and
     local.set $2
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $2
  end
  local.get $2
  if (result i32)
   local.get $0
   i32.load
   i64.const 20
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 13072
   call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
   call $~lib/metashrew-as/assembly/utils/box/Box.concat
  else
   i32.const 0
  end
  local.tee $0
  if (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 32
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/typedarray/Uint8Array.wrap@varargs
   local.tee $5
   i32.load offset=8
   call $~lib/array/Array<u8>#constructor
   local.set $2
   local.get $5
   i32.load offset=4
   local.set $6
   i32.const 0
   local.set $0
   local.get $5
   i32.load offset=8
   local.set $4
   loop $for-loop|0
    local.get $0
    local.get $4
    i32.lt_s
    if
     local.get $0
     local.get $6
     i32.add
     i32.load8_u
     local.set $7
     i32.const 4
     global.set $~argumentsLength
     local.get $2
     local.get $7
     local.get $0
     local.get $5
     i32.const 13104
     i32.load
     call_indirect (type $4)
     local.set $2
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   block $__inlined_func$assembly/indexer/RuneId/RuneId.fromBytes$101
    block $folding-inner0
     local.get $2
     i32.const 0
     i32.const 16
     call $~lib/array/Array<u8>#slice
     local.tee $0
     i32.load offset=8
     local.tee $4
     if (result i32)
      local.get $4
      i32.const 15
      i32.and
     else
      i32.const 1
     end
     br_if $folding-inner0
     local.get $0
     i32.load offset=4
     local.tee $0
     i64.load
     local.set $3
     local.get $0
     i64.load offset=8
     local.set $8
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $0
     local.get $3
     i64.store
     local.get $0
     local.get $8
     i64.store offset=8
     local.get $0
     i64.load
     local.set $3
     i32.const 1
     global.set $~argumentsLength
     local.get $2
     i32.const 16
     i32.const 2147483647
     call $~lib/array/Array<u8>#slice
     local.tee $0
     i32.load offset=8
     local.tee $2
     if (result i32)
      local.get $2
      i32.const 15
      i32.and
     else
      i32.const 1
     end
     br_if $folding-inner0
     local.get $0
     i32.load offset=4
     local.tee $0
     i64.load
     local.set $8
     local.get $0
     i64.load offset=8
     local.set $9
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $0
     local.get $8
     i64.store
     local.get $0
     local.get $9
     i64.store offset=8
     local.get $3
     local.get $0
     i64.load
     i32.wrap_i64
     call $assembly/indexer/RuneId/RuneId#constructor
     local.set $0
     br $__inlined_func$assembly/indexer/RuneId/RuneId.fromBytes$101
    end
    i32.const 0
    i32.const 8160
    i32.const 132
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i64.load
   local.set $3
   local.get $0
   i64.load32_u offset=8
   local.set $8
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $0
   local.get $3
   i64.store
   local.get $0
   local.get $8
   i64.store offset=8
   local.get $0
   call $assembly/utils/toArrayBuffer
   local.set $0
   global.get $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
   local.get $0
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
   local.set $2
   global.get $assembly/indexer/constants/index/MINTS_REMAINING
   local.get $2
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
   call $assembly/utils/fromArrayBuffer
   local.tee $4
   i64.load
   local.get $4
   i64.load offset=8
   i64.or
   i64.const 0
   i64.ne
   if
    global.get $assembly/indexer/constants/index/HEIGHTSTART
    local.get $2
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u64>
    local.set $8
    global.get $assembly/indexer/constants/index/HEIGHTEND
    local.get $2
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u64>
    local.set $9
    global.get $assembly/indexer/constants/index/OFFSETSTART
    local.get $2
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u64>
    local.set $3
    global.get $assembly/indexer/constants/index/OFFSETEND
    local.get $2
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u64>
    local.set $10
    global.get $assembly/indexer/constants/index/RUNE_ID_TO_HEIGHT
    local.get $0
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
    local.set $5
    local.get $9
    i64.eqz
    local.get $9
    i64.const 840000
    i64.gt_u
    i32.or
    local.get $8
    i64.eqz
    local.get $8
    i64.const 840000
    i64.le_u
    i32.or
    i32.and
    if (result i32)
     local.get $3
     i64.eqz
     local.get $3
     local.get $5
     i64.extend_i32_u
     i64.add
     i64.const 840000
     i64.le_u
     i32.or
    else
     i32.const 0
    end
    if (result i32)
     local.get $10
     i64.eqz
     local.get $5
     i64.extend_i32_u
     local.get $10
     i64.add
     i64.const 840000
     i64.gt_u
     i32.or
    else
     i32.const 0
    end
    if
     global.get $assembly/indexer/constants/index/MINTS_REMAINING
     local.get $2
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
     local.set $5
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $6
     i64.const 1
     i64.store
     local.get $6
     i64.const 0
     i64.store offset=8
     local.get $4
     i64.load
     local.tee $3
     local.get $6
     i64.load
     i64.sub
     local.set $8
     local.get $4
     i64.load offset=8
     local.get $6
     i64.load offset=8
     i64.sub
     local.get $3
     local.get $8
     i64.lt_u
     i64.extend_i32_u
     i64.sub
     local.set $3
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $4
     local.get $8
     i64.store
     local.get $4
     local.get $3
     i64.store offset=8
     local.get $4
     call $assembly/utils/toArrayBuffer
     local.set $4
     local.get $5
     call $~lib/string/String.UTF8.decode
     local.set $6
     global.get $~lib/metashrew-as/assembly/indexer/index/_updates
     local.get $6
     local.get $4
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
     local.get $6
     local.get $5
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     local.get $1
     local.get $0
     global.get $assembly/indexer/constants/index/AMOUNT
     local.get $2
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
     call $assembly/utils/fromArrayBuffer
     call $assembly/indexer/BalanceSheet/BalanceSheet#increase
    end
   end
  end
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#getFlag (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  local.get $0
  i32.load
  local.tee $2
  i32.load
  local.get $2
  i32.load offset=4
  i32.const -368796614
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2284"
   loop $while-continue|0
    local.get $2
    if
     local.get $2
     i32.load offset=12
     local.tee $3
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $2
      i64.load
      i64.const 2
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2284"
     local.get $3
     i32.const -2
     i32.and
     local.set $2
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $2
  end
  local.get $2
  i32.eqz
  if
   i32.const 0
   return
  end
  block $__inlined_func$assembly/utils/fieldToU128$105
   local.get $0
   i32.load
   i64.const 2
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   local.tee $0
   i32.load offset=12
   i32.eqz
   if
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $0
    i64.const 0
    i64.store
    local.get $0
    i64.const 0
    i64.store offset=8
    br $__inlined_func$assembly/utils/fieldToU128$105
   end
   local.get $0
   i32.const 0
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   local.set $0
  end
  local.get $1
  i32.wrap_i64
  i32.const 127
  i32.and
  i64.extend_i32_s
  local.tee $4
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.set $5
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $2
  i64.const 1
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  i64.load
  local.tee $6
  local.get $4
  i64.const 63
  i64.and
  local.tee $7
  i64.shl
  local.tee $1
  local.get $5
  i64.const -1
  i64.xor
  i64.and
  local.get $4
  local.get $4
  i64.const 127
  i64.add
  i64.or
  i64.const 64
  i64.and
  i64.const 6
  i64.shr_u
  i64.const 1
  i64.sub
  local.get $6
  i64.const 64
  local.get $7
  i64.sub
  i64.shr_u
  i64.and
  local.get $2
  i64.load offset=8
  local.get $7
  i64.shl
  i64.or
  local.get $5
  i64.and
  i64.or
  local.set $4
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $1
  local.get $5
  i64.and
  i64.store
  local.get $2
  local.get $4
  i64.store offset=8
  local.get $0
  i64.load
  local.get $2
  i64.load
  i64.and
  local.set $1
  local.get $0
  i64.load offset=8
  local.get $2
  i64.load offset=8
  i64.and
  local.set $4
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $1
  i64.store
  local.get $0
  local.get $4
  i64.store offset=8
  local.get $0
  i64.load
  local.get $0
  i64.load offset=8
  i64.or
  i64.const 0
  i64.ne
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#etch (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  i64.const 0
  call $assembly/indexer/RunestoneMessage/RunestoneMessage#getFlag
  i32.eqz
  if
   return
  end
  local.get $0
  i32.load
  local.tee $4
  i32.load
  local.get $4
  i32.load offset=4
  i32.const -134288509
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $4
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2285"
   loop $while-continue|0
    local.get $4
    if
     local.get $4
     i32.load offset=12
     local.tee $6
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $4
      i64.load
      i64.const 4
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2285"
     local.get $6
     i32.const -2
     i32.and
     local.set $4
     br $while-continue|0
    end
   end
   i32.const 0
   local.set $4
  end
  local.get $4
  if (result i32)
   local.get $0
   i32.load
   i64.const 4
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 13072
   call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
   call $~lib/metashrew-as/assembly/utils/box/Box.concat
  else
   i32.const 1
   i32.const 2
   i32.const 40
   call $~lib/rt/__newArray
   local.tee $4
   i32.load offset=4
   drop
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $6
   i64.const 840000
   i64.store
   local.get $6
   i64.const 0
   i64.store offset=8
   local.get $6
   i64.load offset=8
   i64.const 32
   i64.shl
   local.get $6
   i64.load
   local.tee $5
   i64.const 32
   i64.shr_u
   i64.or
   local.set $7
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $6
   local.get $5
   i64.const 32
   i64.shl
   i64.store
   local.get $6
   local.get $7
   i64.store offset=8
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $8
   local.get $1
   i64.extend_i32_u
   i64.store
   local.get $8
   i64.const 0
   i64.store offset=8
   local.get $6
   i64.load
   local.get $8
   i64.load
   i64.or
   local.set $5
   local.get $6
   i64.load offset=8
   local.get $8
   i64.load offset=8
   i64.or
   local.set $7
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $6
   local.get $5
   i64.store
   local.get $6
   local.get $7
   i64.store offset=8
   global.get $assembly/indexer/constants/index/RESERVED_NAME
   local.tee $8
   i64.load
   local.tee $5
   local.get $6
   i64.load
   i64.add
   local.tee $7
   local.get $5
   i64.lt_u
   i64.extend_i32_u
   local.get $8
   i64.load offset=8
   local.get $6
   i64.load offset=8
   i64.add
   i64.add
   local.set $5
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.tee $6
   local.get $7
   i64.store
   local.get $6
   local.get $5
   i64.store offset=8
   local.get $4
   i32.const 0
   local.get $6
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
   local.get $4
   i32.const 13072
   call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
   call $~lib/metashrew-as/assembly/utils/box/Box.concat
  end
  local.set $6
  global.get $assembly/indexer/constants/index/MINIMUM_NAME
  local.set $4
  local.get $6
  call $assembly/utils/fromArrayBuffer
  local.tee $8
  i64.load offset=8
  local.tee $5
  local.get $4
  i64.load offset=8
  local.tee $7
  i64.eq
  if (result i32)
   local.get $8
   i64.load
   local.get $4
   i64.load
   i64.lt_u
  else
   local.get $5
   local.get $7
   i64.lt_u
  end
  if (result i32)
   i32.const 0
  else
   local.get $6
   call $assembly/utils/fromArrayBuffer
   local.tee $4
   i64.load offset=8
   local.tee $5
   global.get $assembly/indexer/constants/index/RESERVED_NAME
   local.tee $8
   i64.load offset=8
   local.tee $7
   i64.eq
   if (result i32)
    local.get $4
    i64.load
    local.get $8
    i64.load
    i64.lt_u
   else
    local.get $5
    local.get $7
    i64.lt_u
   end
  end
  if (result i32)
   local.get $3
   i32.const 840000
   call $assembly/indexer/Indexer/Index.findCommitment
  else
   i32.const 0
  end
  i32.eqz
  if
   return
  end
  global.get $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID
  local.get $6
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  i32.const 20
  i32.sub
  i32.load offset=16
  if
   return
  end
  i64.const 840000
  local.get $1
  call $assembly/indexer/RuneId/RuneId#constructor
  local.tee $1
  i64.load
  local.set $5
  local.get $1
  i64.load32_u offset=8
  local.set $7
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $1
  local.get $5
  i64.store
  local.get $1
  local.get $7
  i64.store offset=8
  local.get $1
  call $assembly/utils/toArrayBuffer
  local.set $3
  global.get $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $1
  call $~lib/string/String.UTF8.decode
  local.set $4
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $4
  local.get $6
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $4
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID
  local.get $6
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.tee $1
  call $~lib/string/String.UTF8.decode
  local.set $4
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $4
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $4
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/RUNE_ID_TO_HEIGHT
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $1
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i64.const 840000
  i64.store32
  local.get $1
  call $~lib/string/String.UTF8.decode
  local.set $8
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $8
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $8
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  local.get $0
  i32.load
  local.tee $1
  i32.load
  local.get $1
  i32.load offset=4
  i32.const 149775153
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2288"
   loop $while-continue|03
    local.get $1
    if
     local.get $1
     i32.load offset=12
     local.tee $4
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i64.load
      i64.const 1
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2288"
     local.get $4
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|03
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   global.get $assembly/indexer/constants/index/DIVISIBILITY
   local.get $6
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   local.set $1
   local.get $0
   i32.load
   i64.const 1
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 0
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   i64.load
   i32.wrap_i64
   local.set $4
   i32.const 1
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $8
   local.get $4
   i32.store8
   local.get $1
   call $~lib/string/String.UTF8.decode
   local.set $4
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $4
   local.get $8
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
   local.get $4
   local.get $1
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  end
  local.get $0
  i32.load
  local.tee $1
  i32.load
  local.get $1
  i32.load offset=4
  i32.const -1233072437
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2290"
   loop $while-continue|04
    local.get $1
    if
     local.get $1
     i32.load offset=12
     local.tee $4
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i64.load
      i64.const 6
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2290"
     local.get $4
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|04
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   block $__inlined_func$assembly/utils/fieldToU128$115
    local.get $0
    i32.load
    i64.const 6
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    local.tee $1
    i32.load offset=12
    i32.eqz
    if
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $1
     i64.const 0
     i64.store
     local.get $1
     i64.const 0
     i64.store offset=8
     br $__inlined_func$assembly/utils/fieldToU128$115
    end
    local.get $1
    i32.const 0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.set $1
   end
   i32.const 1
   i32.const 2
   i32.const 50
   call $~lib/rt/__newArray
   local.tee $8
   i32.load offset=4
   drop
   local.get $8
   i32.const 0
   local.get $3
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
   i32.const 1
   i32.const 2
   i32.const 40
   call $~lib/rt/__newArray
   local.tee $4
   i32.load offset=4
   drop
   local.get $4
   i32.const 0
   local.get $1
   local.tee $3
   call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
   call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
   local.set $9
   i32.const 0
   local.set $1
   loop $for-loop|0
    local.get $1
    local.get $8
    i32.load offset=12
    i32.lt_s
    if
     local.get $9
     local.get $8
     local.get $1
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.get $4
     local.get $1
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     call $assembly/indexer/BalanceSheet/BalanceSheet#set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $9
   local.get $2
   call $assembly/indexer/BalanceSheet/BalanceSheet#pipe
   global.get $assembly/indexer/constants/index/PREMINE
   local.get $6
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   local.set $1
   local.get $3
   call $assembly/utils/toArrayBuffer
   local.set $2
   local.get $1
   call $~lib/string/String.UTF8.decode
   local.set $3
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $3
   local.get $2
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
   local.get $3
   local.get $1
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  end
  local.get $0
  i64.const 1
  call $assembly/indexer/RunestoneMessage/RunestoneMessage#getFlag
  if
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const 1165796466
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2292"
    loop $while-continue|05
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 10
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2292"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|05
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/AMOUNT
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $2
    block $__inlined_func$assembly/utils/fieldToU128$118
     local.get $0
     i32.load
     i64.const 10
     call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
     local.tee $1
     i32.load offset=12
     i32.eqz
     if
      i32.const 16
      i32.const 15
      call $~lib/rt/stub/__new
      local.tee $1
      i64.const 0
      i64.store
      local.get $1
      i64.const 0
      i64.store offset=8
      br $__inlined_func$assembly/utils/fieldToU128$118
     end
     local.get $1
     i32.const 0
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $1
    end
    local.get $1
    call $assembly/utils/toArrayBuffer
    local.set $1
    local.get $2
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const 825563442
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2293"
    loop $while-continue|06
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 8
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2293"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|06
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/CAP
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $2
    block $__inlined_func$assembly/utils/fieldToU128$121
     local.get $0
     i32.load
     i64.const 8
     call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
     local.tee $1
     i32.load offset=12
     i32.eqz
     if
      i32.const 16
      i32.const 15
      call $~lib/rt/stub/__new
      local.tee $1
      i64.const 0
      i64.store
      local.get $1
      i64.const 0
      i64.store offset=8
      br $__inlined_func$assembly/utils/fieldToU128$121
     end
     local.get $1
     i32.const 0
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $1
    end
    local.get $1
    call $assembly/utils/toArrayBuffer
    local.set $1
    local.get $2
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $assembly/indexer/constants/index/MINTS_REMAINING
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $1
    local.get $0
    i32.load
    i64.const 8
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    i32.const 13072
    call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#map<~lib/metashrew-as/assembly/utils/box/Box>
    call $~lib/metashrew-as/assembly/utils/box/Box.concat
    local.set $2
    local.get $1
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const -501640975
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2294"
    loop $while-continue|07
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 12
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2294"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|07
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/HEIGHTSTART
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $1
    local.get $0
    i32.load
    i64.const 12
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    i32.const 0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i64.load
    local.set $5
    i32.const 8
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $2
    local.get $5
    i64.store
    local.get $1
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const -1725757104
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2296"
    loop $while-continue|08
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 14
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2296"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|08
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/HEIGHTEND
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $1
    local.get $0
    i32.load
    i64.const 14
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    i32.const 0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i64.load
    local.set $5
    i32.const 8
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $2
    local.get $5
    i64.store
    local.get $1
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const 620430493
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2298"
    loop $while-continue|09
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 16
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2298"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|09
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/OFFSETSTART
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $1
    local.get $0
    i32.load
    i64.const 16
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    i32.const 0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i64.load
    local.set $5
    i32.const 8
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $2
    local.get $5
    i64.store
    local.get $1
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
   local.get $0
   i32.load
   local.tee $1
   i32.load
   local.get $1
   i32.load offset=4
   i32.const -1530175746
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2300"
    loop $while-continue|010
     local.get $1
     if
      local.get $1
      i32.load offset=12
      local.tee $2
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       i64.load
       i64.const 18
       i64.eq
      end
      br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2300"
      local.get $2
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|010
     end
    end
    i32.const 0
    local.set $1
   end
   local.get $1
   if
    global.get $assembly/indexer/constants/index/OFFSETEND
    local.get $6
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.set $1
    local.get $0
    i32.load
    i64.const 18
    call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
    i32.const 0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i64.load
    local.set $5
    i32.const 8
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $2
    local.get $5
    i64.store
    local.get $1
    call $~lib/string/String.UTF8.decode
    local.set $3
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $3
    local.get $2
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $3
    local.get $1
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   end
  end
  local.get $0
  i32.load
  local.tee $1
  i32.load
  local.get $1
  i32.load offset=4
  i32.const 1629217451
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2302"
   loop $while-continue|011
    local.get $1
    if
     local.get $1
     i32.load offset=12
     local.tee $2
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i64.load
      i64.const 3
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2302"
     local.get $2
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|011
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   global.get $assembly/indexer/constants/index/SPACERS
   local.get $6
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   local.set $1
   local.get $0
   i32.load
   i64.const 3
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 0
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   i64.load
   i32.wrap_i64
   local.set $2
   i32.const 4
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $3
   local.get $2
   i32.store
   local.get $1
   call $~lib/string/String.UTF8.decode
   local.set $2
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $2
   local.get $3
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
   local.get $2
   local.get $1
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  end
  local.get $0
  i32.load
  local.tee $1
  i32.load
  local.get $1
  i32.load offset=4
  i32.const 40084857
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2304"
   loop $while-continue|012
    local.get $1
    if
     local.get $1
     i32.load offset=12
     local.tee $2
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i64.load
      i64.const 5
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2304"
     local.get $2
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|012
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   global.get $assembly/indexer/constants/index/SYMBOL
   local.get $6
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   local.set $1
   local.get $0
   i32.load
   i64.const 5
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 0
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   i64.load
   i32.wrap_i64
   local.set $0
   i32.const 1
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $2
   local.get $0
   i32.store8
   local.get $1
   call $~lib/string/String.UTF8.decode
   local.set $0
   global.get $~lib/metashrew-as/assembly/indexer/index/_updates
   local.get $0
   local.get $2
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
   global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
   local.get $0
   local.get $1
   call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  end
  global.get $assembly/indexer/constants/index/ETCHINGS
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
  local.tee $0
  call $~lib/string/String.UTF8.decode
  local.set $1
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $1
  local.get $6
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $1
  local.get $0
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
 )
 (func $assembly/indexer/Edict/Edict#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  i32.const 16
  i32.const 76
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.store offset=12
  local.get $4
  local.get $0
  i32.store
  local.get $4
  local.get $1
  i32.store offset=4
  local.get $4
  local.get $2
  i32.store offset=8
  local.get $4
  local.get $3
  i32.store offset=12
  local.get $4
 )
 (func $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 3344
   i32.const 3408
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.eqz
  if
   i32.const 7440
   i32.const 3408
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $assembly/utils/fromU128Pair (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  local.get $0
  i64.load
  local.set $2
  local.get $0
  i64.load offset=8
  local.set $3
  local.get $1
  i64.load
  local.set $4
  local.get $1
  i64.load offset=8
  local.set $5
  i32.const 32
  i32.const 18
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $2
  i64.store
  local.get $0
  local.get $3
  i64.store offset=8
  local.get $0
  local.get $4
  i64.store offset=16
  local.get $0
  local.get $5
  i64.store offset=24
  local.get $0
 )
 (func $assembly/indexer/Edict/Edict.fromDeltaSeries~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  local.get $0
  i32.const 0
  call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
  local.get $0
  i32.const 1
  call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
  call $assembly/utils/fromU128Pair
  local.set $0
  local.get $1
  i32.const 0
  call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
  local.get $1
  i32.const 1
  call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
  call $assembly/utils/fromU128Pair
  local.set $1
  local.get $0
  i64.load offset=16
  local.set $2
  local.get $1
  i64.load offset=16
  local.set $3
  local.get $0
  i64.load offset=8
  local.set $4
  local.get $1
  i64.load offset=8
  local.set $5
  local.get $0
  i64.load offset=24
  local.tee $6
  local.get $1
  i64.load offset=24
  local.tee $7
  i64.eq
  if (result i32)
   local.get $2
   local.get $3
   i64.eq
   if (result i32)
    local.get $4
    local.get $5
    i64.eq
    if (result i32)
     local.get $0
     i64.load
     local.get $1
     i64.load
     i64.lt_u
    else
     local.get $4
     local.get $5
     i64.lt_u
    end
   else
    local.get $2
    local.get $3
    i64.lt_u
   end
  else
   local.get $6
   local.get $7
   i64.lt_u
  end
  if (result i32)
   i32.const -1
  else
   local.get $0
   i64.load
   local.get $1
   i64.load
   i64.eq
   if (result i32)
    local.get $0
    i64.load offset=8
    local.get $1
    i64.load offset=8
    i64.eq
   else
    i32.const 0
   end
   if (result i32)
    local.get $0
    i64.load offset=16
    local.get $1
    i64.load offset=16
    i64.eq
   else
    i32.const 0
   end
   if (result i32)
    local.get $0
    i64.load offset=24
    local.get $1
    i64.load offset=24
    i64.eq
   else
    i32.const 0
   end
   i32.eqz
  end
 )
 (func $~lib/util/sort/insertionSort<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $4
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $4
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $2
   local.get $6
   i32.ge_s
   if
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.tee $4
    i32.load
    local.set $3
    local.get $4
    i32.load offset=4
    local.tee $5
    local.set $4
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $5
    i32.const 13136
    i32.load
    call_indirect (type $1)
    i32.const 0
    i32.le_s
    if
     local.get $3
     local.set $4
     local.get $5
     local.set $3
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $5
    loop $while-continue|1
     local.get $1
     local.get $5
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       local.tee $8
       i32.load
       local.set $7
       i32.const 2
       global.set $~argumentsLength
       local.get $7
       local.get $3
       i32.const 13136
       i32.load
       call_indirect (type $1)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $8
       local.get $7
       i32.store offset=8
       local.get $5
       i32.const 1
       i32.sub
       local.set $5
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $5
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       local.tee $3
       i32.load
       local.set $7
       i32.const 2
       global.set $~argumentsLength
       local.get $7
       local.get $4
       i32.const 13136
       i32.load
       call_indirect (type $1)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $3
       local.get $7
       i32.store offset=4
       local.get $5
       i32.const 1
       i32.sub
       local.set $5
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $4
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $4
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $5
  i32.const 2
  global.set $~argumentsLength
  local.get $4
  local.get $5
  i32.const 13136
  i32.load
  call_indirect (type $1)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load offset=4
     local.set $5
     local.get $4
     i32.load
     local.set $4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $4
     i32.const 13136
     i32.load
     call_indirect (type $1)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $while-continue|0
    end
   end
   local.get $3
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load
     local.set $5
     local.get $4
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $4
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $3
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     i32.load offset=4
     local.set $4
     local.get $1
     i32.load
     local.set $1
     i32.const 2
     global.set $~argumentsLength
     local.get $4
     local.get $1
     i32.const 13136
     i32.load
     call_indirect (type $1)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $while-continue|2
    end
   end
  end
  local.get $3
 )
 (func $~lib/util/sort/mergeRuns<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $5
  local.get $3
  i32.add
  local.set $6
  local.get $5
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $7
    local.get $4
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.gt_s
   if
    local.get $4
    local.get $6
    local.get $5
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $7
    i32.const 2
    global.set $~argumentsLength
    local.get $6
    local.get $7
    i32.const 13136
    i32.load
    call_indirect (type $1)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $6
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/rt/stub/__free (param $0 i32)
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   i32.const 1664
   i32.const 70
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $0
  local.get $0
  i32.const 4
  i32.sub
  local.tee $0
  i32.load
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/SORT<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load
     local.set $1
     local.get $0
     i32.load offset=4
     local.set $2
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $2
     local.get $1
     local.get $1
     local.get $2
     i32.const 13136
     i32.load
     call_indirect (type $1)
     i32.const 0
     i32.gt_s
     local.tee $3
     select
     i32.store
     local.get $0
     i32.load offset=8
     local.set $4
     i32.const 2
     global.set $~argumentsLength
     local.get $1
     local.get $2
     local.get $3
     select
     local.tee $1
     local.get $4
     i32.const 13136
     i32.load
     call_indirect (type $1)
     i32.const 0
     i32.gt_s
     local.set $2
     local.get $0
     local.get $4
     local.get $1
     local.get $2
     select
     i32.store offset=4
     local.get $0
     local.get $1
     local.get $4
     local.get $2
     select
     i32.store offset=8
    end
    local.get $0
    i32.load
    local.set $1
    local.get $0
    i32.load offset=4
    local.set $2
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $2
    local.get $1
    local.get $1
    local.get $2
    i32.const 13136
    i32.load
    call_indirect (type $1)
    i32.const 0
    i32.gt_s
    local.tee $3
    select
    i32.store
    local.get $0
    local.get $1
    local.get $2
    local.get $3
    select
    i32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   call $~lib/util/sort/insertionSort<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $5
  i32.const 2
  i32.shl
  local.tee $6
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $9
  loop $for-loop|1
   local.get $4
   local.get $5
   i32.lt_u
   if
    local.get $9
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $11
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $8
  call $~lib/util/sort/extendRunRight<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
  local.tee $4
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   i32.const 31
   local.get $8
   local.get $8
   i32.const 31
   i32.ge_s
   select
   local.tee $4
   local.get $1
   call $~lib/util/sort/insertionSort<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
  end
  local.get $6
  local.get $9
  i32.add
  local.set $10
  loop $while-continue|2
   local.get $4
   local.get $8
   i32.lt_s
   if
    local.get $0
    local.get $4
    i32.const 1
    i32.add
    local.tee $5
    local.get $8
    call $~lib/util/sort/extendRunRight<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
    local.tee $1
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.tee $6
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $5
     local.get $8
     local.get $5
     i32.const 31
     i32.add
     local.tee $1
     local.get $1
     local.get $8
     i32.gt_s
     select
     local.tee $1
     local.get $6
     call $~lib/util/sort/insertionSort<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
    end
    local.get $2
    local.get $5
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $8
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $12
    i64.div_u
    local.get $1
    local.get $5
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $12
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $6
    loop $for-loop|3
     local.get $3
     local.get $6
     i32.gt_u
     if
      local.get $3
      i32.const 2
      i32.shl
      local.tee $13
      local.get $9
      i32.add
      local.tee $14
      i32.load
      local.tee $7
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $7
       local.get $10
       local.get $13
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $4
       local.get $11
       call $~lib/util/sort/mergeRuns<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
       local.get $14
       i32.const -1
       i32.store
       local.get $7
       local.set $2
      end
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $for-loop|3
     end
    end
    local.get $9
    local.get $6
    i32.const 2
    i32.shl
    local.tee $3
    i32.add
    local.get $2
    i32.store
    local.get $3
    local.get $10
    i32.add
    local.get $4
    i32.store
    local.get $5
    local.set $2
    local.get $1
    local.set $4
    local.get $6
    local.set $3
    br $while-continue|2
   end
  end
  loop $for-loop|4
   local.get $3
   if
    local.get $9
    local.get $3
    i32.const 2
    i32.shl
    local.tee $1
    i32.add
    i32.load
    local.tee $2
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $2
     local.get $1
     local.get $10
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $8
     local.get $11
     call $~lib/util/sort/mergeRuns<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
    end
    local.get $3
    i32.const 1
    i32.sub
    local.set $3
    br $for-loop|4
   end
  end
  local.get $11
  call $~lib/rt/stub/__free
  local.get $9
  call $~lib/rt/stub/__free
 )
 (func $assembly/indexer/BalanceSheet/BalanceSheet#save (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  i32.const 12928
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $4
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  i32.const 12960
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $1
  loop $for-loop|0
   local.get $3
   local.get $0
   i32.load
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    i32.load offset=4
    local.get $3
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.set $5
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $6
    i64.const 0
    i64.store
    local.get $6
    i64.const 0
    i64.store offset=8
    local.get $5
    i64.load offset=8
    local.get $6
    i64.load offset=8
    i64.eq
    if (result i32)
     local.get $5
     i64.load
     local.get $6
     i64.load
     i64.eq
    else
     i32.const 0
    end
    local.get $2
    i32.or
    i32.eqz
    if
     local.get $0
     i32.load
     local.get $3
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $5
     local.get $4
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
     local.tee $6
     call $~lib/string/String.UTF8.decode
     local.set $7
     global.get $~lib/metashrew-as/assembly/indexer/index/_updates
     local.get $7
     local.get $5
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
     local.get $7
     local.get $6
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     local.get $0
     i32.load offset=4
     local.get $3
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $5
     i32.const 16
     call $~lib/array/Array<u8>#constructor
     local.tee $6
     i32.load offset=4
     local.tee $7
     local.get $5
     i64.load
     i64.store
     local.get $7
     local.get $5
     i64.load offset=8
     i64.store offset=8
     local.get $6
     i32.load
     local.set $5
     local.get $1
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
     local.tee $6
     call $~lib/string/String.UTF8.decode
     local.set $7
     global.get $~lib/metashrew-as/assembly/indexer/index/_updates
     local.get $7
     local.get $5
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
     global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
     local.get $7
     local.get $6
     call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#processEdicts (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i64)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  local.get $0
  i32.load offset=4
  local.set $10
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $4
  i64.const 0
  i64.store
  local.get $4
  i64.const 0
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $7
  i64.const 0
  i64.store
  local.get $7
  i64.const 0
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $11
  i64.const 0
  i64.store
  local.get $11
  i64.const 0
  i64.store offset=8
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $12
  i64.const 0
  i64.store
  local.get $12
  i64.const 0
  i64.store offset=8
  local.get $4
  local.get $7
  local.get $11
  local.get $12
  call $assembly/indexer/Edict/Edict#constructor
  local.set $7
  i32.const 16
  i32.const 77
  call $~lib/rt/stub/__new
  local.tee $11
  i32.const 0
  i32.store
  local.get $11
  i32.const 0
  i32.store offset=4
  local.get $11
  i32.const 0
  i32.store offset=8
  local.get $11
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.const 32
  memory.fill
  local.get $11
  local.get $4
  i32.store
  local.get $11
  local.get $4
  i32.store offset=4
  local.get $11
  i32.const 32
  i32.store offset=8
  local.get $11
  i32.const 0
  i32.store offset=12
  local.get $10
  i32.load offset=4
  local.get $10
  i32.load offset=12
  call $~lib/util/sort/SORT<~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>>
  loop $for-loop|0
   local.get $6
   local.get $10
   i32.load offset=12
   i32.lt_s
   if
    local.get $10
    local.get $6
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.set $12
    local.get $7
    i32.load
    local.set $4
    local.get $12
    i32.const 0
    call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
    local.tee $13
    i64.load
    local.get $4
    i64.load
    local.tee $5
    i64.add
    local.set $14
    local.get $5
    local.get $14
    i64.gt_u
    i64.extend_i32_u
    local.get $4
    i64.load offset=8
    local.get $13
    i64.load offset=8
    i64.add
    i64.add
    local.set $5
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $13
    local.get $14
    i64.store
    local.get $13
    local.get $5
    i64.store offset=8
    local.get $12
    i32.const 0
    call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
    local.tee $4
    i64.load
    local.get $4
    i64.load offset=8
    i64.or
    i64.eqz
    if
     local.get $12
     i32.const 1
     call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
     local.set $4
    else
     local.get $7
     i32.load offset=4
     local.set $4
     local.get $12
     i32.const 1
     call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
     local.tee $7
     i64.load
     local.get $4
     i64.load
     local.tee $5
     i64.add
     local.set $14
     local.get $5
     local.get $14
     i64.gt_u
     i64.extend_i32_u
     local.get $4
     i64.load offset=8
     local.get $7
     i64.load offset=8
     i64.add
     i64.add
     local.set $5
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $4
     local.get $14
     i64.store
     local.get $4
     local.get $5
     i64.store offset=8
    end
    local.get $11
    local.get $13
    local.get $4
    local.get $12
    i32.const 2
    call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
    local.get $12
    i32.const 3
    call $~lib/staticarray/StaticArray<~lib/as-bignum/assembly/integer/u128/u128>#__get
    call $assembly/indexer/Edict/Edict#constructor
    local.tee $7
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
    drop
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  loop $for-loop|00
   local.get $8
   local.get $11
   i32.load offset=12
   i32.lt_s
   if
    local.get $11
    local.get $8
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.tee $6
    i32.load offset=12
    i64.load
    i32.wrap_i64
    local.set $12
    local.get $6
    i32.load
    i64.load
    local.get $6
    i32.load offset=4
    i64.load
    i32.wrap_i64
    call $assembly/indexer/RuneId/RuneId#constructor
    local.tee $4
    i64.load
    local.set $5
    local.get $4
    i64.load32_u offset=8
    local.set $14
    i32.const 16
    i32.const 15
    call $~lib/rt/stub/__new
    local.tee $4
    local.get $5
    i64.store
    local.get $4
    local.get $14
    i64.store offset=8
    local.get $4
    call $assembly/utils/toArrayBuffer
    local.set $10
    local.get $1
    i32.load
    local.get $1
    i32.load offset=4
    local.get $12
    i32.const -1028477379
    i32.mul
    i32.const 374761397
    i32.add
    i32.const 17
    i32.rotl
    i32.const 668265263
    i32.mul
    local.tee $4
    local.get $4
    i32.const 15
    i32.shr_u
    i32.xor
    i32.const -2048144777
    i32.mul
    local.tee $4
    local.get $4
    i32.const 13
    i32.shr_u
    i32.xor
    i32.const -1028477379
    i32.mul
    local.tee $4
    local.get $4
    i32.const 16
    i32.shr_u
    i32.xor
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $4
    block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2248"
     loop $while-continue|0
      local.get $4
      if
       local.get $4
       i32.load offset=8
       local.tee $7
       i32.const 1
       i32.and
       if (result i32)
        i32.const 0
       else
        local.get $4
        i32.load
        local.get $12
        i32.eq
       end
       br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2248"
       local.get $7
       i32.const -2
       i32.and
       local.set $4
       br $while-continue|0
      end
     end
     i32.const 0
     local.set $4
    end
    local.get $4
    if
     local.get $1
     local.get $12
     call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get"
     local.set $7
    else
     local.get $1
     local.get $12
     call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
     local.tee $7
     call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#set"
    end
    local.get $6
    i32.load offset=8
    local.set $4
    local.get $2
    local.get $10
    call $assembly/indexer/BalanceSheet/BalanceSheet#get
    local.set $6
    local.get $6
    local.get $4
    local.get $4
    i64.load offset=8
    local.tee $5
    local.get $6
    i64.load offset=8
    local.tee $14
    i64.eq
    if (result i32)
     local.get $4
     i64.load
     local.get $6
     i64.load
     i64.gt_u
    else
     local.get $5
     local.get $14
     i64.gt_u
    end
    select
    local.set $4
    i32.const 1
    local.get $9
    local.get $2
    local.get $10
    call $assembly/indexer/BalanceSheet/BalanceSheet#get
    local.tee $6
    i64.load offset=8
    local.tee $5
    local.get $4
    i64.load offset=8
    local.tee $14
    i64.eq
    if (result i32)
     local.get $6
     i64.load
     local.get $4
     i64.load
     i64.lt_u
    else
     local.get $5
     local.get $14
     i64.lt_u
    end
    if (result i32)
     i32.const 0
    else
     local.get $6
     i64.load
     local.tee $5
     local.get $4
     i64.load
     i64.sub
     local.set $14
     local.get $6
     i64.load offset=8
     local.get $4
     i64.load offset=8
     i64.sub
     local.get $5
     local.get $14
     i64.lt_u
     i64.extend_i32_u
     i64.sub
     local.set $5
     i32.const 16
     i32.const 15
     call $~lib/rt/stub/__new
     local.tee $6
     local.get $14
     i64.store
     local.get $6
     local.get $5
     i64.store offset=8
     local.get $2
     local.get $10
     local.get $6
     call $assembly/indexer/BalanceSheet/BalanceSheet#set
     i32.const 1
    end
    select
    local.set $9
    local.get $7
    local.get $10
    local.get $4
    call $assembly/indexer/BalanceSheet/BalanceSheet#increase
    local.get $0
    i32.load offset=8
    local.tee $4
    i32.load
    local.get $4
    i32.load offset=4
    local.get $12
    i32.const -1028477379
    i32.mul
    i32.const 374761397
    i32.add
    i32.const 17
    i32.rotl
    i32.const 668265263
    i32.mul
    local.tee $4
    local.get $4
    i32.const 15
    i32.shr_u
    i32.xor
    i32.const -2048144777
    i32.mul
    local.tee $4
    local.get $4
    i32.const 13
    i32.shr_u
    i32.xor
    i32.const -1028477379
    i32.mul
    local.tee $4
    local.get $4
    i32.const 16
    i32.shr_u
    i32.xor
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $4
    block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$22480"
     loop $while-continue|01
      local.get $4
      if
       local.get $4
       i32.load offset=8
       local.tee $6
       i32.const 1
       i32.and
       if (result i32)
        i32.const 0
       else
        local.get $4
        i32.load
        local.get $12
        i32.eq
       end
       br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$22480"
       local.get $6
       i32.const -2
       i32.and
       local.set $4
       br $while-continue|01
      end
     end
     i32.const 0
     local.set $4
    end
    local.get $4
    if
     local.get $0
     i32.load offset=8
     local.get $12
     call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get"
     local.set $13
     i32.const 0
     local.set $4
     loop $for-loop|1
      local.get $4
      local.get $13
      i32.load offset=12
      i32.lt_s
      if
       local.get $13
       local.get $4
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       drop
       local.get $3
       local.get $12
       call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
       i32.load
       local.tee $6
       i32.load offset=4
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.tee $15
       local.get $6
       i32.load
       local.get $6
       i32.load offset=4
       memory.copy
       i32.const 0
       local.set $6
       loop $for-loop|001
        local.get $6
        local.get $7
        i32.load
        local.tee $10
        i32.load offset=12
        i32.lt_s
        if
         local.get $10
         local.get $6
         call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
         local.set $16
         global.get $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
         local.get $16
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
         local.set $10
         global.get $assembly/indexer/constants/protorune/RUNE_ID_TO_ETCHING
         local.get $16
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         local.tee $17
         call $~lib/string/String.UTF8.decode
         local.set $18
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $18
         local.get $10
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $18
         local.get $17
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $assembly/indexer/constants/protorune/ETCHING_TO_RUNE_ID
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         local.tee $17
         call $~lib/string/String.UTF8.decode
         local.set $18
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $18
         local.get $16
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $18
         local.get $17
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $assembly/indexer/constants/protorune/SPACERS
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         local.set $16
         global.get $assembly/indexer/constants/index/SPACERS
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
         local.set $17
         local.get $16
         call $~lib/string/String.UTF8.decode
         local.set $18
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $18
         local.get $17
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $18
         local.get $16
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $assembly/indexer/constants/protorune/DIVISIBILITY
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         local.set $16
         global.get $assembly/indexer/constants/index/DIVISIBILITY
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
         local.set $17
         local.get $16
         call $~lib/string/String.UTF8.decode
         local.set $18
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $18
         local.get $17
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $18
         local.get $16
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $assembly/indexer/constants/protorune/SYMBOL
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         local.set $16
         global.get $assembly/indexer/constants/index/SYMBOL
         local.get $10
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
         local.set $17
         local.get $16
         call $~lib/string/String.UTF8.decode
         local.set $18
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $18
         local.get $17
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $18
         local.get $16
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $assembly/indexer/constants/protorune/ETCHINGS
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
         local.tee $16
         call $~lib/string/String.UTF8.decode
         local.set $17
         global.get $~lib/metashrew-as/assembly/indexer/index/_updates
         local.get $17
         local.get $10
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
         local.get $17
         local.get $16
         call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
         local.get $7
         global.get $assembly/indexer/constants/protorune/OUTPOINT_TO_RUNES
         local.get $15
         call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
         i32.const 0
         call $assembly/indexer/BalanceSheet/BalanceSheet#save
         local.get $6
         i32.const 1
         i32.add
         local.set $6
         br $for-loop|001
        end
       end
       local.get $4
       i32.const 1
       i32.add
       local.set $4
       br $for-loop|1
      end
     end
    end
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $for-loop|00
   end
  end
  local.get $9
 )
 (func $assembly/indexer/RunestoneMessage/RunestoneMessage#process (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  i32.load offset=36
  i32.load offset=4
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if
   loop $for-loop|0
    local.get $6
    local.get $1
    i32.load offset=36
    i32.load offset=4
    local.tee $4
    i32.load offset=12
    i32.lt_s
    if
     local.get $4
     local.get $6
     call $~lib/array/Array<i32>#__get
     local.set $7
     local.get $1
     i32.load offset=16
     local.get $7
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     i32.load offset=16
     call $~lib/metashrew-as/assembly/utils/yabsp/scriptParse
     local.set $4
     i32.const 1
     global.set $~argumentsLength
     local.get $4
     call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs
     call $~lib/metashrew-as/assembly/utils/box/Box.concat
     local.set $4
     i32.const 8
     i32.const 44
     call $~lib/rt/stub/__new
     local.tee $8
     i32.const 0
     i32.store16
     local.get $8
     i32.const 0
     i32.store offset=4
     i32.const 1
     global.set $~argumentsLength
     local.get $8
     block $__inlined_func$assembly/proto/protorune/protorune.ProtoBurn.decodeDataView$172 (result i32)
      local.get $4
      call $~lib/dataview/DataView#constructor@varargs
      call $assembly/proto/protorune/__proto.SafeDecoder#constructor
      local.set $5
      i32.const 8
      i32.const 67
      call $~lib/rt/stub/__new
      local.tee $4
      i32.eqz
      if
       i32.const 0
       i32.const 0
       call $~lib/rt/stub/__new
       local.set $4
      end
      local.get $4
      i32.const 0
      call $~lib/array/Array<u8>#constructor
      i32.store
      local.get $4
      i32.const 0
      i32.store offset=4
      loop $while-continue|0
       block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217 (result i32)
        i32.const 1
        local.get $5
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
        drop
        local.get $5
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $5
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2217
        end
        i32.const 0
       end
       if (result i32)
        i32.const 1
       else
        local.get $5
        i32.load offset=4
        local.get $5
        i32.load
        i32.load offset=8
        i32.ge_s
       end
       i32.eqz
       if
        block $case2|1
         block $case1|1
          local.get $5
          call $assembly/proto/protorune/__proto.Decoder#varint@override
          i32.wrap_i64
          local.tee $9
          i32.const 3
          i32.shr_u
          local.tee $10
          i32.const 1
          i32.ne
          if
           local.get $10
           i32.const 2
           i32.eq
           br_if $case1|1
           br $case2|1
          end
          local.get $4
          local.get $5
          call $assembly/proto/protorune/__proto.SafeDecoder#bytes
          i32.store
          br $while-continue|0
         end
         local.get $4
         local.get $5
         call $assembly/proto/protorune/__proto.Decoder#varint@override
         i64.store32 offset=4
         br $while-continue|0
        end
        local.get $5
        local.get $9
        i32.const 7
        i32.and
        call $assembly/proto/protorune/__proto.SafeDecoder#skipType
        br $while-continue|0
       end
      end
      i32.const 0
      block $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2245 (result i32)
       i32.const 1
       local.get $5
       i32.load8_u offset=8
       br_if $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2245
       drop
       local.get $5
       i32.load offset=4
       i32.const 4096
       i32.gt_s
       if
        local.get $5
        i32.const 1
        i32.store8 offset=8
        i32.const 1
        br $__inlined_func$assembly/proto/protorune/__proto.SafeDecoder#invalid$2245
       end
       i32.const 0
      end
      br_if $__inlined_func$assembly/proto/protorune/protorune.ProtoBurn.decodeDataView$172
      drop
      local.get $4
     end
     local.tee $4
     i32.load
     i32.load
     i32.load16_u
     local.tee $5
     i32.const 8
     i32.shl
     local.get $5
     i32.const 8
     i32.shr_u
     i32.or
     i32.store16
     local.get $8
     local.get $4
     i32.load offset=4
     i32.store offset=4
     global.get $assembly/indexer/constants/index/PROTOCOLS_TO_INDEX
     local.tee $4
     i32.load
     local.get $4
     i32.load offset=4
     local.get $8
     i32.load16_u
     local.tee $4
     i32.const -1028477379
     i32.mul
     i32.const 374761395
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $5
     local.get $5
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $5
     local.get $5
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $5
     local.get $5
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $5
     block $__inlined_func$~lib/set/Set<u16>#find$2090
      loop $while-continue|00
       local.get $5
       if
        local.get $5
        i32.load offset=4
        local.tee $9
        i32.const 1
        i32.and
        if (result i32)
         i32.const 0
        else
         local.get $5
         i32.load16_u
         local.get $4
         i32.eq
        end
        br_if $__inlined_func$~lib/set/Set<u16>#find$2090
        local.get $9
        i32.const -2
        i32.and
        local.set $5
        br $while-continue|00
       end
      end
      i32.const 0
      local.set $5
     end
     local.get $5
     if
      i32.const 16
      i32.const 45
      call $~lib/rt/stub/__new
      local.tee $4
      i32.const 0
      i32.store
      local.get $4
      i32.const 0
      i32.store offset=4
      local.get $4
      i32.const 0
      i32.store offset=8
      local.get $4
      i32.const 0
      i32.store offset=12
      i32.const 32
      i32.const 1
      call $~lib/rt/stub/__new
      local.tee $5
      i32.const 0
      i32.const 32
      memory.fill
      local.get $4
      local.get $5
      i32.store
      local.get $4
      local.get $5
      i32.store offset=4
      local.get $4
      i32.const 32
      i32.store offset=8
      local.get $4
      i32.const 0
      i32.store offset=12
      local.get $0
      i32.load offset=8
      local.tee $5
      i32.load
      local.get $5
      i32.load offset=4
      local.get $7
      i32.const -1028477379
      i32.mul
      i32.const 374761397
      i32.add
      i32.const 17
      i32.rotl
      i32.const 668265263
      i32.mul
      local.tee $5
      local.get $5
      i32.const 15
      i32.shr_u
      i32.xor
      i32.const -2048144777
      i32.mul
      local.tee $5
      local.get $5
      i32.const 13
      i32.shr_u
      i32.xor
      i32.const -1028477379
      i32.mul
      local.tee $5
      local.get $5
      i32.const 16
      i32.shr_u
      i32.xor
      i32.and
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $5
      block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2248"
       loop $while-continue|01
        local.get $5
        if
         local.get $5
         i32.load offset=8
         local.tee $9
         i32.const 1
         i32.and
         if (result i32)
          i32.const 0
         else
          local.get $5
          i32.load
          local.get $7
          i32.eq
         end
         br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$2248"
         local.get $9
         i32.const -2
         i32.and
         local.set $5
         br $while-continue|01
        end
       end
       i32.const 0
       local.set $5
      end
      local.get $5
      if
       local.get $0
       i32.load offset=8
       local.get $7
       call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get"
       local.set $4
      end
      local.get $4
      local.get $8
      call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
      drop
      local.get $0
      i32.load offset=8
      local.get $7
      local.get $4
      call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#set"
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|0
    end
   end
  end
  local.get $1
  i32.load offset=12
  local.tee $5
  i32.load offset=12
  local.tee $6
  i32.const 2
  i32.const 70
  call $~lib/rt/__newArray
  local.tee $7
  i32.load offset=4
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|00
   local.get $4
   local.get $6
   local.get $5
   i32.load offset=12
   local.tee $9
   local.get $6
   local.get $9
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $4
    i32.const 2
    i32.shl
    local.tee $9
    local.get $5
    i32.load offset=4
    i32.add
    i32.load
    local.set $10
    i32.const 3
    global.set $~argumentsLength
    local.get $8
    local.get $9
    i32.add
    local.get $10
    local.get $4
    local.get $5
    i32.const 13008
    i32.load
    call_indirect (type $3)
    i32.store
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|00
   end
  end
  call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
  local.set $5
  i32.const 0
  local.set $4
  local.get $7
  i32.load offset=12
  local.set $6
  loop $for-loop|01
   local.get $4
   local.get $6
   local.get $7
   i32.load offset=12
   local.tee $8
   local.get $6
   local.get $8
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $7
    i32.load offset=4
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    i32.const 4
    global.set $~argumentsLength
    local.get $5
    local.get $8
    local.get $4
    local.get $7
    i32.const 13040
    i32.load
    call_indirect (type $4)
    local.set $5
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|01
   end
  end
  i32.const 24
  i32.const 73
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $4
  i32.const 3
  i32.store offset=4
  local.get $4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $4
  i32.const 4
  i32.store offset=12
  local.get $4
  i32.const 0
  i32.store offset=16
  local.get $4
  i32.const 0
  i32.store offset=20
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $0
  local.get $5
  call $assembly/indexer/RunestoneMessage/RunestoneMessage#mint
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $0
  local.get $3
  local.get $5
  local.get $1
  call $assembly/indexer/RunestoneMessage/RunestoneMessage#etch
  local.get $0
  i32.load
  local.tee $3
  i32.load
  local.get $3
  i32.load offset=4
  i32.const 857269166
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $3
  block $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2340"
   loop $while-continue|001
    local.get $3
    if
     local.get $3
     i32.load offset=12
     local.tee $6
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $3
      i64.load
      i64.const 22
      i64.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#find$2340"
     local.get $6
     i32.const -2
     i32.and
     local.set $3
     br $while-continue|001
    end
   end
   i32.const 0
   local.set $3
  end
  local.get $3
  if
   local.get $0
   i32.load
   i64.const 22
   call $"~lib/map/Map<u64,~lib/array/Array<~lib/as-bignum/assembly/integer/u128/u128>>#get"
   i32.const 0
   call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
   i64.load
   i32.wrap_i64
   local.set $3
  else
   block $__inlined_func$assembly/indexer/RunesTransaction/RunesTransaction#defaultOutput$2545
    i32.const 0
    local.set $3
    loop $for-loop|02
     local.get $3
     local.get $1
     i32.load offset=16
     local.tee $6
     i32.load offset=12
     i32.lt_s
     if
      local.get $6
      local.get $3
      call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
      i32.load offset=16
      i32.load
      i32.load8_u
      i32.const 106
      i32.ne
      br_if $__inlined_func$assembly/indexer/RunesTransaction/RunesTransaction#defaultOutput$2545
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|02
     end
    end
    i32.const -1
    local.set $3
   end
  end
  local.get $4
  i32.load
  local.get $4
  i32.load offset=4
  local.get $3
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $1
  local.get $1
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $1
  local.get $1
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $1
  local.get $1
  i32.const 16
  i32.shr_u
  i32.xor
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $1
  block $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$22480"
   loop $while-continue|02
    local.get $1
    if
     local.get $1
     i32.load offset=8
     local.tee $6
     i32.const 1
     i32.and
     if (result i32)
      i32.const 0
     else
      local.get $1
      i32.load
      local.get $3
      i32.eq
     end
     br_if $"__inlined_func$~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#find$22480"
     local.get $6
     i32.const -2
     i32.and
     local.set $1
     br $while-continue|02
    end
   end
   i32.const 0
   local.set $1
  end
  local.get $1
  if
   local.get $5
   local.get $4
   local.get $3
   call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get"
   call $assembly/indexer/BalanceSheet/BalanceSheet#pipe
  else
   local.get $4
   local.get $3
   local.get $5
   call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#set"
  end
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  drop
  local.get $0
  local.get $4
  local.get $5
  local.get $2
  call $assembly/indexer/RunestoneMessage/RunestoneMessage#processEdicts
  local.set $5
  local.get $4
  i32.load offset=8
  local.set $7
  local.get $4
  i32.load offset=16
  local.set $8
  i32.const 16
  i32.const 6
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $8
  i32.const 268435455
  i32.gt_u
  if
   i32.const 2608
   i32.const 3520
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 8
  local.get $8
  local.get $8
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 0
  local.get $1
  memory.fill
  local.get $0
  local.get $3
  i32.store
  local.get $0
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $8
  i32.store offset=12
  i32.const 0
  local.set $1
  i32.const 0
  local.set $6
  loop $for-loop|03
   local.get $6
   local.get $8
   i32.lt_s
   if
    local.get $7
    local.get $6
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $3
     i32.load
     local.set $9
     local.get $1
     local.tee $3
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $0
     i32.load offset=12
     i32.ge_u
     if
      local.get $3
      i32.const 0
      i32.lt_s
      if
       i32.const 3344
       i32.const 3520
       i32.const 130
       i32.const 22
       call $~lib/builtins/abort
       unreachable
      end
      local.get $0
      local.get $3
      i32.const 1
      i32.add
      local.tee $10
      i32.const 2
      i32.const 1
      call $~lib/array/ensureCapacity
      local.get $0
      local.get $10
      i32.store offset=12
     end
     local.get $0
     i32.load offset=4
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.get $9
     i32.store
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|03
   end
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
  local.set $1
  i32.const 0
  local.set $0
  loop $for-loop|1
   local.get $0
   local.get $1
   i32.load offset=12
   i32.lt_s
   if
    local.get $4
    local.get $1
    local.get $0
    call $~lib/array/Array<u32>#__get
    call $"~lib/map/Map<u32,~lib/array/Array<assembly/indexer/ProtoBurn/ProtoBurn>>#get"
    local.set $3
    global.get $assembly/indexer/constants/index/OUTPOINT_TO_RUNES
    local.set $6
    local.get $2
    local.get $1
    local.get $0
    call $~lib/array/Array<u32>#__get
    call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
    i32.load
    local.tee $7
    i32.load offset=4
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.tee $8
    local.get $7
    i32.load
    local.get $7
    i32.load offset=4
    memory.copy
    local.get $3
    local.get $6
    local.get $8
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    local.get $5
    call $assembly/indexer/BalanceSheet/BalanceSheet#save
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|1
   end
  end
 )
 (func $assembly/indexer/Indexer/Index.indexBlock (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  call $assembly/indexer/RunestoneMessage/RunestoneMessage.etchGenesisRune
  i32.const 12272
  i32.const 840000
  call $~lib/util/number/utoa32
  call $~lib/string/String.__concat
  local.set $3
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.const 1
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/utils/logging/__log
  global.get $assembly/indexer/constants/index/HEIGHT_TO_BLOCKHASH
  i32.const 840000
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectValue<u32>
  local.set $3
  local.get $0
  call $~lib/metashrew-as/assembly/blockdata/block/Block#blockhash
  local.set $4
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/BLOCKHASH_TO_HEIGHT
  local.get $0
  call $~lib/metashrew-as/assembly/blockdata/block/Block#blockhash
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $3
  i32.const 4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $4
  i32.const 840000
  i32.store
  local.get $3
  call $~lib/string/String.UTF8.decode
  local.set $5
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $5
  local.get $4
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $5
  local.get $3
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
  global.get $assembly/indexer/constants/index/HEIGHT_TO_TRANSACTION_IDS
  i32.const 840000
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectValue<u32>
  local.set $3
  loop $for-loop|0
   local.get $1
   local.get $0
   i32.load offset=8
   local.tee $4
   i32.load offset=12
   i32.lt_s
   if
    local.get $4
    local.get $1
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    call $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#txid
    local.set $4
    local.get $3
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#extend
    local.tee $5
    call $~lib/string/String.UTF8.decode
    local.set $6
    global.get $~lib/metashrew-as/assembly/indexer/index/_updates
    local.get $6
    local.get $4
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
    local.get $6
    local.get $5
    call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  loop $for-loop|00
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.load offset=12
   i32.lt_s
   if
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.tee $3
    call $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#txid
    local.set $4
    i32.const 0
    local.set $1
    loop $for-loop|01
     local.get $1
     local.get $3
     i32.load offset=16
     i32.load offset=12
     i32.lt_s
     if
      global.get $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT
      local.set $5
      local.get $4
      local.get $1
      call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
      i32.load
      local.tee $6
      i32.load offset=4
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.tee $7
      local.get $6
      i32.load
      local.get $6
      i32.load offset=4
      memory.copy
      local.get $5
      local.get $7
      call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
      local.set $5
      i32.const 4
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.tee $6
      i32.const 840000
      i32.store
      local.get $5
      call $~lib/string/String.UTF8.decode
      local.set $7
      global.get $~lib/metashrew-as/assembly/indexer/index/_updates
      local.get $7
      local.get $6
      call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
      global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
      local.get $7
      local.get $5
      call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#set"
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|01
     end
    end
    local.get $3
    call $assembly/indexer/RunesTransaction/RunesTransaction#processRunestones
    local.get $3
    i32.load offset=36
    i32.load
    i32.const -1
    i32.ne
    if
     block $for-continue|0
      i32.const 16
      i32.const 62
      call $~lib/rt/stub/__new
      local.tee $5
      i32.const 0
      i32.store
      local.get $5
      i32.const 0
      i32.store offset=4
      local.get $5
      i32.const 0
      i32.store offset=8
      local.get $5
      i32.const 0
      i32.store offset=12
      i32.const 32
      i32.const 1
      call $~lib/rt/stub/__new
      local.tee $1
      i32.const 0
      i32.const 32
      memory.fill
      local.get $5
      local.get $1
      i32.store
      local.get $5
      local.get $1
      i32.store offset=4
      local.get $5
      i32.const 32
      i32.store offset=8
      local.get $5
      i32.const 0
      i32.store offset=12
      local.get $3
      i32.load offset=36
      i32.load offset=8
      i32.load offset=12
      i32.const 0
      i32.gt_s
      if
       i32.const 0
       local.set $1
       loop $for-loop|1
        local.get $1
        local.get $3
        i32.load offset=36
        i32.load offset=8
        local.tee $6
        i32.load offset=12
        i32.lt_s
        if
         local.get $3
         i32.load offset=16
         local.get $6
         local.get $1
         call $~lib/array/Array<i32>#__get
         call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
         i32.load offset=16
         call $~lib/metashrew-as/assembly/utils/yabsp/scriptParse
         local.set $6
         i32.const 1
         global.set $~argumentsLength
         local.get $6
         call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs
         call $~lib/metashrew-as/assembly/utils/box/Box.concat
         local.set $6
         i32.const 1
         global.set $~argumentsLength
         local.get $5
         local.get $6
         call $~lib/dataview/DataView#constructor@varargs
         call $assembly/proto/protorune/protorune.ProtoMessage.decodeDataView
         call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
         drop
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|1
        end
       end
      end
      i32.const 0
      local.set $1
      local.get $3
      i32.load offset=16
      local.get $3
      i32.load offset=36
      i32.load
      call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
      i32.load offset=16
      call $~lib/metashrew-as/assembly/utils/yabsp/scriptParse
      local.set $5
      i32.const 1
      global.set $~argumentsLength
      local.get $5
      call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs
      local.tee $5
      i32.load offset=12
      local.set $6
      block $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2347
       loop $for-loop|003
        local.get $1
        local.get $6
        local.get $5
        i32.load offset=12
        local.tee $7
        local.get $6
        local.get $7
        i32.lt_s
        select
        i32.lt_s
        if
         local.get $5
         i32.load offset=4
         local.get $1
         i32.const 2
         i32.shl
         i32.add
         i32.load
         local.set $7
         i32.const 3
         global.set $~argumentsLength
         local.get $7
         local.get $1
         local.get $5
         i32.const 12896
         i32.load
         call_indirect (type $3)
         br_if $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2347
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|003
        end
       end
       i32.const -1
       local.set $1
      end
      local.get $1
      i32.const -1
      i32.ne
      br_if $for-continue|0
      local.get $5
      call $~lib/metashrew-as/assembly/utils/box/Box.concat
      call $assembly/indexer/RunestoneMessage/RunestoneMessage.parse
      local.tee $1
      i32.eqz
      br_if $for-continue|0
      local.get $1
      i32.const 8
      i32.sub
      i32.load
      drop
      local.get $1
      local.get $3
      local.get $4
      local.get $2
      call $assembly/indexer/RunestoneMessage/RunestoneMessage#process
      local.get $3
      i32.load offset=36
      i32.load offset=12
      local.tee $5
      i32.const -1
      i32.ne
      if
       i32.const 0
       local.set $1
       local.get $3
       i32.load offset=16
       local.get $5
       call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
       i32.load offset=16
       call $~lib/metashrew-as/assembly/utils/yabsp/scriptParse
       local.set $5
       i32.const 1
       global.set $~argumentsLength
       local.get $5
       call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#slice@varargs
       local.tee $5
       i32.load offset=12
       local.set $6
       block $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2348
        loop $for-loop|013
         local.get $1
         local.get $6
         local.get $5
         i32.load offset=12
         local.tee $7
         local.get $6
         local.get $7
         i32.lt_s
         select
         i32.lt_s
         if
          local.get $5
          i32.load offset=4
          local.get $1
          i32.const 2
          i32.shl
          i32.add
          i32.load
          local.set $7
          i32.const 3
          global.set $~argumentsLength
          local.get $7
          local.get $1
          local.get $5
          i32.const 13168
          i32.load
          call_indirect (type $3)
          br_if $__inlined_func$~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#findIndex$2348
          local.get $1
          i32.const 1
          i32.add
          local.set $1
          br $for-loop|013
         end
        end
        i32.const -1
        local.set $1
       end
       local.get $1
       i32.const -1
       i32.eq
       if
        local.get $5
        call $~lib/metashrew-as/assembly/utils/box/Box.concat
        call $assembly/indexer/RunestoneMessage/RunestoneMessage.parse
        local.tee $1
        i32.const 8
        i32.sub
        i32.load
        drop
        local.get $1
        local.get $3
        local.get $4
        local.get $2
        call $assembly/indexer/RunestoneMessage/RunestoneMessage#process
       end
      end
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|00
   end
  end
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 80
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $~lib/metashrew-as/assembly/indexer/index/arrayBufferToArray (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/array/Array<u8>#constructor
  local.tee $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  local.get $1
 )
 (func $~lib/metashrew-as/assembly/indexer/index/_flush~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#get"
  call $~lib/metashrew-as/assembly/indexer/index/arrayBufferToArray
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
  drop
  local.get $0
  global.get $~lib/metashrew-as/assembly/indexer/index/_updates
  local.get $1
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#get"
  call $~lib/metashrew-as/assembly/indexer/index/arrayBufferToArray
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
  drop
  local.get $0
 )
 (func $~lib/array/Array<u8>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 0
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $2
  i32.add
  local.get $1
  i32.store8
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64 (param $0 i32) (param $1 i64)
  loop $while-continue|0
   local.get $1
   i64.const 127
   i64.gt_u
   if
    local.get $0
    i32.load
    local.get $1
    i64.const 127
    i64.and
    i64.const 128
    i64.or
    i32.wrap_i64
    call $~lib/array/Array<u8>#push
    local.get $1
    i64.const 7
    i64.shr_u
    local.set $1
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  i32.wrap_i64
  call $~lib/array/Array<u8>#push
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3344
   i32.const 3520
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/metashrew-as/assembly/indexer/index/_flush
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.tee $0
  i32.load offset=8
  local.set $5
  local.get $0
  i32.load offset=16
  local.set $3
  i32.const 16
  i32.const 79
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.store offset=12
  local.get $3
  i32.const 268435455
  i32.gt_u
  if
   i32.const 2608
   i32.const 3520
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 8
  local.get $3
  local.get $3
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  local.get $2
  memory.fill
  local.get $4
  local.get $0
  i32.store
  local.get $4
  local.get $0
  i32.store offset=4
  local.get $4
  local.get $2
  i32.store offset=8
  local.get $4
  local.get $3
  i32.store offset=12
  loop $for-loop|0
   local.get $3
   local.get $7
   i32.gt_s
   if
    local.get $5
    local.get $7
    i32.const 12
    i32.mul
    i32.add
    local.tee $2
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     local.tee $0
     i32.const 1
     i32.add
     local.set $1
     local.get $4
     local.get $0
     local.get $2
     i32.load
     call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  local.get $4
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $4
  local.get $1
  i32.store offset=12
  call $~lib/array/Array<~lib/array/Array<u8>>#constructor
  local.tee $3
  local.set $7
  i32.const 0
  local.set $1
  local.get $4
  i32.load offset=12
  local.set $2
  loop $for-loop|00
   local.get $1
   local.get $2
   local.get $4
   i32.load offset=12
   local.tee $0
   local.get $0
   local.get $2
   i32.gt_s
   select
   i32.lt_s
   if
    local.get $4
    i32.load offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $0
    i32.const 4
    global.set $~argumentsLength
    local.get $7
    local.get $0
    local.get $1
    local.get $4
    i32.const 13200
    i32.load
    call_indirect (type $4)
    local.set $7
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|00
   end
  end
  i32.const 4
  i32.const 82
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/array/Array<~lib/array/Array<u8>>#constructor
  i32.store
  local.get $0
  local.get $3
  i32.store
  global.get $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  local.tee $1
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $1
  i32.const 3
  i32.store offset=4
  local.get $1
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $1
  i32.const 4
  i32.const 83
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  local.get $1
  i32.store
  local.get $4
  i32.load
  local.set $3
  local.get $0
  i32.load
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if
   loop $for-loop|01
    local.get $6
    local.get $0
    i32.load
    i32.load offset=12
    i32.lt_s
    if
     local.get $4
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $4
     local.get $0
     i32.load
     local.get $6
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     i64.load32_s offset=12
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $0
     i32.load
     local.get $6
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $2
     i32.const 0
     local.set $1
     loop $for-loop|1
      local.get $1
      local.get $2
      i32.load offset=12
      i32.lt_s
      if
       local.get $4
       i32.load
       local.get $2
       local.get $1
       call $~lib/array/Array<u8>#__get
       call $~lib/array/Array<u8>#push
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|01
    end
   end
  end
  local.get $3
  i32.load offset=12
  local.tee $1
  i32.const 4
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $3
  i32.load offset=4
  local.get $1
  memory.copy
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/index/__flush
 )
 (func $assembly/tests/testTransaction (param $0 i32)
  (local $1 i32)
  i32.const 10944
  call $~lib/metashrew-as/assembly/index/decodeHex
  local.tee $1
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  call $~lib/metashrew-as/assembly/blockdata/block/Block#constructor
  local.tee $1
  i32.const 1
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Transaction>#constructor
  i32.store offset=8
  local.get $1
  i32.load offset=8
  i32.const 0
  local.get $0
  call $~lib/metashrew-as/assembly/index/decodeHex
  local.tee $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  call $~lib/metashrew-as/assembly/blockdata/transaction/Transaction#constructor
  call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
  local.get $1
  call $assembly/indexer/Indexer/Index.indexBlock
  call $~lib/metashrew-as/assembly/indexer/index/_flush
 )
 (func $assembly/tests/test_indexEtching
  i32.const 8512
  call $assembly/tests/testTransaction
 )
 (func $assembly/tests/test_genesisTransaction
  i32.const 13232
  call $assembly/tests/testTransaction
 )
 (func $assembly/tests/test_secondTransaction
  i32.const 14576
  call $assembly/tests/testTransaction
 )
 (func $assembly/tests/test_oneFortyEight
  i32.const 16080
  call $assembly/tests/testTransaction
 )
 (func $assembly/tests/test_fifteen
  i32.const 17152
  call $assembly/tests/testTransaction
 )
 (func $assembly/view/outpoint/txindexForOutpoint (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  local.tee $1
  local.get $1
  i32.load offset=4
  i32.const 4
  i32.sub
  i32.store offset=4
  local.get $1
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $2
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  global.get $assembly/indexer/constants/index/HEIGHT_TO_TRANSACTION_IDS
  global.get $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectValue<u32>
  local.set $6
  i32.const 1
  global.set $~argumentsLength
  local.get $6
  i32.const 12192
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $7
   i32.gt_s
   if
    local.get $6
    local.get $7
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
    local.set $8
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=16
    local.set $3
    i32.const 0
    local.set $9
    block $~lib/util/memory/memcmp|inlined.0
     local.get $8
     local.get $2
     local.tee $0
     i32.eq
     br_if $~lib/util/memory/memcmp|inlined.0
     local.get $0
     i32.const 7
     i32.and
     local.get $8
     i32.const 7
     i32.and
     i32.eq
     if
      loop $while-continue|1
       local.get $0
       i32.const 7
       i32.and
       if
        i32.const 0
        local.set $9
        local.get $3
        i32.eqz
        br_if $~lib/util/memory/memcmp|inlined.0
        local.get $0
        i32.load8_u
        local.tee $4
        local.get $8
        i32.load8_u
        local.tee $1
        i32.sub
        local.set $9
        local.get $1
        local.get $4
        i32.ne
        br_if $~lib/util/memory/memcmp|inlined.0
        local.get $3
        i32.const 1
        i32.sub
        local.set $3
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        local.get $8
        i32.const 1
        i32.add
        local.set $8
        br $while-continue|1
       end
      end
      loop $while-continue|2
       local.get $3
       i32.const 8
       i32.ge_u
       if
        local.get $0
        i64.load
        local.get $8
        i64.load
        i64.eq
        if
         local.get $0
         i32.const 8
         i32.add
         local.set $0
         local.get $8
         i32.const 8
         i32.add
         local.set $8
         local.get $3
         i32.const 8
         i32.sub
         local.set $3
         br $while-continue|2
        end
       end
      end
     end
     loop $while-continue|3
      local.get $3
      local.tee $1
      i32.const 1
      i32.sub
      local.set $3
      local.get $1
      if
       local.get $0
       i32.load8_u
       local.tee $4
       local.get $8
       i32.load8_u
       local.tee $1
       i32.sub
       local.set $9
       local.get $1
       local.get $4
       i32.ne
       br_if $~lib/util/memory/memcmp|inlined.0
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       local.get $8
       i32.const 1
       i32.add
       local.set $8
       br $while-continue|3
      end
     end
     i32.const 0
     local.set $9
    end
    local.get $9
    i32.eqz
    if
     local.get $7
     return
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $assembly/indexer/RuneId/RuneId.fromBytesU128 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $2
  i32.load offset=8
  call $~lib/array/Array<u8>#constructor
  local.set $0
  local.get $2
  i32.load offset=4
  local.set $3
  local.get $2
  i32.load offset=8
  local.set $4
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_s
   if
    local.get $1
    local.get $3
    i32.add
    i32.load8_u
    local.set $5
    i32.const 4
    global.set $~argumentsLength
    local.get $0
    local.get $5
    local.get $1
    local.get $2
    i32.const 17904
    i32.load
    call_indirect (type $4)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if (result i32)
   local.get $1
   i32.const 15
   i32.and
  else
   i32.const 1
  end
  if
   i32.const 0
   i32.const 8160
   i32.const 132
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.tee $0
  i64.load
  local.set $6
  local.get $0
  i64.load offset=8
  local.set $7
  i32.const 16
  i32.const 15
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $6
  i64.store
  local.get $0
  local.get $7
  i64.store offset=8
  local.get $0
  i64.load
  local.get $0
  i64.load offset=8
  i32.wrap_i64
  call $assembly/indexer/RuneId/RuneId#constructor
 )
 (func $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u8> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  local.tee $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.eqz
  if
   i32.const 0
   return
  end
  i32.const 1
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  local.get $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  memory.copy
  local.get $1
  i32.load8_u
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.RuneId#constructor (result i32)
  (local $0 i32)
  i32.const 8
  i32.const 87
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Rune#constructor (result i32)
  (local $0 i32)
  i32.const 20
  i32.const 86
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $assembly/proto/metashrew-runes/metashrew_runes.RuneId#constructor
  i32.store
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
 )
 (func $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#push
  local.get $0
 )
 (func $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  call $assembly/indexer/RuneId/RuneId.fromBytesU128
  local.set $5
  global.get $assembly/indexer/constants/index/RUNE_ID_TO_ETCHING
  local.get $1
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  local.set $2
  global.get $assembly/indexer/constants/index/SPACERS
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  drop
  global.get $assembly/indexer/constants/index/DIVISIBILITY
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u8>
  local.set $3
  call $assembly/proto/metashrew-runes/metashrew_runes.Rune#constructor
  local.set $7
  call $assembly/proto/metashrew-runes/metashrew_runes.RuneId#constructor
  local.tee $1
  local.get $5
  i64.load
  i64.store32
  local.get $1
  local.get $5
  i32.load offset=8
  i32.store offset=4
  local.get $7
  local.get $1
  i32.store
  local.get $2
  call $assembly/utils/fromArrayBuffer
  call $assembly/utils/fieldToName
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $8
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $1
  local.get $8
  i32.load offset=4
  local.set $9
  local.get $8
  i32.load offset=8
  local.set $5
  loop $for-loop|0
   local.get $4
   local.get $5
   i32.lt_s
   if
    local.get $4
    local.get $9
    i32.add
    i32.load8_u
    local.set $6
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    local.get $6
    local.get $4
    local.get $8
    i32.const 17936
    i32.load
    call_indirect (type $4)
    local.set $1
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $7
  local.get $1
  i32.store offset=4
  local.get $7
  local.get $3
  i32.store offset=8
  local.get $7
  global.get $assembly/indexer/constants/index/SYMBOL
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u8>
  i32.store offset=16
  local.get $7
  global.get $assembly/indexer/constants/index/SPACERS
  local.get $2
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  i32.store offset=12
  local.get $0
  local.get $7
  call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
  drop
  local.get $0
 )
 (func $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.Rune>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 89
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $assembly/view/outpoint/balanceSheetToProtobuf~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  i32.const 16
  call $~lib/array/Array<u8>#constructor
  local.tee $1
  i32.load offset=4
  local.tee $2
  local.get $0
  i64.load offset=8
  local.tee $3
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $3
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store
  local.get $2
  local.get $0
  i64.load
  local.tee $3
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.get $3
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  i64.or
  local.tee $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  i64.or
  i64.const 32
  i64.rotr
  i64.store offset=8
  local.get $1
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 4
  i32.const 84
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  i32.const 16
  i32.const 88
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.const 32
  memory.fill
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.store offset=4
  local.get $1
  i32.const 32
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
 )
 (func $assembly/view/outpoint/balanceSheetToProtobuf (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.load
  local.set $5
  call $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.Rune>#constructor
  local.set $4
  local.get $5
  i32.load offset=12
  local.set $6
  loop $for-loop|0
   local.get $1
   local.get $6
   local.get $5
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $5
    i32.load offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $7
    i32.const 4
    global.set $~argumentsLength
    local.get $4
    local.get $7
    local.get $1
    local.get $5
    i32.const 17968
    i32.load
    call_indirect (type $4)
    local.set $4
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.load offset=12
  local.tee $5
  i32.const 2
  i32.const 80
  call $~lib/rt/__newArray
  local.tee $6
  i32.load offset=4
  local.set $7
  loop $for-loop|00
   local.get $2
   local.get $5
   local.get $1
   i32.load offset=12
   local.tee $0
   local.get $0
   local.get $5
   i32.gt_s
   select
   i32.lt_s
   if
    local.get $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $1
    i32.load offset=4
    i32.add
    i32.load
    local.set $0
    i32.const 3
    global.set $~argumentsLength
    local.get $7
    local.get $8
    i32.add
    local.get $0
    local.get $2
    local.get $1
    i32.const 18000
    i32.load
    call_indirect (type $3)
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|00
   end
  end
  call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#constructor
  local.set $1
  loop $for-loop|001
   local.get $3
   local.get $6
   i32.load offset=12
   i32.lt_s
   if
    i32.const 8
    i32.const 85
    call $~lib/rt/stub/__new
    local.tee $0
    i32.eqz
    if
     i32.const 0
     i32.const 0
     call $~lib/rt/stub/__new
     local.set $0
    end
    local.get $0
    call $assembly/proto/metashrew-runes/metashrew_runes.Rune#constructor
    i32.store
    local.get $0
    i32.const 0
    call $~lib/array/Array<u8>#constructor
    i32.store offset=4
    local.get $0
    local.get $4
    local.get $3
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.store
    local.get $0
    local.get $6
    local.get $3
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.store offset=4
    local.get $1
    i32.load
    local.get $0
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
    drop
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|001
   end
  end
  local.get $1
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#constructor (result i32)
  (local $0 i32)
  i32.const 8
  i32.const 92
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
 )
 (func $assembly/view/outpoint/outpointBase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/metashrew-as/assembly/blockdata/transaction/OutPoint.from
  i32.load
  local.tee $1
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  local.get $1
  i32.load
  local.get $1
  i32.load offset=4
  memory.copy
  global.get $assembly/indexer/constants/index/OUTPOINT_TO_RUNES
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $1
  global.get $~lib/metashrew-spendables/assembly/tables/OUTPOINT_TO_OUTPUT
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  local.tee $2
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  call $~lib/metashrew-as/assembly/utils/box/Box#constructor
  i32.const 0
  call $~lib/metashrew-as/assembly/blockdata/transaction/Output#constructor
  local.set $4
  local.get $1
  call $assembly/indexer/BalanceSheet/BalanceSheet.load
  call $assembly/view/outpoint/balanceSheetToProtobuf
  local.set $5
  i32.const 20
  i32.const 93
  call $~lib/rt/stub/__new
  local.tee $1
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $1
  end
  local.get $1
  call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#constructor
  i32.store
  local.get $1
  call $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#constructor
  i32.store offset=4
  i32.const 16
  i32.const 94
  call $~lib/rt/stub/__new
  local.tee $2
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $2
  end
  local.get $2
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  i32.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $1
  local.get $2
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  local.get $0
  i32.store offset=4
  local.get $1
  i32.load offset=8
  local.set $2
  local.get $4
  i32.load offset=16
  local.tee $0
  i32.load offset=4
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $6
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  memory.copy
  local.get $2
  local.get $6
  call $~lib/metashrew-as/assembly/indexer/index/arrayBufferToArray
  i32.store
  local.get $1
  i32.load offset=8
  local.get $4
  i64.load offset=8
  i64.store offset=8
  local.get $1
  local.get $5
  i32.store
  local.get $1
  global.get $assembly/indexer/constants/index/OUTPOINT_TO_HEIGHT
  local.get $3
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  i32.store offset=12
  local.get $1
  local.get $3
  call $assembly/view/outpoint/txindexForOutpoint
  i32.store offset=16
  local.get $1
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $3
  local.get $0
  local.get $1
  i32.add
  local.get $2
  memory.copy
  local.get $3
 )
 (func $assembly/proto/metashrew-runes/__proto.SafeDecoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  i32.const 9
  i32.const 95
  call $~lib/rt/stub/__new
  local.tee $1
  i32.eqz
  if
   i32.const 8
   i32.const 96
   call $~lib/rt/stub/__new
   local.set $1
  end
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store8 offset=8
  local.get $1
 )
 (func $assembly/proto/metashrew-runes/__proto.Decoder#varint (param $0 i32) (result i64)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $0
  i32.load offset=4
  call $~lib/dataview/DataView#getUint8
  i32.const 255
  i32.and
  i64.extend_i32_u
  i64.const 127
  i64.and
  local.set $1
  local.get $0
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 1
  i32.add
  i32.store offset=4
  block $folding-inner0
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 7
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 14
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 21
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 28
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 35
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 42
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 49
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 28
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load
   local.get $0
   i32.load offset=4
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i64.extend_i32_u
   i64.const 127
   i64.and
   i64.const 35
   i64.shl
   local.get $1
   i64.or
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load
   local.get $2
   call $~lib/dataview/DataView#getUint8
   i32.const 255
   i32.and
   i32.const 128
   i32.lt_u
   br_if $folding-inner0
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load
   i32.load offset=8
   i32.gt_s
   if
    i32.const 18036
    local.get $0
    i32.load offset=4
    call $~lib/util/number/itoa32
    i32.store
    i32.const 18032
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 18064
    i32.const 278
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
 )
 (func $assembly/proto/metashrew-runes/__proto.SafeDecoder#bytes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2409 (result i32)
   i32.const 1
   local.get $0
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2409
   drop
   local.get $0
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $0
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2409
   end
   i32.const 0
  end
  if
   i32.const 0
   call $~lib/array/Array<u8>#constructor
   return
  end
  local.get $0
  call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
  i32.wrap_i64
  local.set $1
  local.get $0
  i32.load
  i32.load offset=8
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.get $0
   i32.load offset=4
   i32.add
   i32.const 4096
   i32.gt_s
  end
  if
   local.get $0
   i32.const 1
   i32.store8 offset=8
   i32.const 0
   call $~lib/array/Array<u8>#constructor
   return
  end
  local.get $1
  call $~lib/array/Array<u8>#constructor
  local.set $3
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.gt_u
   if
    local.get $0
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=4
    local.get $3
    local.get $2
    local.get $0
    i32.load
    local.get $4
    call $~lib/dataview/DataView#getUint8
    call $~lib/array/Array<u8>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $assembly/proto/metashrew-runes/__proto.SafeDecoder#skipType (param $0 i32) (param $1 i32)
  block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2412 (result i32)
   i32.const 1
   local.get $0
   i32.load8_u offset=8
   br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2412
   drop
   local.get $0
   i32.load offset=4
   i32.const 4096
   i32.gt_s
   if
    local.get $0
    i32.const 1
    i32.store8 offset=8
    i32.const 1
    br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2412
   end
   i32.const 0
  end
  if
   return
  end
  block $break|0
   block $case5|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $1
         br_table $case0|0 $case1|0 $case2|0 $case3|0 $case5|0 $case4|0 $case5|0
        end
        local.get $0
        call $assembly/proto/protorune/__proto.SafeDecoder#varint
        drop
        br $break|0
       end
       block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2411 (result i32)
        i32.const 1
        local.get $0
        i32.load8_u offset=8
        br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2411
        drop
        local.get $0
        i32.load offset=4
        i32.const 4096
        i32.gt_s
        if
         local.get $0
         i32.const 1
         i32.store8 offset=8
         i32.const 1
         br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2411
        end
        i32.const 0
       end
       i32.eqz
       if
        local.get $0
        i32.load
        i32.load offset=8
        local.get $0
        i32.load offset=4
        i32.const 8
        i32.add
        i32.lt_s
        if (result i32)
         i32.const 1
        else
         local.get $0
         i32.load offset=4
         i32.const 8
         i32.add
         i32.const 4096
         i32.gt_s
        end
        if
         local.get $0
         i32.const 1
         i32.store8 offset=8
        end
        local.get $0
        local.get $0
        i32.load offset=4
        i32.const 8
        i32.add
        i32.store offset=4
       end
       br $break|0
      end
      local.get $0
      call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
      i32.wrap_i64
      local.set $1
      block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24110 (result i32)
       i32.const 1
       local.get $0
       i32.load8_u offset=8
       br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24110
       drop
       local.get $0
       i32.load offset=4
       i32.const 4096
       i32.gt_s
       if
        local.get $0
        i32.const 1
        i32.store8 offset=8
        i32.const 1
        br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24110
       end
       i32.const 0
      end
      i32.eqz
      if
       local.get $0
       i32.load
       i32.load offset=8
       local.get $1
       local.get $0
       i32.load offset=4
       i32.add
       i32.lt_s
       if (result i32)
        i32.const 1
       else
        local.get $1
        local.get $0
        i32.load offset=4
        i32.add
        i32.const 4096
        i32.gt_s
       end
       if
        local.get $0
        i32.const 1
        i32.store8 offset=8
       end
       local.get $0
       local.get $1
       local.get $0
       i32.load offset=4
       i32.add
       i32.store offset=4
      end
      br $break|0
     end
     loop $while-continue|1
      local.get $0
      call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
      i32.wrap_i64
      i32.const 7
      i32.and
      local.tee $1
      i32.const 4
      i32.ne
      if
       local.get $0
       local.get $1
       call $assembly/proto/metashrew-runes/__proto.SafeDecoder#skipType
       br $while-continue|1
      end
     end
     br $break|0
    end
    block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24111 (result i32)
     i32.const 1
     local.get $0
     i32.load8_u offset=8
     br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24111
     drop
     local.get $0
     i32.load offset=4
     i32.const 4096
     i32.gt_s
     if
      local.get $0
      i32.const 1
      i32.store8 offset=8
      i32.const 1
      br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$24111
     end
     i32.const 0
    end
    i32.eqz
    if
     local.get $0
     i32.load
     i32.load offset=8
     local.get $0
     i32.load offset=4
     i32.const 4
     i32.add
     i32.lt_s
     if (result i32)
      i32.const 1
     else
      local.get $0
      i32.load offset=4
      i32.const 4
      i32.add
      i32.const 4096
      i32.gt_s
     end
     if
      local.get $0
      i32.const 1
      i32.store8 offset=8
     end
     local.get $0
     local.get $0
     i32.load offset=4
     i32.const 4
     i32.add
     i32.store offset=4
    end
    br $break|0
   end
   local.get $0
   i32.const 1
   i32.store8 offset=8
  end
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Rune#size (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load
  local.tee $2
  if (result i32)
   local.get $2
   i32.load
   if (result i32)
    local.get $2
    i64.load32_u
    local.tee $1
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $1
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $1
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $1
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
   else
    i32.const 0
   end
   local.get $2
   i32.load offset=4
   if (result i32)
    local.get $2
    i64.load32_u offset=4
    local.tee $1
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $1
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $1
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $1
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
   else
    i32.const 0
   end
   i32.add
   local.tee $2
   if (result i32)
    local.get $2
    local.get $2
    i64.extend_i32_u
    local.tee $1
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $1
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $1
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $1
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
    i32.add
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.load offset=12
  local.tee $2
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $2
   local.get $3
   i64.load32_s offset=12
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $1
      i64.const 268435456
      i64.lt_u
      if (result i32)
       i32.const 4
      else
       local.get $1
       i64.const 34359738368
       i64.lt_u
       if (result i32)
        i32.const 5
       else
        local.get $1
        i64.const 4398046511104
        i64.lt_u
        if (result i32)
         i32.const 6
        else
         local.get $1
         i64.const 562949953421312
         i64.lt_u
         if (result i32)
          i32.const 7
         else
          local.get $1
          i64.const 72057594037927936
          i64.lt_u
          if (result i32)
           i32.const 8
          else
           i32.const 9
           i32.const 10
           local.get $1
           i64.const -9223372036854775808
           i64.lt_u
           select
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   i32.add
   i32.add
  else
   i32.const 0
  end
  i32.add
  local.get $0
  i32.load offset=8
  if (result i32)
   local.get $0
   i64.load32_u offset=8
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      i32.const 4
      i32.const 5
      local.get $1
      i64.const 268435456
      i64.lt_u
      select
     end
    end
   end
   i32.const 1
   i32.add
  else
   i32.const 0
  end
  i32.add
  local.get $0
  i32.load offset=12
  if (result i32)
   local.get $0
   i64.load32_u offset=12
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      i32.const 4
      i32.const 5
      local.get $1
      i64.const 268435456
      i64.lt_u
      select
     end
    end
   end
   i32.const 1
   i32.add
  else
   i32.const 0
  end
  i32.add
  local.get $0
  i32.load offset=16
  if (result i32)
   local.get $0
   i64.load32_u offset=16
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      i32.const 4
      i32.const 5
      local.get $1
      i64.const 268435456
      i64.lt_u
      select
     end
    end
   end
   i32.const 1
   i32.add
  else
   i32.const 0
  end
  i32.add
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheetItem#size (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  if (result i32)
   local.get $2
   call $assembly/proto/metashrew-runes/metashrew_runes.Rune#size
   local.tee $2
   if (result i32)
    local.get $2
    local.get $2
    i64.extend_i32_u
    local.tee $1
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $1
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $1
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $1
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
    i32.add
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  local.set $2
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $0
   i32.load offset=12
   local.get $0
   i64.load32_s offset=12
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $1
      i64.const 268435456
      i64.lt_u
      if (result i32)
       i32.const 4
      else
       local.get $1
       i64.const 34359738368
       i64.lt_u
       if (result i32)
        i32.const 5
       else
        local.get $1
        i64.const 4398046511104
        i64.lt_u
        if (result i32)
         i32.const 6
        else
         local.get $1
         i64.const 562949953421312
         i64.lt_u
         if (result i32)
          i32.const 7
         else
          local.get $1
          i64.const 72057594037927936
          i64.lt_u
          if (result i32)
           i32.const 8
          else
           i32.const 9
           i32.const 10
           local.get $1
           i64.const -9223372036854775808
           i64.lt_u
           select
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   i32.add
   i32.add
  else
   i32.const 0
  end
  local.get $2
  i32.add
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#size (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load
   local.tee $4
   i32.load offset=12
   i32.lt_s
   if
    local.get $4
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheetItem#size
    local.tee $4
    if
     local.get $1
     local.get $4
     i64.extend_i32_u
     local.tee $3
     i64.const 128
     i64.lt_u
     if (result i32)
      i32.const 1
     else
      local.get $3
      i64.const 16384
      i64.lt_u
      if (result i32)
       i32.const 2
      else
       local.get $3
       i64.const 2097152
       i64.lt_u
       if (result i32)
        i32.const 3
       else
        i32.const 4
        i32.const 5
        local.get $3
        i64.const 268435456
        i64.lt_u
        select
       end
      end
     end
     i32.const 1
     i32.add
     local.get $4
     i32.add
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Rune#encodeU8Array (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  drop
  local.get $0
  i32.load
  local.tee $5
  if
   local.get $5
   i32.load
   if (result i32)
    local.get $5
    i64.load32_u
    local.tee $2
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $2
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $2
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $2
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
   else
    i32.const 0
   end
   local.get $5
   i32.load offset=4
   if (result i32)
    local.get $5
    i64.load32_u offset=4
    local.tee $2
    i64.const 128
    i64.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $2
     i64.const 16384
     i64.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $2
      i64.const 2097152
      i64.lt_u
      if (result i32)
       i32.const 3
      else
       i32.const 4
       i32.const 5
       local.get $2
       i64.const 268435456
       i64.lt_u
       select
      end
     end
    end
    i32.const 1
    i32.add
   else
    i32.const 0
   end
   i32.add
   local.tee $4
   if
    local.get $1
    i64.const 10
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    local.get $4
    i64.extend_i32_u
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    i32.load
    drop
    local.get $5
    i32.load
    if
     local.get $1
     i64.const 8
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $5
     i64.load32_u
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    end
    local.get $5
    i32.load offset=4
    if
     local.get $1
     i64.const 16
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $5
     i64.load32_u offset=4
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    end
   end
  end
  local.get $0
  i32.load offset=4
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if
   local.get $1
   i64.const 18
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i32.load offset=4
   i64.load32_s offset=12
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $0
   i32.load offset=4
   local.set $4
   loop $for-loop|0
    local.get $3
    local.get $4
    i32.load offset=12
    i32.lt_s
    if
     local.get $1
     i32.load
     local.get $4
     local.get $3
     call $~lib/array/Array<u8>#__get
     call $~lib/array/Array<u8>#push
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
  end
  local.get $0
  i32.load offset=8
  if
   local.get $1
   i64.const 24
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i64.load32_u offset=8
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
  end
  local.get $0
  i32.load offset=12
  if
   local.get $1
   i64.const 32
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i64.load32_u offset=12
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
  end
  local.get $0
  i32.load offset=16
  if
   local.get $1
   i64.const 40
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i64.load32_u offset=16
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
  end
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#encodeU8Array (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.load
  drop
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load
   local.tee $3
   i32.load offset=12
   i32.lt_s
   if
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheetItem#size
    local.tee $3
    if
     local.get $1
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $3
     i64.extend_i32_u
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $0
     i32.load
     local.get $2
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.set $5
     i32.const 0
     local.set $3
     local.get $1
     i32.load
     drop
     local.get $5
     i32.load
     local.tee $6
     if
      local.get $6
      call $assembly/proto/metashrew-runes/metashrew_runes.Rune#size
      local.tee $4
      if
       local.get $1
       i64.const 10
       call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
       local.get $1
       local.get $4
       i64.extend_i32_u
       call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
       local.get $6
       local.get $1
       call $assembly/proto/metashrew-runes/metashrew_runes.Rune#encodeU8Array
      end
     end
     local.get $5
     i32.load offset=4
     i32.load offset=12
     i32.const 0
     i32.gt_s
     if
      local.get $1
      i64.const 18
      call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
      local.get $1
      local.get $5
      i32.load offset=4
      i64.load32_s offset=12
      call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
      local.get $5
      i32.load offset=4
      local.set $4
      loop $for-loop|02
       local.get $3
       local.get $4
       i32.load offset=12
       i32.lt_s
       if
        local.get $1
        i32.load
        local.get $4
        local.get $3
        call $~lib/array/Array<u8>#__get
        call $~lib/array/Array<u8>#push
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $for-loop|02
       end
      end
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#size (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $2
   i32.load offset=12
   local.get $2
   i64.load32_s offset=12
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $1
      i64.const 268435456
      i64.lt_u
      if (result i32)
       i32.const 4
      else
       local.get $1
       i64.const 34359738368
       i64.lt_u
       if (result i32)
        i32.const 5
       else
        local.get $1
        i64.const 4398046511104
        i64.lt_u
        if (result i32)
         i32.const 6
        else
         local.get $1
         i64.const 562949953421312
         i64.lt_u
         if (result i32)
          i32.const 7
         else
          local.get $1
          i64.const 72057594037927936
          i64.lt_u
          if (result i32)
           i32.const 8
          else
           i32.const 9
           i32.const 10
           local.get $1
           i64.const -9223372036854775808
           i64.lt_u
           select
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   i32.add
   i32.add
  else
   i32.const 0
  end
  local.set $2
  local.get $0
  i32.load offset=4
  if (result i32)
   local.get $0
   i64.load32_u offset=4
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      i32.const 4
      i32.const 5
      local.get $1
      i64.const 268435456
      i64.lt_u
      select
     end
    end
   end
   i32.const 1
   i32.add
  else
   i32.const 0
  end
  local.get $2
  i32.add
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.Output#size (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  i32.load offset=12
  i32.const 0
  i32.gt_s
  if (result i32)
   local.get $2
   i32.load offset=12
   local.get $2
   i64.load32_s offset=12
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $1
      i64.const 268435456
      i64.lt_u
      if (result i32)
       i32.const 4
      else
       local.get $1
       i64.const 34359738368
       i64.lt_u
       if (result i32)
        i32.const 5
       else
        local.get $1
        i64.const 4398046511104
        i64.lt_u
        if (result i32)
         i32.const 6
        else
         local.get $1
         i64.const 562949953421312
         i64.lt_u
         if (result i32)
          i32.const 7
         else
          local.get $1
          i64.const 72057594037927936
          i64.lt_u
          if (result i32)
           i32.const 8
          else
           i32.const 9
           i32.const 10
           local.get $1
           i64.const -9223372036854775808
           i64.lt_u
           select
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   i32.add
   i32.add
  else
   i32.const 0
  end
  local.set $2
  local.get $0
  i64.load offset=8
  i64.eqz
  if (result i32)
   i32.const 0
  else
   local.get $0
   i64.load offset=8
   local.tee $1
   i64.const 128
   i64.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $1
    i64.const 16384
    i64.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $1
     i64.const 2097152
     i64.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $1
      i64.const 268435456
      i64.lt_u
      if (result i32)
       i32.const 4
      else
       local.get $1
       i64.const 34359738368
       i64.lt_u
       if (result i32)
        i32.const 5
       else
        local.get $1
        i64.const 4398046511104
        i64.lt_u
        if (result i32)
         i32.const 6
        else
         local.get $1
         i64.const 562949953421312
         i64.lt_u
         if (result i32)
          i32.const 7
         else
          local.get $1
          i64.const 72057594037927936
          i64.lt_u
          if (result i32)
           i32.const 8
          else
           i32.const 9
           i32.const 10
           local.get $1
           i64.const -9223372036854775808
           i64.lt_u
           select
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   i32.add
  end
  local.get $2
  i32.add
 )
 (func $assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse#encodeU8Array (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.load
  local.set $4
  local.get $0
  i32.load
  local.tee $5
  if
   local.get $5
   call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#size
   local.tee $6
   if
    local.get $1
    i64.const 10
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    local.get $6
    i64.extend_i32_u
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $5
    local.get $1
    call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#encodeU8Array
   end
  end
  local.get $0
  i32.load offset=4
  local.tee $5
  if
   local.get $5
   call $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#size
   local.tee $6
   if
    local.get $1
    i64.const 18
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    local.get $6
    i64.extend_i32_u
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    i32.load
    drop
    local.get $5
    i32.load
    i32.load offset=12
    i32.const 0
    i32.gt_s
    if
     local.get $1
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $5
     i32.load
     i64.load32_s offset=12
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $5
     i32.load
     local.set $6
     loop $for-loop|0
      local.get $2
      local.get $6
      i32.load offset=12
      i32.lt_s
      if
       local.get $1
       i32.load
       local.get $6
       local.get $2
       call $~lib/array/Array<u8>#__get
       call $~lib/array/Array<u8>#push
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
    end
    local.get $5
    i32.load offset=4
    if
     local.get $1
     i64.const 16
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $5
     i64.load32_u offset=4
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    end
   end
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   call $assembly/proto/metashrew-runes/metashrew_runes.Output#size
   local.tee $5
   if
    local.get $1
    i64.const 26
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    local.get $5
    i64.extend_i32_u
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    i32.load
    drop
    local.get $2
    i32.load
    i32.load offset=12
    i32.const 0
    i32.gt_s
    if
     local.get $1
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $2
     i32.load
     i64.load32_s offset=12
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $2
     i32.load
     local.set $5
     loop $for-loop|04
      local.get $3
      local.get $5
      i32.load offset=12
      i32.lt_s
      if
       local.get $1
       i32.load
       local.get $5
       local.get $3
       call $~lib/array/Array<u8>#__get
       call $~lib/array/Array<u8>#push
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|04
      end
     end
    end
    local.get $2
    i64.load offset=8
    i64.const 0
    i64.ne
    if
     local.get $1
     i64.const 16
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     local.get $2
     i64.load offset=8
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    end
   end
  end
  local.get $0
  i32.load offset=12
  if
   local.get $1
   i64.const 32
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i64.load32_u offset=12
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
  end
  local.get $0
  i32.load offset=16
  if
   local.get $1
   i64.const 40
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
   local.get $1
   local.get $0
   i64.load32_u offset=16
   call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
  end
  local.get $4
 )
 (func $assembly/view/outpoint/outpoint (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.Outpoint.decodeDataView$2562 (result i32)
   call $~lib/metashrew-as/assembly/indexer/index/__host_len
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $0
   call $~lib/metashrew-as/assembly/indexer/index/__load_input
   local.get $0
   i32.const 4
   i32.const 1073741820
   call $~lib/arraybuffer/ArrayBuffer#slice
   local.set $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/dataview/DataView#constructor@varargs
   call $assembly/proto/metashrew-runes/__proto.SafeDecoder#constructor
   local.set $1
   call $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#constructor
   local.set $2
   loop $while-continue|0
    block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407 (result i32)
     i32.const 1
     local.get $1
     i32.load8_u offset=8
     br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     drop
     local.get $1
     i32.load offset=4
     i32.const 4096
     i32.gt_s
     if
      local.get $1
      i32.const 1
      i32.store8 offset=8
      i32.const 1
      br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     end
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     local.get $1
     i32.load offset=4
     local.get $1
     i32.load
     i32.load offset=8
     i32.ge_s
    end
    i32.eqz
    if
     block $case2|1
      block $case1|1
       local.get $1
       call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
       i32.wrap_i64
       local.tee $0
       i32.const 3
       i32.shr_u
       local.tee $3
       i32.const 1
       i32.ne
       if
        local.get $3
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       local.get $2
       local.get $1
       call $assembly/proto/metashrew-runes/__proto.SafeDecoder#bytes
       i32.store
       br $while-continue|0
      end
      local.get $2
      local.get $1
      call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
      i64.store32 offset=4
      br $while-continue|0
     end
     local.get $1
     local.get $0
     i32.const 7
     i32.and
     call $assembly/proto/metashrew-runes/__proto.SafeDecoder#skipType
     br $while-continue|0
    end
   end
   i32.const 0
   block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2414 (result i32)
    i32.const 1
    local.get $1
    i32.load8_u offset=8
    br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2414
    drop
    local.get $1
    i32.load offset=4
    i32.const 4096
    i32.gt_s
    if
     local.get $1
     i32.const 1
     i32.store8 offset=8
     i32.const 1
     br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2414
    end
    i32.const 0
   end
   br_if $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.Outpoint.decodeDataView$2562
   drop
   local.get $2
  end
  call $assembly/view/outpoint/outpointBase
  local.set $0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $1
  i32.const 4
  i32.const 97
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $1
  i32.store
  local.get $0
  local.get $2
  call $assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse#encodeU8Array
  local.tee $0
  i32.load offset=12
  local.tee $1
  i32.const 4
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $0
  i32.load offset=4
  local.get $1
  memory.copy
  local.get $2
 )
 (func $assembly/view/runes/runes~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $assembly/utils/fromArrayBuffer
  local.set $2
  call $assembly/proto/metashrew-runes/metashrew_runes.Rune#constructor
  local.set $1
  call $assembly/proto/metashrew-runes/metashrew_runes.RuneId#constructor
  local.tee $4
  global.get $assembly/indexer/constants/index/ETCHING_TO_RUNE_ID
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
  call $assembly/indexer/RuneId/RuneId.fromBytesU128
  local.tee $5
  i64.load
  i64.store32
  local.get $4
  local.get $5
  i32.load offset=8
  i32.store offset=4
  local.get $1
  local.get $4
  i32.store
  local.get $2
  call $assembly/utils/fieldToName
  local.set $2
  i32.const 1
  global.set $~argumentsLength
  local.get $2
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.set $2
  i32.const 1
  global.set $~argumentsLength
  local.get $2
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $4
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $2
  local.get $4
  i32.load offset=4
  local.set $5
  local.get $4
  i32.load offset=8
  local.set $6
  loop $for-loop|0
   local.get $3
   local.get $6
   i32.lt_s
   if
    local.get $3
    local.get $5
    i32.add
    i32.load8_u
    local.set $7
    i32.const 4
    global.set $~argumentsLength
    local.get $2
    local.get $7
    local.get $3
    local.get $4
    i32.const 18160
    i32.load
    call_indirect (type $4)
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $1
  local.get $2
  i32.store offset=4
  local.get $1
  global.get $assembly/indexer/constants/index/DIVISIBILITY
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u8>
  i32.store offset=8
  local.get $1
  global.get $assembly/indexer/constants/index/SYMBOL
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u8>
  i32.store offset=16
  local.get $1
  global.get $assembly/indexer/constants/index/SPACERS
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
  i32.store offset=12
  local.get $1
 )
 (func $assembly/view/runes/runes (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.PaginationInput.decodeDataView$2564 (result i32)
   call $~lib/metashrew-as/assembly/indexer/index/__host_len
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $0
   call $~lib/metashrew-as/assembly/indexer/index/__load_input
   local.get $0
   i32.const 4
   i32.const 1073741820
   call $~lib/arraybuffer/ArrayBuffer#slice
   local.set $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/dataview/DataView#constructor@varargs
   call $assembly/proto/metashrew-runes/__proto.SafeDecoder#constructor
   local.set $1
   i32.const 8
   i32.const 98
   call $~lib/rt/stub/__new
   local.tee $0
   i32.eqz
   if
    i32.const 0
    i32.const 0
    call $~lib/rt/stub/__new
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.store offset=4
   loop $while-continue|0
    block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407 (result i32)
     i32.const 1
     local.get $1
     i32.load8_u offset=8
     br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     drop
     local.get $1
     i32.load offset=4
     i32.const 4096
     i32.gt_s
     if
      local.get $1
      i32.const 1
      i32.store8 offset=8
      i32.const 1
      br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     end
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     local.get $1
     i32.load offset=4
     local.get $1
     i32.load
     i32.load offset=8
     i32.ge_s
    end
    i32.eqz
    if
     block $case2|1
      block $case1|1
       local.get $1
       call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
       i32.wrap_i64
       local.tee $2
       i32.const 3
       i32.shr_u
       local.tee $3
       i32.const 1
       i32.ne
       if
        local.get $3
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       local.get $0
       local.get $1
       call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
       i64.store32
       br $while-continue|0
      end
      local.get $0
      local.get $1
      call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
      i64.store32 offset=4
      br $while-continue|0
     end
     local.get $1
     local.get $2
     i32.const 7
     i32.and
     call $assembly/proto/metashrew-runes/__proto.SafeDecoder#skipType
     br $while-continue|0
    end
   end
   i32.const 0
   block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2446 (result i32)
    i32.const 1
    local.get $1
    i32.load8_u offset=8
    br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2446
    drop
    local.get $1
    i32.load offset=4
    i32.const 4096
    i32.gt_s
    if
     local.get $1
     i32.const 1
     i32.store8 offset=8
     i32.const 1
     br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2446
    end
    i32.const 0
   end
   br_if $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.PaginationInput.decodeDataView$2564
   drop
   local.get $0
  end
  local.tee $2
  i32.load
  local.set $0
  local.get $2
  i32.load offset=4
  local.set $3
  i32.const 0
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor
  local.set $1
  local.get $2
  i32.load offset=4
  if
   loop $for-loop|00
    local.get $0
    local.get $3
    i32.lt_u
    if
     local.get $1
     global.get $assembly/indexer/constants/index/ETCHINGS
     local.get $0
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|00
    end
   end
  else
   i32.const 1
   global.set $~argumentsLength
   global.get $assembly/indexer/constants/index/ETCHINGS
   local.tee $2
   i32.const 12192
   i32.const 0
   call $~lib/string/String.UTF8.encode@varargs
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
   call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor
   local.set $1
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $0
    local.get $1
    i32.load offset=12
    i32.lt_s
    if
     local.get $1
     local.get $0
     local.get $2
     local.get $0
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
     call $~lib/array/Array<~lib/metashrew-as/assembly/utils/box/Box>#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
  end
  local.get $1
  i32.load offset=12
  local.tee $4
  i32.const 2
  i32.const 89
  call $~lib/rt/__newArray
  local.tee $5
  i32.load offset=4
  local.set $2
  i32.const 0
  local.set $0
  loop $for-loop|001
   local.get $0
   local.get $4
   local.get $1
   i32.load offset=12
   local.tee $3
   local.get $3
   local.get $4
   i32.gt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.const 2
    i32.shl
    local.tee $3
    local.get $1
    i32.load offset=4
    i32.add
    i32.load
    local.set $6
    i32.const 3
    global.set $~argumentsLength
    local.get $2
    local.get $3
    i32.add
    local.get $6
    local.get $0
    local.get $1
    i32.const 18192
    i32.load
    call_indirect (type $3)
    i32.store
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|001
   end
  end
  i32.const 4
  i32.const 100
  call $~lib/rt/stub/__new
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.Rune>#constructor
  i32.store
  local.get $0
  local.get $5
  i32.store
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $1
  i32.const 4
  i32.const 97
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $1
  i32.store
  local.get $2
  i32.load
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|01
   local.get $1
   local.get $0
   i32.load
   local.tee $4
   i32.load offset=12
   i32.lt_s
   if
    local.get $4
    local.get $1
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    call $assembly/proto/metashrew-runes/metashrew_runes.Rune#size
    local.tee $4
    if
     local.get $2
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $2
     local.get $4
     i64.extend_i32_u
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $0
     i32.load
     local.get $1
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.get $2
     call $assembly/proto/metashrew-runes/metashrew_runes.Rune#encodeU8Array
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|01
   end
  end
  local.get $3
  i32.load offset=12
  local.tee $0
  i32.const 4
  call $~lib/rt/stub/__new
  local.tee $1
  local.get $3
  i32.load offset=4
  local.get $0
  memory.copy
  local.get $1
 )
 (func $~lib/metashrew-spendables/assembly/indexer/Index.findOutpointsForAddress (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/metashrew-spendables/assembly/tables/OUTPOINTS_FOR_ADDRESS
  local.get $0
  call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
  local.set $6
  i32.const 0
  call $~lib/array/Array<~lib/arraybuffer/ArrayBuffer>#constructor
  local.set $7
  loop $for-loop|0
   i32.const 1
   global.set $~argumentsLength
   local.get $6
   i32.const 12192
   i32.const 0
   call $~lib/string/String.UTF8.encode@varargs
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
   call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#getValue<u32>
   local.get $5
   i32.gt_u
   if
    local.get $6
    local.get $5
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#selectIndex
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
    local.set $8
    global.get $~lib/metashrew-spendables/assembly/tables/OUTPOINT_SPENDABLE_BY
    local.get $8
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
    call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#get
    local.set $4
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    local.set $2
    i32.const 0
    local.set $3
    block $~lib/util/memory/memcmp|inlined.1
     local.get $4
     local.get $0
     local.tee $1
     i32.eq
     br_if $~lib/util/memory/memcmp|inlined.1
     local.get $1
     i32.const 7
     i32.and
     local.get $4
     i32.const 7
     i32.and
     i32.eq
     if
      loop $while-continue|1
       local.get $1
       i32.const 7
       i32.and
       if
        i32.const 0
        local.set $3
        local.get $2
        i32.eqz
        br_if $~lib/util/memory/memcmp|inlined.1
        local.get $1
        i32.load8_u
        local.tee $9
        local.get $4
        i32.load8_u
        local.tee $10
        i32.sub
        local.set $3
        local.get $9
        local.get $10
        i32.ne
        br_if $~lib/util/memory/memcmp|inlined.1
        local.get $2
        i32.const 1
        i32.sub
        local.set $2
        local.get $1
        i32.const 1
        i32.add
        local.set $1
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $while-continue|1
       end
      end
      loop $while-continue|2
       local.get $2
       i32.const 8
       i32.ge_u
       if
        local.get $1
        i64.load
        local.get $4
        i64.load
        i64.eq
        if
         local.get $1
         i32.const 8
         i32.add
         local.set $1
         local.get $4
         i32.const 8
         i32.add
         local.set $4
         local.get $2
         i32.const 8
         i32.sub
         local.set $2
         br $while-continue|2
        end
       end
      end
     end
     loop $while-continue|3
      local.get $2
      local.tee $3
      i32.const 1
      i32.sub
      local.set $2
      local.get $3
      if
       local.get $1
       i32.load8_u
       local.tee $9
       local.get $4
       i32.load8_u
       local.tee $10
       i32.sub
       local.set $3
       local.get $9
       local.get $10
       i32.ne
       br_if $~lib/util/memory/memcmp|inlined.1
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       local.get $4
       i32.const 1
       i32.add
       local.set $4
       br $while-continue|3
      end
     end
     i32.const 0
     local.set $3
    end
    local.get $3
    i32.eqz
    if
     local.get $7
     local.get $8
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $7
 )
 (func $assembly/view/wallet/wallet_test (result i32)
  i32.const 1
  global.set $~argumentsLength
  i32.const 18224
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  call $~lib/metashrew-spendables/assembly/indexer/Index.findOutpointsForAddress
  drop
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
 )
 (func $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  i32.const 16
  i32.const 102
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
 )
 (func $assembly/view/wallet/runesbyaddress (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  call $~lib/metashrew-as/assembly/indexer/index/__host_len
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $0
  call $~lib/metashrew-as/assembly/indexer/index/__load_input
  local.get $0
  i32.const 4
  i32.const 1073741820
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $0
  block $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.WalletRequest.decodeDataView$1916 (result i32)
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/dataview/DataView#constructor@varargs
   call $assembly/proto/metashrew-runes/__proto.SafeDecoder#constructor
   local.set $3
   i32.const 4
   i32.const 101
   call $~lib/rt/stub/__new
   local.tee $0
   i32.eqz
   if
    i32.const 0
    i32.const 0
    call $~lib/rt/stub/__new
    local.set $0
   end
   local.get $0
   i32.const 0
   call $~lib/array/Array<u8>#constructor
   i32.store
   loop $while-continue|0
    block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407 (result i32)
     i32.const 1
     local.get $3
     i32.load8_u offset=8
     br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     drop
     local.get $3
     i32.load offset=4
     i32.const 4096
     i32.gt_s
     if
      local.get $3
      i32.const 1
      i32.store8 offset=8
      i32.const 1
      br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2407
     end
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     local.get $3
     i32.load offset=4
     local.get $3
     i32.load
     i32.load offset=8
     i32.ge_s
    end
    i32.eqz
    if
     local.get $3
     call $assembly/proto/metashrew-runes/__proto.Decoder#varint@override
     i32.wrap_i64
     local.tee $1
     i32.const 3
     i32.shr_u
     i32.const 1
     i32.eq
     if
      local.get $0
      local.get $3
      call $assembly/proto/metashrew-runes/__proto.SafeDecoder#bytes
      i32.store
      br $while-continue|0
     end
     local.get $3
     local.get $1
     i32.const 7
     i32.and
     call $assembly/proto/metashrew-runes/__proto.SafeDecoder#skipType
     br $while-continue|0
    end
   end
   i32.const 0
   block $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2458 (result i32)
    i32.const 1
    local.get $3
    i32.load8_u offset=8
    br_if $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2458
    drop
    local.get $3
    i32.load offset=4
    i32.const 4096
    i32.gt_s
    if
     local.get $3
     i32.const 1
     i32.store8 offset=8
     i32.const 1
     br $__inlined_func$assembly/proto/metashrew-runes/__proto.SafeDecoder#invalid$2458
    end
    i32.const 0
   end
   br_if $__inlined_func$assembly/proto/metashrew-runes/metashrew_runes.WalletRequest.decodeDataView$1916
   drop
   local.get $0
  end
  i32.load
  i32.load
  call $~lib/metashrew-spendables/assembly/indexer/Index.findOutpointsForAddress
  local.set $6
  call $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse>#constructor
  local.set $5
  i32.const 16
  i32.const 70
  call $~lib/rt/stub/__new
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 0
  i32.const 32
  memory.fill
  local.get $4
  local.get $0
  i32.store
  local.get $4
  local.get $0
  i32.store offset=4
  local.get $4
  i32.const 32
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.store offset=12
  loop $for-loop|0
   local.get $8
   local.get $6
   i32.load offset=12
   i32.lt_s
   if
    call $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#constructor
    local.set $3
    local.get $6
    local.get $8
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.const 0
    i32.const 32
    call $~lib/arraybuffer/ArrayBuffer#slice
    local.set $0
    i32.const 1
    global.set $~argumentsLength
    local.get $3
    local.get $0
    call $~lib/typedarray/Uint8Array.wrap@varargs
    i32.store
    local.get $6
    local.get $8
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    i32.const 32
    i32.const 1073741820
    call $~lib/arraybuffer/ArrayBuffer#slice
    local.tee $0
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    call $~lib/metashrew-as/assembly/utils/box/Box#constructor
    local.tee $1
    i32.load
    local.tee $0
    i32.load
    local.set $7
    local.get $1
    local.get $0
    i32.const 4
    i32.add
    i32.store
    local.get $1
    local.get $1
    i32.load offset=4
    i32.const 4
    i32.sub
    i32.store offset=4
    local.get $3
    local.get $7
    i32.store offset=4
    local.get $3
    call $assembly/view/outpoint/outpointBase
    local.tee $0
    i32.load
    i32.load
    i32.load offset=12
    if
     local.get $4
     global.get $assembly/indexer/constants/index/OUTPOINT_TO_RUNES
     local.get $6
     local.get $8
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     call $~lib/metashrew-as/assembly/indexer/tables/IndexPointer#select
     call $assembly/indexer/BalanceSheet/BalanceSheet.load
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
     local.get $5
     local.get $0
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Output>#push
     drop
    end
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  i32.const 8
  i32.const 103
  call $~lib/rt/stub/__new
  local.tee $1
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
   local.set $1
  end
  local.get $1
  call $~lib/array/Array<assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse>#constructor
  i32.store
  local.get $1
  call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#constructor
  i32.store offset=4
  local.get $1
  local.get $5
  i32.store
  call $assembly/indexer/BalanceSheet/BalanceSheet#constructor
  local.set $8
  i32.const 0
  local.set $7
  local.get $4
  i32.load offset=12
  local.set $3
  loop $for-loop|00
   local.get $7
   local.get $3
   local.get $4
   i32.load offset=12
   local.tee $0
   local.get $0
   local.get $3
   i32.gt_s
   select
   i32.lt_s
   if
    local.get $4
    i32.load offset=4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $0
    i32.const 4
    global.set $~argumentsLength
    local.get $8
    local.get $0
    local.get $7
    local.get $4
    i32.const 18544
    i32.load
    call_indirect (type $4)
    local.set $8
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|00
   end
  end
  local.get $1
  local.get $8
  call $assembly/view/outpoint/balanceSheetToProtobuf
  i32.store offset=4
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u8>#constructor
  local.set $0
  i32.const 4
  i32.const 97
  call $~lib/rt/stub/__new
  local.tee $6
  i32.const 0
  i32.store
  local.get $6
  local.get $0
  i32.store
  local.get $6
  i32.load
  local.set $5
  i32.const 0
  local.set $7
  loop $for-loop|01
   local.get $7
   local.get $1
   i32.load
   local.tee $0
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    local.get $7
    call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
    local.tee $4
    i32.load
    local.tee $0
    if (result i32)
     local.get $0
     call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#size
     local.tee $0
     if (result i32)
      local.get $0
      local.get $0
      i64.extend_i32_u
      local.tee $2
      i64.const 128
      i64.lt_u
      if (result i32)
       i32.const 1
      else
       local.get $2
       i64.const 16384
       i64.lt_u
       if (result i32)
        i32.const 2
       else
        local.get $2
        i64.const 2097152
        i64.lt_u
        if (result i32)
         i32.const 3
        else
         i32.const 4
         i32.const 5
         local.get $2
         i64.const 268435456
         i64.lt_u
         select
        end
       end
      end
      i32.const 1
      i32.add
      i32.add
     else
      i32.const 0
     end
    else
     i32.const 0
    end
    local.set $0
    local.get $4
    i32.load offset=4
    local.tee $3
    if
     local.get $3
     call $assembly/proto/metashrew-runes/metashrew_runes.Outpoint#size
     local.tee $3
     if
      local.get $0
      local.get $3
      i64.extend_i32_u
      local.tee $2
      i64.const 128
      i64.lt_u
      if (result i32)
       i32.const 1
      else
       local.get $2
       i64.const 16384
       i64.lt_u
       if (result i32)
        i32.const 2
       else
        local.get $2
        i64.const 2097152
        i64.lt_u
        if (result i32)
         i32.const 3
        else
         i32.const 4
         i32.const 5
         local.get $2
         i64.const 268435456
         i64.lt_u
         select
        end
       end
      end
      i32.const 1
      i32.add
      local.get $3
      i32.add
      i32.add
      local.set $0
     end
    end
    local.get $4
    i32.load offset=8
    local.tee $3
    if
     local.get $3
     call $assembly/proto/metashrew-runes/metashrew_runes.Output#size
     local.tee $3
     if
      local.get $0
      local.get $3
      i64.extend_i32_u
      local.tee $2
      i64.const 128
      i64.lt_u
      if (result i32)
       i32.const 1
      else
       local.get $2
       i64.const 16384
       i64.lt_u
       if (result i32)
        i32.const 2
       else
        local.get $2
        i64.const 2097152
        i64.lt_u
        if (result i32)
         i32.const 3
        else
         i32.const 4
         i32.const 5
         local.get $2
         i64.const 268435456
         i64.lt_u
         select
        end
       end
      end
      i32.const 1
      i32.add
      local.get $3
      i32.add
      i32.add
      local.set $0
     end
    end
    local.get $4
    i32.load offset=12
    if (result i32)
     local.get $4
     i64.load32_u offset=12
     local.tee $2
     i64.const 128
     i64.lt_u
     if (result i32)
      i32.const 1
     else
      local.get $2
      i64.const 16384
      i64.lt_u
      if (result i32)
       i32.const 2
      else
       local.get $2
       i64.const 2097152
       i64.lt_u
       if (result i32)
        i32.const 3
       else
        i32.const 4
        i32.const 5
        local.get $2
        i64.const 268435456
        i64.lt_u
        select
       end
      end
     end
     i32.const 1
     i32.add
    else
     i32.const 0
    end
    local.get $0
    i32.add
    local.get $4
    i32.load offset=16
    if (result i32)
     local.get $4
     i64.load32_u offset=16
     local.tee $2
     i64.const 128
     i64.lt_u
     if (result i32)
      i32.const 1
     else
      local.get $2
      i64.const 16384
      i64.lt_u
      if (result i32)
       i32.const 2
      else
       local.get $2
       i64.const 2097152
       i64.lt_u
       if (result i32)
        i32.const 3
       else
        i32.const 4
        i32.const 5
        local.get $2
        i64.const 268435456
        i64.lt_u
        select
       end
      end
     end
     i32.const 1
     i32.add
    else
     i32.const 0
    end
    i32.add
    local.tee $0
    if
     local.get $6
     i64.const 10
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $6
     local.get $0
     i64.extend_i32_u
     call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
     local.get $1
     i32.load
     local.get $7
     call $~lib/array/Array<~lib/metashrew-as/assembly/blockdata/transaction/Input>#__get
     local.get $6
     call $assembly/proto/metashrew-runes/metashrew_runes.OutpointResponse#encodeU8Array
     drop
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|01
   end
  end
  local.get $1
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#size
   local.tee $0
   if
    local.get $6
    i64.const 18
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $6
    local.get $0
    i64.extend_i32_u
    call $~lib/metashrew-as/assembly/proto/metashrew/__proto.Encoder#varint64
    local.get $1
    local.get $6
    call $assembly/proto/metashrew-runes/metashrew_runes.BalanceSheet#encodeU8Array
   end
  end
  local.get $5
  i32.load offset=12
  local.tee $1
  i32.const 4
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $5
  i32.load offset=4
  local.get $1
  memory.copy
  local.get $0
 )
 (func $~lib/rt/stub/__unpin (param $0 i32)
 )
 (func $~lib/rt/stub/__collect
 )
 (func $assembly/proto/protorune/__proto.Decoder#varint@override (param $0 i32) (result i64)
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  i32.const 64
  i32.eq
  if
   local.get $0
   call $assembly/proto/protorune/__proto.SafeDecoder#varint
   return
  end
  local.get $0
  call $assembly/proto/protorune/__proto.Decoder#varint
 )
 (func $assembly/proto/metashrew-runes/__proto.Decoder#varint@override (param $0 i32) (result i64)
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  i32.const 95
  i32.eq
  if
   local.get $0
   call $assembly/proto/protorune/__proto.SafeDecoder#varint
   return
  end
  local.get $0
  call $assembly/proto/metashrew-runes/__proto.Decoder#varint
 )
 (func $~start
  (local $0 i32)
  i32.const 18988
  global.set $~lib/rt/stub/offset
  i32.const 0
  i32.const 5
  call $~lib/rt/stub/__new
  local.tee $0
  if (result i32)
   local.get $0
  else
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
  end
  drop
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#constructor"
  global.set $~lib/metashrew-as/assembly/indexer/index/_updates
  call $"~lib/map/Map<~lib/string/String,~lib/arraybuffer/ArrayBuffer>#constructor"
  global.set $~lib/metashrew-as/assembly/indexer/index/_updateKeys
  i32.const 0
  i32.const 8
  call $~lib/rt/stub/__new
  local.tee $0
  if (result i32)
   local.get $0
  else
   i32.const 0
   i32.const 0
   call $~lib/rt/stub/__new
  end
  drop
  i32.const 1
  global.set $~argumentsLength
  i32.const 2768
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  drop
  i32.const 3260
  i32.load
  i32.eqz
  if
   i32.const 3344
   i32.const 3408
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3264
  i32.load8_u
  drop
  call $start:assembly/indexer/constants/index
  i32.const 1
  global.set $~argumentsLength
  i32.const 5232
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $~lib/metashrew-spendables/assembly/tables/OUTPOINTS_FOR_ADDRESS
  i32.const 1
  global.set $~argumentsLength
  i32.const 5296
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $~lib/metashrew-spendables/assembly/tables/OUTPOINT_SPENDABLE_BY
  i32.const 1
  global.set $~argumentsLength
  i32.const 5360
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  global.set $~lib/metashrew-spendables/assembly/tables/OUTPOINT_TO_OUTPUT
 )
)
